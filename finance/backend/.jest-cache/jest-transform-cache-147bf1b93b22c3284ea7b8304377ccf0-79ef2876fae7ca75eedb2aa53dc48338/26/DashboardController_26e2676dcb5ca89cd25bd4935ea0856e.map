{"version":3,"names":["cov_2ic6xj3s86","actualCoverage","DashboardService","s","require","asyncHandler","DashboardController","getStats","req","res","f","period","b","query","stats","json","error","console","status","code","getRevenueChart","type","chartData","getPaymentsChart","getRecentActivities","limit","activities","module","exports"],"sources":["DashboardController.js"],"sourcesContent":["const { DashboardService } = require('../services/DashboardService');\nconst { asyncHandler } = require('../middleware/errorMiddleware');\n\nclass DashboardController {\n  /**\n   * Obter estatísticas gerais do dashboard\n   * @route GET /api/dashboard/stats\n   * @access Public (temporário para desenvolvimento)\n   */\n  static getStats = asyncHandler(async (req, res) => {\n    const { period = '30' } = req.query;\n    \n    try {\n      const stats = await DashboardService.getStats(period);\n      res.json({ stats });\n    } catch (error) {\n      console.error('Erro ao buscar estatísticas:', error);\n      res.status(500).json({\n        error: 'Erro interno do servidor',\n        code: 'STATS_FETCH_ERROR'\n      });\n    }\n  });\n\n  /**\n   * Obter gráfico de receita por período\n   * @route GET /api/dashboard/revenue-chart\n   * @access Private\n   */\n  static getRevenueChart = asyncHandler(async (req, res) => {\n    const { period = '12', type = 'monthly' } = req.query;\n    \n    try {\n      const chartData = await DashboardService.getRevenueChart(period, type);\n      res.json(chartData);\n    } catch (error) {\n      console.error('Erro ao buscar dados do gráfico:', error);\n      res.status(500).json({\n        error: 'Erro interno do servidor',\n        code: 'CHART_FETCH_ERROR'\n      });\n    }\n  });\n\n  /**\n   * Obter gráfico de pagamentos por status\n   * @route GET /api/dashboard/payments-chart\n   * @access Private\n   */\n  static getPaymentsChart = asyncHandler(async (req, res) => {\n    const { period = '30' } = req.query;\n    \n    try {\n      const chartData = await DashboardService.getPaymentsChart(period);\n      res.json(chartData);\n    } catch (error) {\n      console.error('Erro ao buscar dados do gráfico de pagamentos:', error);\n      res.status(500).json({\n        error: 'Erro interno do servidor',\n        code: 'PAYMENTS_CHART_FETCH_ERROR'\n      });\n    }\n  });\n\n  /**\n   * Obter atividades recentes\n   * @route GET /api/dashboard/recent-activities\n   * @access Private\n   */\n  static getRecentActivities = asyncHandler(async (req, res) => {\n    const { limit = '10' } = req.query;\n    \n    try {\n      const activities = await DashboardService.getRecentActivities(limit);\n      res.json({ activities });\n    } catch (error) {\n      console.error('Erro ao buscar atividades recentes:', error);\n      res.status(500).json({\n        error: 'Erro interno do servidor',\n        code: 'ACTIVITIES_FETCH_ERROR'\n      });\n    }\n  });\n}\n\nmodule.exports = { DashboardController };"],"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","ignoreList":[]}