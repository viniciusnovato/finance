{"version":3,"names":["cov_1sw2zjmtip","actualCoverage","createClient","s","require","config","supabaseUrl","process","env","SUPABASE_URL","supabaseKey","SUPABASE_ANON_KEY","b","console","error","exit","supabase","setupBasicData","f","log","data","company","companyError","from","upsert","id","name","legal_name","tax_id","email","phone","address","city","postal_code","country","onConflict","select","message","branch","branchError","company_id","code","manager_name","is_active","user","userError","password_hash","first_name","last_name","role","branch_id","main","module","then","success","exports"],"sources":["setup_basic_data.js"],"sourcesContent":["const { createClient } = require('@supabase/supabase-js');\nrequire('dotenv').config();\n\n// Configuração do Supabase\nconst supabaseUrl = process.env.SUPABASE_URL;\nconst supabaseKey = process.env.SUPABASE_ANON_KEY;\n\nif (!supabaseUrl || !supabaseKey) {\n  console.error('❌ Variáveis de ambiente SUPABASE_URL e SUPABASE_ANON_KEY são obrigatórias');\n  process.exit(1);\n}\n\nconst supabase = createClient(supabaseUrl, supabaseKey);\n\n// Função para criar dados básicos necessários\nasync function setupBasicData() {\n  try {\n    console.log('🏗️  Configurando dados básicos...');\n    \n    // 1. Criar empresa padrão\n    console.log('📊 Criando empresa padrão...');\n    const { data: company, error: companyError } = await supabase\n      .from('companies')\n      .upsert({\n        id: '00000000-0000-0000-0000-000000000001',\n        name: 'Instituto Areluna',\n        legal_name: 'Instituto Areluna Lda',\n        tax_id: '123456789',\n        email: 'contato@institutoareluna.com',\n        phone: '+351 123 456 789',\n        address: 'Rua Principal, 123',\n        city: 'Lisboa',\n        postal_code: '1000-001',\n        country: 'Portugal'\n      }, { onConflict: 'id' })\n      .select();\n    \n    if (companyError) {\n      console.error('❌ Erro ao criar empresa:', companyError.message);\n      return false;\n    }\n    console.log('✅ Empresa criada com sucesso');\n    \n    // 2. Criar filial padrão\n    console.log('🏢 Criando filial padrão...');\n    const { data: branch, error: branchError } = await supabase\n      .from('branches')\n      .upsert({\n        id: '00000000-0000-0000-0000-000000000001',\n        company_id: '00000000-0000-0000-0000-000000000001',\n        name: 'Filial Principal',\n        code: 'MAIN',\n        email: 'principal@institutoareluna.com',\n        phone: '+351 123 456 789',\n        address: 'Rua Principal, 123',\n        city: 'Lisboa',\n        postal_code: '1000-001',\n        manager_name: 'Administrador',\n        is_active: true\n      }, { onConflict: 'id' })\n      .select();\n    \n    if (branchError) {\n      console.error('❌ Erro ao criar filial:', branchError.message);\n      return false;\n    }\n    console.log('✅ Filial criada com sucesso');\n    \n    // 3. Criar usuário administrador padrão\n    console.log('👤 Criando usuário administrador...');\n    const { data: user, error: userError } = await supabase\n      .from('users')\n      .upsert({\n        id: '00000000-0000-0000-0000-000000000001',\n        email: 'admin@institutoareluna.com',\n        password_hash: '$2b$10$dummy.hash.for.import.user.only',\n        first_name: 'Administrador',\n        last_name: 'Sistema',\n        role: 'admin',\n        branch_id: '00000000-0000-0000-0000-000000000001',\n        is_active: true\n      }, { onConflict: 'id' })\n      .select();\n    \n    if (userError) {\n      console.error('❌ Erro ao criar usuário:', userError.message);\n      return false;\n    }\n    console.log('✅ Usuário administrador criado com sucesso');\n    \n    console.log('\\n🎉 Dados básicos configurados com sucesso!');\n    console.log('==================================================');\n    console.log('📊 Empresa ID: 00000000-0000-0000-0000-000000000001');\n    console.log('🏢 Filial ID: 00000000-0000-0000-0000-000000000001');\n    console.log('👤 Usuário ID: 00000000-0000-0000-0000-000000000001');\n    console.log('==================================================');\n    \n    return true;\n    \n  } catch (error) {\n    console.error('❌ Erro fatal:', error);\n    return false;\n  }\n}\n\n// Executar se chamado diretamente\nif (require.main === module) {\n  setupBasicData().then(success => {\n    if (!success) {\n      process.exit(1);\n    }\n  });\n}\n\nmodule.exports = { setupBasicData };"],"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","ignoreList":[]}