0a7cffc44374fc7f1ad49ea5e20e0b73
/* istanbul ignore next */
function cov_1kmmmmraxz() {
  var path = "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/scripts/import_contracts_mapped.js";
  var hash = "2589ac335f1f053df51ce5e6ab1aaeb63e4050b2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/scripts/import_contracts_mapped.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 27
        }
      },
      "1": {
        start: {
          line: 2,
          column: 25
        },
        end: {
          line: 2,
          column: 57
        }
      },
      "2": {
        start: {
          line: 3,
          column: 11
        },
        end: {
          line: 3,
          column: 24
        }
      },
      "3": {
        start: {
          line: 4,
          column: 12
        },
        end: {
          line: 4,
          column: 33
        }
      },
      "4": {
        start: {
          line: 5,
          column: 13
        },
        end: {
          line: 5,
          column: 28
        }
      },
      "5": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 17,
          column: 1
        }
      },
      "6": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 67
        }
      },
      "7": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 22,
          column: 54
        }
      },
      "8": {
        start: {
          line: 25,
          column: 46
        },
        end: {
          line: 27,
          column: 40
        }
      },
      "9": {
        start: {
          line: 29,
          column: 2
        },
        end: {
          line: 32,
          column: 3
        }
      },
      "10": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 64
        }
      },
      "11": {
        start: {
          line: 31,
          column: 4
        },
        end: {
          line: 31,
          column: 21
        }
      },
      "12": {
        start: {
          line: 35,
          column: 21
        },
        end: {
          line: 35,
          column: 30
        }
      },
      "13": {
        start: {
          line: 36,
          column: 22
        },
        end: {
          line: 36,
          column: 55
        }
      },
      "14": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 60,
          column: 5
        }
      },
      "15": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 59,
          column: 9
        }
      },
      "16": {
        start: {
          line: 42,
          column: 20
        },
        end: {
          line: 42,
          column: 77
        }
      },
      "17": {
        start: {
          line: 43,
          column: 8
        },
        end: {
          line: 43,
          column: 36
        }
      },
      "18": {
        start: {
          line: 47,
          column: 24
        },
        end: {
          line: 47,
          column: 33
        }
      },
      "19": {
        start: {
          line: 49,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "20": {
        start: {
          line: 50,
          column: 22
        },
        end: {
          line: 50,
          column: 89
        }
      },
      "21": {
        start: {
          line: 51,
          column: 24
        },
        end: {
          line: 51,
          column: 43
        }
      },
      "22": {
        start: {
          line: 52,
          column: 10
        },
        end: {
          line: 54,
          column: 11
        }
      },
      "23": {
        start: {
          line: 53,
          column: 12
        },
        end: {
          line: 53,
          column: 44
        }
      },
      "24": {
        start: {
          line: 57,
          column: 8
        },
        end: {
          line: 57,
          column: 79
        }
      },
      "25": {
        start: {
          line: 58,
          column: 8
        },
        end: {
          line: 58,
          column: 25
        }
      },
      "26": {
        start: {
          line: 64,
          column: 2
        },
        end: {
          line: 64,
          column: 59
        }
      },
      "27": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 65,
          column: 68
        }
      },
      "28": {
        start: {
          line: 68,
          column: 24
        },
        end: {
          line: 68,
          column: 51
        }
      },
      "29": {
        start: {
          line: 70,
          column: 14
        },
        end: {
          line: 70,
          column: 15
        }
      },
      "30": {
        start: {
          line: 71,
          column: 16
        },
        end: {
          line: 71,
          column: 17
        }
      },
      "31": {
        start: {
          line: 72,
          column: 15
        },
        end: {
          line: 72,
          column: 16
        }
      },
      "32": {
        start: {
          line: 73,
          column: 23
        },
        end: {
          line: 73,
          column: 24
        }
      },
      "33": {
        start: {
          line: 75,
          column: 24
        },
        end: {
          line: 75,
          column: 59
        }
      },
      "34": {
        start: {
          line: 77,
          column: 2
        },
        end: {
          line: 138,
          column: 5
        }
      },
      "35": {
        start: {
          line: 78,
          column: 4
        },
        end: {
          line: 137,
          column: 9
        }
      },
      "36": {
        start: {
          line: 81,
          column: 8
        },
        end: {
          line: 81,
          column: 16
        }
      },
      "37": {
        start: {
          line: 83,
          column: 8
        },
        end: {
          line: 124,
          column: 9
        }
      },
      "38": {
        start: {
          line: 85,
          column: 29
        },
        end: {
          line: 85,
          column: 61
        }
      },
      "39": {
        start: {
          line: 87,
          column: 10
        },
        end: {
          line: 93,
          column: 11
        }
      },
      "40": {
        start: {
          line: 88,
          column: 12
        },
        end: {
          line: 90,
          column: 13
        }
      },
      "41": {
        start: {
          line: 89,
          column: 14
        },
        end: {
          line: 89,
          column: 94
        }
      },
      "42": {
        start: {
          line: 91,
          column: 12
        },
        end: {
          line: 91,
          column: 29
        }
      },
      "43": {
        start: {
          line: 92,
          column: 12
        },
        end: {
          line: 92,
          column: 19
        }
      },
      "44": {
        start: {
          line: 95,
          column: 31
        },
        end: {
          line: 105,
          column: 11
        }
      },
      "45": {
        start: {
          line: 107,
          column: 34
        },
        end: {
          line: 110,
          column: 21
        }
      },
      "46": {
        start: {
          line: 112,
          column: 10
        },
        end: {
          line: 120,
          column: 11
        }
      },
      "47": {
        start: {
          line: 113,
          column: 12
        },
        end: {
          line: 113,
          column: 81
        }
      },
      "48": {
        start: {
          line: 114,
          column: 12
        },
        end: {
          line: 114,
          column: 21
        }
      },
      "49": {
        start: {
          line: 116,
          column: 12
        },
        end: {
          line: 118,
          column: 13
        }
      },
      "50": {
        start: {
          line: 117,
          column: 14
        },
        end: {
          line: 117,
          column: 71
        }
      },
      "51": {
        start: {
          line: 119,
          column: 12
        },
        end: {
          line: 119,
          column: 22
        }
      },
      "52": {
        start: {
          line: 122,
          column: 10
        },
        end: {
          line: 122,
          column: 81
        }
      },
      "53": {
        start: {
          line: 123,
          column: 10
        },
        end: {
          line: 123,
          column: 19
        }
      },
      "54": {
        start: {
          line: 127,
          column: 8
        },
        end: {
          line: 127,
          column: 63
        }
      },
      "55": {
        start: {
          line: 128,
          column: 8
        },
        end: {
          line: 128,
          column: 51
        }
      },
      "56": {
        start: {
          line: 129,
          column: 8
        },
        end: {
          line: 129,
          column: 44
        }
      },
      "57": {
        start: {
          line: 130,
          column: 8
        },
        end: {
          line: 130,
          column: 40
        }
      },
      "58": {
        start: {
          line: 131,
          column: 8
        },
        end: {
          line: 131,
          column: 67
        }
      },
      "59": {
        start: {
          line: 132,
          column: 8
        },
        end: {
          line: 132,
          column: 60
        }
      },
      "60": {
        start: {
          line: 135,
          column: 8
        },
        end: {
          line: 135,
          column: 64
        }
      },
      "61": {
        start: {
          line: 136,
          column: 8
        },
        end: {
          line: 136,
          column: 60
        }
      },
      "62": {
        start: {
          line: 141,
          column: 0
        },
        end: {
          line: 141,
          column: 39
        }
      }
    },
    fnMap: {
      "0": {
        name: "createClientMapping",
        decl: {
          start: {
            line: 21,
            column: 15
          },
          end: {
            line: 21,
            column: 34
          }
        },
        loc: {
          start: {
            line: 21,
            column: 37
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 21
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 38,
            column: 21
          },
          end: {
            line: 38,
            column: 22
          }
        },
        loc: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 38
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 41,
            column: 18
          },
          end: {
            line: 41,
            column: 19
          }
        },
        loc: {
          start: {
            line: 41,
            column: 27
          },
          end: {
            line: 44,
            column: 7
          }
        },
        line: 41
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 45,
            column: 17
          },
          end: {
            line: 45,
            column: 18
          }
        },
        loc: {
          start: {
            line: 45,
            column: 23
          },
          end: {
            line: 59,
            column: 7
          }
        },
        line: 45
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 49,
            column: 26
          },
          end: {
            line: 49,
            column: 27
          }
        },
        loc: {
          start: {
            line: 49,
            column: 38
          },
          end: {
            line: 55,
            column: 9
          }
        },
        line: 49
      },
      "5": {
        name: "importContracts",
        decl: {
          start: {
            line: 63,
            column: 15
          },
          end: {
            line: 63,
            column: 30
          }
        },
        loc: {
          start: {
            line: 63,
            column: 33
          },
          end: {
            line: 139,
            column: 1
          }
        },
        line: 63
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 77,
            column: 21
          },
          end: {
            line: 77,
            column: 22
          }
        },
        loc: {
          start: {
            line: 77,
            column: 34
          },
          end: {
            line: 138,
            column: 3
          }
        },
        line: 77
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 80,
            column: 18
          },
          end: {
            line: 80,
            column: 19
          }
        },
        loc: {
          start: {
            line: 80,
            column: 33
          },
          end: {
            line: 125,
            column: 7
          }
        },
        line: 80
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 126,
            column: 17
          },
          end: {
            line: 126,
            column: 18
          }
        },
        loc: {
          start: {
            line: 126,
            column: 23
          },
          end: {
            line: 133,
            column: 7
          }
        },
        line: 126
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 134,
            column: 19
          },
          end: {
            line: 134,
            column: 20
          }
        },
        loc: {
          start: {
            line: 134,
            column: 30
          },
          end: {
            line: 137,
            column: 7
          }
        },
        line: 134
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 29,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 29
      },
      "1": {
        loc: {
          start: {
            line: 52,
            column: 10
          },
          end: {
            line: 54,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 52,
            column: 10
          },
          end: {
            line: 54,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 52
      },
      "2": {
        loc: {
          start: {
            line: 87,
            column: 10
          },
          end: {
            line: 93,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 87,
            column: 10
          },
          end: {
            line: 93,
            column: 11
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 87
      },
      "3": {
        loc: {
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 12
          },
          end: {
            line: 90,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "4": {
        loc: {
          start: {
            line: 97,
            column: 29
          },
          end: {
            line: 97,
            column: 90
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 97,
            column: 29
          },
          end: {
            line: 97,
            column: 67
          }
        }, {
          start: {
            line: 97,
            column: 71
          },
          end: {
            line: 97,
            column: 90
          }
        }],
        line: 97
      },
      "5": {
        loc: {
          start: {
            line: 98,
            column: 25
          },
          end: {
            line: 98,
            column: 67
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 25
          },
          end: {
            line: 98,
            column: 59
          }
        }, {
          start: {
            line: 98,
            column: 63
          },
          end: {
            line: 98,
            column: 67
          }
        }],
        line: 98
      },
      "6": {
        loc: {
          start: {
            line: 99,
            column: 19
          },
          end: {
            line: 99,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 19
          },
          end: {
            line: 99,
            column: 40
          }
        }, {
          start: {
            line: 99,
            column: 44
          },
          end: {
            line: 99,
            column: 45
          }
        }],
        line: 99
      },
      "7": {
        loc: {
          start: {
            line: 100,
            column: 24
          },
          end: {
            line: 100,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 100,
            column: 24
          },
          end: {
            line: 100,
            column: 38
          }
        }, {
          start: {
            line: 100,
            column: 42
          },
          end: {
            line: 100,
            column: 46
          }
        }],
        line: 100
      },
      "8": {
        loc: {
          start: {
            line: 101,
            column: 22
          },
          end: {
            line: 101,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 101,
            column: 22
          },
          end: {
            line: 101,
            column: 34
          }
        }, {
          start: {
            line: 101,
            column: 38
          },
          end: {
            line: 101,
            column: 42
          }
        }],
        line: 101
      },
      "9": {
        loc: {
          start: {
            line: 102,
            column: 20
          },
          end: {
            line: 102,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 102,
            column: 20
          },
          end: {
            line: 102,
            column: 30
          }
        }, {
          start: {
            line: 102,
            column: 34
          },
          end: {
            line: 102,
            column: 42
          }
        }],
        line: 102
      },
      "10": {
        loc: {
          start: {
            line: 103,
            column: 31
          },
          end: {
            line: 103,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 103,
            column: 31
          },
          end: {
            line: 103,
            column: 52
          }
        }, {
          start: {
            line: 103,
            column: 56
          },
          end: {
            line: 103,
            column: 65
          }
        }],
        line: 103
      },
      "11": {
        loc: {
          start: {
            line: 104,
            column: 19
          },
          end: {
            line: 104,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 104,
            column: 19
          },
          end: {
            line: 104,
            column: 48
          }
        }, {
          start: {
            line: 104,
            column: 52
          },
          end: {
            line: 104,
            column: 56
          }
        }],
        line: 104
      },
      "12": {
        loc: {
          start: {
            line: 112,
            column: 10
          },
          end: {
            line: 120,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 112,
            column: 10
          },
          end: {
            line: 120,
            column: 11
          }
        }, {
          start: {
            line: 115,
            column: 17
          },
          end: {
            line: 120,
            column: 11
          }
        }],
        line: 112
      },
      "13": {
        loc: {
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 116,
            column: 12
          },
          end: {
            line: 118,
            column: 13
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 116
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "2589ac335f1f053df51ce5e6ab1aaeb63e4050b2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1kmmmmraxz = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1kmmmmraxz();
cov_1kmmmmraxz().s[0]++;
require('dotenv').config();
const {
  createClient
} =
/* istanbul ignore next */
(cov_1kmmmmraxz().s[1]++, require('@supabase/supabase-js'));
const fs =
/* istanbul ignore next */
(cov_1kmmmmraxz().s[2]++, require('fs'));
const csv =
/* istanbul ignore next */
(cov_1kmmmmraxz().s[3]++, require('csv-parser'));
const path =
/* istanbul ignore next */
(cov_1kmmmmraxz().s[4]++, require('path'));

// Usar service_role key para ter permissões administrativas
const supabase =
/* istanbul ignore next */
(cov_1kmmmmraxz().s[5]++, createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
}));
const CSV_DIR =
/* istanbul ignore next */
(cov_1kmmmmraxz().s[6]++, '/Users/insitutoareluna/Documents/finance/importBD');
async function createClientMapping() {
  /* istanbul ignore next */
  cov_1kmmmmraxz().f[0]++;
  cov_1kmmmmraxz().s[7]++;
  console.log('🔍 Criando mapeamento de clientes...');

  // Buscar clientes do banco
  const {
    data: dbClients,
    error: dbError
  } =
  /* istanbul ignore next */
  (cov_1kmmmmraxz().s[8]++, await supabase.from('clients').select('id, first_name, last_name'));
  /* istanbul ignore next */
  cov_1kmmmmraxz().s[9]++;
  if (dbError) {
    /* istanbul ignore next */
    cov_1kmmmmraxz().b[0][0]++;
    cov_1kmmmmraxz().s[10]++;
    console.error('Erro ao buscar clientes do banco:', dbError);
    /* istanbul ignore next */
    cov_1kmmmmraxz().s[11]++;
    return new Map();
  } else
  /* istanbul ignore next */
  {
    cov_1kmmmmraxz().b[0][1]++;
  }

  // Ler clientes do CSV original
  const csvClients =
  /* istanbul ignore next */
  (cov_1kmmmmraxz().s[12]++, new Map());
  const clientsFile =
  /* istanbul ignore next */
  (cov_1kmmmmraxz().s[13]++, path.join(CSV_DIR, 'clients.csv'));
  /* istanbul ignore next */
  cov_1kmmmmraxz().s[14]++;
  return new Promise(resolve => {
    /* istanbul ignore next */
    cov_1kmmmmraxz().f[1]++;
    cov_1kmmmmraxz().s[15]++;
    fs.createReadStream(clientsFile).pipe(csv()).on('data', row => {
      /* istanbul ignore next */
      cov_1kmmmmraxz().f[2]++;
      const key =
      /* istanbul ignore next */
      (cov_1kmmmmraxz().s[16]++, `${row.first_name}_${row.last_name}`.toLowerCase().trim());
      /* istanbul ignore next */
      cov_1kmmmmraxz().s[17]++;
      csvClients.set(key, row.id);
    }).on('end', () => {
      /* istanbul ignore next */
      cov_1kmmmmraxz().f[3]++;
      // Criar mapeamento CSV ID -> DB ID
      const mapping =
      /* istanbul ignore next */
      (cov_1kmmmmraxz().s[18]++, new Map());
      /* istanbul ignore next */
      cov_1kmmmmraxz().s[19]++;
      dbClients.forEach(dbClient => {
        /* istanbul ignore next */
        cov_1kmmmmraxz().f[4]++;
        const key =
        /* istanbul ignore next */
        (cov_1kmmmmraxz().s[20]++, `${dbClient.first_name}_${dbClient.last_name}`.toLowerCase().trim());
        const csvId =
        /* istanbul ignore next */
        (cov_1kmmmmraxz().s[21]++, csvClients.get(key));
        /* istanbul ignore next */
        cov_1kmmmmraxz().s[22]++;
        if (csvId) {
          /* istanbul ignore next */
          cov_1kmmmmraxz().b[1][0]++;
          cov_1kmmmmraxz().s[23]++;
          mapping.set(csvId, dbClient.id);
        } else
        /* istanbul ignore next */
        {
          cov_1kmmmmraxz().b[1][1]++;
        }
      });
      /* istanbul ignore next */
      cov_1kmmmmraxz().s[24]++;
      console.log(`📋 Mapeamento criado: ${mapping.size} clientes mapeados`);
      /* istanbul ignore next */
      cov_1kmmmmraxz().s[25]++;
      resolve(mapping);
    });
  });
}
async function importContracts() {
  /* istanbul ignore next */
  cov_1kmmmmraxz().f[5]++;
  cov_1kmmmmraxz().s[26]++;
  console.log('📄 IMPORTAÇÃO DE CONTRATOS COM MAPEAMENTO');
  /* istanbul ignore next */
  cov_1kmmmmraxz().s[27]++;
  console.log('==================================================');

  // Criar mapeamento de clientes
  const clientMapping =
  /* istanbul ignore next */
  (cov_1kmmmmraxz().s[28]++, await createClientMapping());
  let count =
  /* istanbul ignore next */
  (cov_1kmmmmraxz().s[29]++, 0);
  let success =
  /* istanbul ignore next */
  (cov_1kmmmmraxz().s[30]++, 0);
  let errors =
  /* istanbul ignore next */
  (cov_1kmmmmraxz().s[31]++, 0);
  let clientNotFound =
  /* istanbul ignore next */
  (cov_1kmmmmraxz().s[32]++, 0);
  const contractsFile =
  /* istanbul ignore next */
  (cov_1kmmmmraxz().s[33]++, path.join(CSV_DIR, 'contracts.csv'));
  /* istanbul ignore next */
  cov_1kmmmmraxz().s[34]++;
  return new Promise(resolve => {
    /* istanbul ignore next */
    cov_1kmmmmraxz().f[6]++;
    cov_1kmmmmraxz().s[35]++;
    fs.createReadStream(contractsFile).pipe(csv()).on('data', async row => {
      /* istanbul ignore next */
      cov_1kmmmmraxz().f[7]++;
      cov_1kmmmmraxz().s[36]++;
      count++;
      /* istanbul ignore next */
      cov_1kmmmmraxz().s[37]++;
      try {
        // Mapear client_id do CSV para o ID do banco
        const dbClientId =
        /* istanbul ignore next */
        (cov_1kmmmmraxz().s[38]++, clientMapping.get(row.client_id));
        /* istanbul ignore next */
        cov_1kmmmmraxz().s[39]++;
        if (!dbClientId) {
          /* istanbul ignore next */
          cov_1kmmmmraxz().b[2][0]++;
          cov_1kmmmmraxz().s[40]++;
          if (count <= 10) {
            /* istanbul ignore next */
            cov_1kmmmmraxz().b[3][0]++;
            cov_1kmmmmraxz().s[41]++;
            console.log(`⚠️  Cliente não mapeado para contrato ${count}: ${row.client_id}`);
          } else
          /* istanbul ignore next */
          {
            cov_1kmmmmraxz().b[3][1]++;
          }
          cov_1kmmmmraxz().s[42]++;
          clientNotFound++;
          /* istanbul ignore next */
          cov_1kmmmmraxz().s[43]++;
          return;
        } else
        /* istanbul ignore next */
        {
          cov_1kmmmmraxz().b[2][1]++;
        }
        const contractData =
        /* istanbul ignore next */
        (cov_1kmmmmraxz().s[44]++, {
          client_id: dbClientId,
          contract_number:
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[4][0]++, row.contract_number?.substring(0, 100)) ||
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[4][1]++, `CONTRACT_${count}`),
          description:
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[5][0]++, row.description?.substring(0, 500)) ||
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[5][1]++, null),
          value:
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[6][0]++, parseFloat(row.value)) ||
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[6][1]++, 0),
          start_date:
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[7][0]++, row.start_date) ||
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[7][1]++, null),
          end_date:
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[8][0]++, row.end_date) ||
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[8][1]++, null),
          status:
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[9][0]++, row.status) ||
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[9][1]++, 'active'),
          payment_frequency:
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[10][0]++, row.payment_frequency) ||
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[10][1]++, 'monthly'),
          notes:
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[11][0]++, row.notes?.substring(0, 1000)) ||
          /* istanbul ignore next */
          (cov_1kmmmmraxz().b[11][1]++, null)
        });
        const {
          data,
          error
        } =
        /* istanbul ignore next */
        (cov_1kmmmmraxz().s[45]++, await supabase.from('contracts').insert([contractData]).select());
        /* istanbul ignore next */
        cov_1kmmmmraxz().s[46]++;
        if (error) {
          /* istanbul ignore next */
          cov_1kmmmmraxz().b[12][0]++;
          cov_1kmmmmraxz().s[47]++;
          console.error(`❌ Erro ao inserir contrato ${count}:`, error.message);
          /* istanbul ignore next */
          cov_1kmmmmraxz().s[48]++;
          errors++;
        } else {
          /* istanbul ignore next */
          cov_1kmmmmraxz().b[12][1]++;
          cov_1kmmmmraxz().s[49]++;
          if (count <= 5) {
            /* istanbul ignore next */
            cov_1kmmmmraxz().b[13][0]++;
            cov_1kmmmmraxz().s[50]++;
            console.log(`✅ Contrato ${count} inserido:`, data[0].id);
          } else
          /* istanbul ignore next */
          {
            cov_1kmmmmraxz().b[13][1]++;
          }
          cov_1kmmmmraxz().s[51]++;
          success++;
        }
      } catch (error) {
        /* istanbul ignore next */
        cov_1kmmmmraxz().s[52]++;
        console.error(`❌ Erro ao processar contrato ${count}:`, error.message);
        /* istanbul ignore next */
        cov_1kmmmmraxz().s[53]++;
        errors++;
      }
    }).on('end', () => {
      /* istanbul ignore next */
      cov_1kmmmmraxz().f[8]++;
      cov_1kmmmmraxz().s[54]++;
      console.log('\n📊 RESUMO DA IMPORTAÇÃO DE CONTRATOS:');
      /* istanbul ignore next */
      cov_1kmmmmraxz().s[55]++;
      console.log(`Total processados: ${count}`);
      /* istanbul ignore next */
      cov_1kmmmmraxz().s[56]++;
      console.log(`Sucessos: ${success}`);
      /* istanbul ignore next */
      cov_1kmmmmraxz().s[57]++;
      console.log(`Erros: ${errors}`);
      /* istanbul ignore next */
      cov_1kmmmmraxz().s[58]++;
      console.log(`Clientes não encontrados: ${clientNotFound}`);
      /* istanbul ignore next */
      cov_1kmmmmraxz().s[59]++;
      resolve({
        count,
        success,
        errors,
        clientNotFound
      });
    }).on('error', error => {
      /* istanbul ignore next */
      cov_1kmmmmraxz().f[9]++;
      cov_1kmmmmraxz().s[60]++;
      console.error('❌ Erro ao ler CSV de contratos:', error);
      /* istanbul ignore next */
      cov_1kmmmmraxz().s[61]++;
      resolve({
        count,
        success,
        errors,
        clientNotFound
      });
    });
  });
}
/* istanbul ignore next */
cov_1kmmmmraxz().s[62]++;
importContracts().catch(console.error);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,