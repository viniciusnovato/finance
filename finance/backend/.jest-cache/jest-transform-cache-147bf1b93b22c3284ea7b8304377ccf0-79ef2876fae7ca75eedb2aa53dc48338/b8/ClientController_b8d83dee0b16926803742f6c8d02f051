65963b3af339e9f662c79646ead6c521
/* istanbul ignore next */
function cov_231v276fpk() {
  var path = "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/controllers/ClientController.js";
  var hash = "e9b5c36a80a0927860802e630a402eb3a535815d";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/controllers/ClientController.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 26
        },
        end: {
          line: 1,
          column: 62
        }
      },
      "1": {
        start: {
          line: 2,
          column: 25
        },
        end: {
          line: 2,
          column: 65
        }
      },
      "2": {
        start: {
          line: 10,
          column: 22
        },
        end: {
          line: 38,
          column: 4
        }
      },
      "3": {
        start: {
          line: 18,
          column: 8
        },
        end: {
          line: 18,
          column: 17
        }
      },
      "4": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 37,
          column: 5
        }
      },
      "5": {
        start: {
          line: 21,
          column: 21
        },
        end: {
          line: 28,
          column: 8
        }
      },
      "6": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 30,
          column: 23
        }
      },
      "7": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 32,
          column: 55
        }
      },
      "8": {
        start: {
          line: 33,
          column: 6
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "9": {
        start: {
          line: 45,
          column: 25
        },
        end: {
          line: 66,
          column: 4
        }
      },
      "10": {
        start: {
          line: 46,
          column: 19
        },
        end: {
          line: 46,
          column: 29
        }
      },
      "11": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 65,
          column: 5
        }
      },
      "12": {
        start: {
          line: 49,
          column: 21
        },
        end: {
          line: 49,
          column: 58
        }
      },
      "13": {
        start: {
          line: 51,
          column: 6
        },
        end: {
          line: 56,
          column: 7
        }
      },
      "14": {
        start: {
          line: 52,
          column: 8
        },
        end: {
          line: 55,
          column: 11
        }
      },
      "15": {
        start: {
          line: 58,
          column: 6
        },
        end: {
          line: 58,
          column: 27
        }
      },
      "16": {
        start: {
          line: 60,
          column: 6
        },
        end: {
          line: 60,
          column: 54
        }
      },
      "17": {
        start: {
          line: 61,
          column: 6
        },
        end: {
          line: 64,
          column: 9
        }
      },
      "18": {
        start: {
          line: 73,
          column: 24
        },
        end: {
          line: 97,
          column: 4
        }
      },
      "19": {
        start: {
          line: 74,
          column: 4
        },
        end: {
          line: 96,
          column: 5
        }
      },
      "20": {
        start: {
          line: 75,
          column: 25
        },
        end: {
          line: 75,
          column: 33
        }
      },
      "21": {
        start: {
          line: 76,
          column: 24
        },
        end: {
          line: 76,
          column: 68
        }
      },
      "22": {
        start: {
          line: 78,
          column: 6
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "23": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 53
        }
      },
      "24": {
        start: {
          line: 85,
          column: 6
        },
        end: {
          line: 90,
          column: 7
        }
      },
      "25": {
        start: {
          line: 86,
          column: 8
        },
        end: {
          line: 89,
          column: 11
        }
      },
      "26": {
        start: {
          line: 92,
          column: 6
        },
        end: {
          line: 95,
          column: 9
        }
      },
      "27": {
        start: {
          line: 104,
          column: 24
        },
        end: {
          line: 137,
          column: 4
        }
      },
      "28": {
        start: {
          line: 105,
          column: 19
        },
        end: {
          line: 105,
          column: 29
        }
      },
      "29": {
        start: {
          line: 106,
          column: 23
        },
        end: {
          line: 106,
          column: 31
        }
      },
      "30": {
        start: {
          line: 108,
          column: 4
        },
        end: {
          line: 136,
          column: 5
        }
      },
      "31": {
        start: {
          line: 109,
          column: 28
        },
        end: {
          line: 109,
          column: 76
        }
      },
      "32": {
        start: {
          line: 111,
          column: 6
        },
        end: {
          line: 116,
          column: 7
        }
      },
      "33": {
        start: {
          line: 112,
          column: 8
        },
        end: {
          line: 115,
          column: 11
        }
      },
      "34": {
        start: {
          line: 118,
          column: 6
        },
        end: {
          line: 121,
          column: 9
        }
      },
      "35": {
        start: {
          line: 123,
          column: 6
        },
        end: {
          line: 123,
          column: 57
        }
      },
      "36": {
        start: {
          line: 125,
          column: 6
        },
        end: {
          line: 130,
          column: 7
        }
      },
      "37": {
        start: {
          line: 126,
          column: 8
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "38": {
        start: {
          line: 132,
          column: 6
        },
        end: {
          line: 135,
          column: 9
        }
      },
      "39": {
        start: {
          line: 144,
          column: 24
        },
        end: {
          line: 175,
          column: 4
        }
      },
      "40": {
        start: {
          line: 145,
          column: 19
        },
        end: {
          line: 145,
          column: 29
        }
      },
      "41": {
        start: {
          line: 147,
          column: 4
        },
        end: {
          line: 174,
          column: 5
        }
      },
      "42": {
        start: {
          line: 148,
          column: 22
        },
        end: {
          line: 148,
          column: 58
        }
      },
      "43": {
        start: {
          line: 150,
          column: 6
        },
        end: {
          line: 155,
          column: 7
        }
      },
      "44": {
        start: {
          line: 151,
          column: 8
        },
        end: {
          line: 154,
          column: 11
        }
      },
      "45": {
        start: {
          line: 157,
          column: 6
        },
        end: {
          line: 159,
          column: 9
        }
      },
      "46": {
        start: {
          line: 161,
          column: 6
        },
        end: {
          line: 161,
          column: 55
        }
      },
      "47": {
        start: {
          line: 163,
          column: 6
        },
        end: {
          line: 168,
          column: 7
        }
      },
      "48": {
        start: {
          line: 164,
          column: 8
        },
        end: {
          line: 167,
          column: 11
        }
      },
      "49": {
        start: {
          line: 170,
          column: 6
        },
        end: {
          line: 173,
          column: 9
        }
      },
      "50": {
        start: {
          line: 182,
          column: 30
        },
        end: {
          line: 201,
          column: 4
        }
      },
      "51": {
        start: {
          line: 183,
          column: 19
        },
        end: {
          line: 183,
          column: 29
        }
      },
      "52": {
        start: {
          line: 184,
          column: 50
        },
        end: {
          line: 184,
          column: 59
        }
      },
      "53": {
        start: {
          line: 186,
          column: 4
        },
        end: {
          line: 200,
          column: 5
        }
      },
      "54": {
        start: {
          line: 187,
          column: 21
        },
        end: {
          line: 191,
          column: 8
        }
      },
      "55": {
        start: {
          line: 193,
          column: 6
        },
        end: {
          line: 193,
          column: 23
        }
      },
      "56": {
        start: {
          line: 195,
          column: 6
        },
        end: {
          line: 195,
          column: 67
        }
      },
      "57": {
        start: {
          line: 196,
          column: 6
        },
        end: {
          line: 199,
          column: 9
        }
      },
      "58": {
        start: {
          line: 208,
          column: 29
        },
        end: {
          line: 227,
          column: 4
        }
      },
      "59": {
        start: {
          line: 209,
          column: 19
        },
        end: {
          line: 209,
          column: 29
        }
      },
      "60": {
        start: {
          line: 210,
          column: 50
        },
        end: {
          line: 210,
          column: 59
        }
      },
      "61": {
        start: {
          line: 212,
          column: 4
        },
        end: {
          line: 226,
          column: 5
        }
      },
      "62": {
        start: {
          line: 213,
          column: 21
        },
        end: {
          line: 217,
          column: 8
        }
      },
      "63": {
        start: {
          line: 219,
          column: 6
        },
        end: {
          line: 219,
          column: 23
        }
      },
      "64": {
        start: {
          line: 221,
          column: 6
        },
        end: {
          line: 221,
          column: 68
        }
      },
      "65": {
        start: {
          line: 222,
          column: 6
        },
        end: {
          line: 225,
          column: 9
        }
      },
      "66": {
        start: {
          line: 234,
          column: 25
        },
        end: {
          line: 254,
          column: 4
        }
      },
      "67": {
        start: {
          line: 235,
          column: 37
        },
        end: {
          line: 235,
          column: 46
        }
      },
      "68": {
        start: {
          line: 237,
          column: 4
        },
        end: {
          line: 242,
          column: 5
        }
      },
      "69": {
        start: {
          line: 238,
          column: 6
        },
        end: {
          line: 241,
          column: 9
        }
      },
      "70": {
        start: {
          line: 244,
          column: 4
        },
        end: {
          line: 253,
          column: 5
        }
      },
      "71": {
        start: {
          line: 245,
          column: 22
        },
        end: {
          line: 245,
          column: 86
        }
      },
      "72": {
        start: {
          line: 246,
          column: 6
        },
        end: {
          line: 246,
          column: 28
        }
      },
      "73": {
        start: {
          line: 248,
          column: 6
        },
        end: {
          line: 248,
          column: 55
        }
      },
      "74": {
        start: {
          line: 249,
          column: 6
        },
        end: {
          line: 252,
          column: 9
        }
      },
      "75": {
        start: {
          line: 257,
          column: 0
        },
        end: {
          line: 257,
          column: 38
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 35
          },
          end: {
            line: 10,
            column: 36
          }
        },
        loc: {
          start: {
            line: 10,
            column: 55
          },
          end: {
            line: 38,
            column: 3
          }
        },
        line: 10
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 45,
            column: 38
          },
          end: {
            line: 45,
            column: 39
          }
        },
        loc: {
          start: {
            line: 45,
            column: 58
          },
          end: {
            line: 66,
            column: 3
          }
        },
        line: 45
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 73,
            column: 37
          },
          end: {
            line: 73,
            column: 38
          }
        },
        loc: {
          start: {
            line: 73,
            column: 57
          },
          end: {
            line: 97,
            column: 3
          }
        },
        line: 73
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 104,
            column: 37
          },
          end: {
            line: 104,
            column: 38
          }
        },
        loc: {
          start: {
            line: 104,
            column: 57
          },
          end: {
            line: 137,
            column: 3
          }
        },
        line: 104
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 144,
            column: 37
          },
          end: {
            line: 144,
            column: 38
          }
        },
        loc: {
          start: {
            line: 144,
            column: 57
          },
          end: {
            line: 175,
            column: 3
          }
        },
        line: 144
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 182,
            column: 43
          },
          end: {
            line: 182,
            column: 44
          }
        },
        loc: {
          start: {
            line: 182,
            column: 63
          },
          end: {
            line: 201,
            column: 3
          }
        },
        line: 182
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 208,
            column: 42
          },
          end: {
            line: 208,
            column: 43
          }
        },
        loc: {
          start: {
            line: 208,
            column: 62
          },
          end: {
            line: 227,
            column: 3
          }
        },
        line: 208
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 234,
            column: 38
          },
          end: {
            line: 234,
            column: 39
          }
        },
        loc: {
          start: {
            line: 234,
            column: 58
          },
          end: {
            line: 254,
            column: 3
          }
        },
        line: 234
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 12,
            column: 6
          },
          end: {
            line: 12,
            column: 14
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 12,
            column: 13
          },
          end: {
            line: 12,
            column: 14
          }
        }],
        line: 12
      },
      "1": {
        loc: {
          start: {
            line: 13,
            column: 6
          },
          end: {
            line: 13,
            column: 16
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 13,
            column: 14
          },
          end: {
            line: 13,
            column: 16
          }
        }],
        line: 13
      },
      "2": {
        loc: {
          start: {
            line: 14,
            column: 6
          },
          end: {
            line: 14,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 15
          },
          end: {
            line: 14,
            column: 17
          }
        }],
        line: 14
      },
      "3": {
        loc: {
          start: {
            line: 15,
            column: 6
          },
          end: {
            line: 15,
            column: 17
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 15,
            column: 15
          },
          end: {
            line: 15,
            column: 17
          }
        }],
        line: 15
      },
      "4": {
        loc: {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 16,
            column: 28
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 16,
            column: 16
          },
          end: {
            line: 16,
            column: 28
          }
        }],
        line: 16
      },
      "5": {
        loc: {
          start: {
            line: 17,
            column: 6
          },
          end: {
            line: 17,
            column: 25
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 17,
            column: 19
          },
          end: {
            line: 17,
            column: 25
          }
        }],
        line: 17
      },
      "6": {
        loc: {
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 56,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 51,
            column: 6
          },
          end: {
            line: 56,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 51
      },
      "7": {
        loc: {
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 90,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 85,
            column: 6
          },
          end: {
            line: 90,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 85
      },
      "8": {
        loc: {
          start: {
            line: 111,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 111,
            column: 6
          },
          end: {
            line: 116,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 111
      },
      "9": {
        loc: {
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 130,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 125,
            column: 6
          },
          end: {
            line: 130,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 125
      },
      "10": {
        loc: {
          start: {
            line: 150,
            column: 6
          },
          end: {
            line: 155,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 150,
            column: 6
          },
          end: {
            line: 155,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 150
      },
      "11": {
        loc: {
          start: {
            line: 163,
            column: 6
          },
          end: {
            line: 168,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 163,
            column: 6
          },
          end: {
            line: 168,
            column: 7
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 163
      },
      "12": {
        loc: {
          start: {
            line: 184,
            column: 12
          },
          end: {
            line: 184,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 184,
            column: 19
          },
          end: {
            line: 184,
            column: 20
          }
        }],
        line: 184
      },
      "13": {
        loc: {
          start: {
            line: 184,
            column: 22
          },
          end: {
            line: 184,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 184,
            column: 30
          },
          end: {
            line: 184,
            column: 32
          }
        }],
        line: 184
      },
      "14": {
        loc: {
          start: {
            line: 184,
            column: 34
          },
          end: {
            line: 184,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 184,
            column: 43
          },
          end: {
            line: 184,
            column: 45
          }
        }],
        line: 184
      },
      "15": {
        loc: {
          start: {
            line: 210,
            column: 12
          },
          end: {
            line: 210,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 210,
            column: 19
          },
          end: {
            line: 210,
            column: 20
          }
        }],
        line: 210
      },
      "16": {
        loc: {
          start: {
            line: 210,
            column: 22
          },
          end: {
            line: 210,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 210,
            column: 30
          },
          end: {
            line: 210,
            column: 32
          }
        }],
        line: 210
      },
      "17": {
        loc: {
          start: {
            line: 210,
            column: 34
          },
          end: {
            line: 210,
            column: 45
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 210,
            column: 43
          },
          end: {
            line: 210,
            column: 45
          }
        }],
        line: 210
      },
      "18": {
        loc: {
          start: {
            line: 235,
            column: 22
          },
          end: {
            line: 235,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 235,
            column: 30
          },
          end: {
            line: 235,
            column: 32
          }
        }],
        line: 235
      },
      "19": {
        loc: {
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 237,
            column: 4
          },
          end: {
            line: 242,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 237
      },
      "20": {
        loc: {
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 41
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 237,
            column: 8
          },
          end: {
            line: 237,
            column: 14
          }
        }, {
          start: {
            line: 237,
            column: 18
          },
          end: {
            line: 237,
            column: 41
          }
        }],
        line: 237
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0,
      "73": 0,
      "74": 0,
      "75": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0],
      "4": [0],
      "5": [0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0],
      "13": [0],
      "14": [0],
      "15": [0],
      "16": [0],
      "17": [0],
      "18": [0],
      "19": [0, 0],
      "20": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "e9b5c36a80a0927860802e630a402eb3a535815d"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_231v276fpk = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_231v276fpk();
const {
  ClientService
} =
/* istanbul ignore next */
(cov_231v276fpk().s[0]++, require('../services/ClientService'));
const {
  asyncHandler
} =
/* istanbul ignore next */
(cov_231v276fpk().s[1]++, require('../middleware/errorMiddleware'));
class ClientController {
  /**
   * Listar todos os clientes com paginação e filtros
   * @route GET /api/clients
   * @access Private
   */
  static getClients =
  /* istanbul ignore next */
  (cov_231v276fpk().s[2]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_231v276fpk().f[0]++;
    const {
      page =
      /* istanbul ignore next */
      (cov_231v276fpk().b[0][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_231v276fpk().b[1][0]++, 10),
      search =
      /* istanbul ignore next */
      (cov_231v276fpk().b[2][0]++, ''),
      status =
      /* istanbul ignore next */
      (cov_231v276fpk().b[3][0]++, ''),
      sort_by =
      /* istanbul ignore next */
      (cov_231v276fpk().b[4][0]++, 'created_at'),
      sort_order =
      /* istanbul ignore next */
      (cov_231v276fpk().b[5][0]++, 'desc')
    } =
    /* istanbul ignore next */
    (cov_231v276fpk().s[3]++, req.query);
    /* istanbul ignore next */
    cov_231v276fpk().s[4]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_231v276fpk().s[5]++, await ClientService.getClients({
        page: parseInt(page),
        limit: parseInt(limit),
        search,
        status,
        sortBy: sort_by,
        sortOrder: sort_order
      }));
      /* istanbul ignore next */
      cov_231v276fpk().s[6]++;
      res.json(result);
    } catch (error) {
      /* istanbul ignore next */
      cov_231v276fpk().s[7]++;
      console.error('Erro ao buscar clientes:', error);
      /* istanbul ignore next */
      cov_231v276fpk().s[8]++;
      res.status(500).json({
        error: 'Erro interno do servidor',
        code: 'CLIENTS_FETCH_ERROR'
      });
    }
  }));

  /**
   * Obter cliente por ID
   * @route GET /api/clients/:id
   * @access Private
   */
  static getClientById =
  /* istanbul ignore next */
  (cov_231v276fpk().s[9]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_231v276fpk().f[1]++;
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_231v276fpk().s[10]++, req.params);
    /* istanbul ignore next */
    cov_231v276fpk().s[11]++;
    try {
      const client =
      /* istanbul ignore next */
      (cov_231v276fpk().s[12]++, await ClientService.getClientById(id));
      /* istanbul ignore next */
      cov_231v276fpk().s[13]++;
      if (!client) {
        /* istanbul ignore next */
        cov_231v276fpk().b[6][0]++;
        cov_231v276fpk().s[14]++;
        return res.status(404).json({
          error: 'Cliente não encontrado',
          code: 'CLIENT_NOT_FOUND'
        });
      } else
      /* istanbul ignore next */
      {
        cov_231v276fpk().b[6][1]++;
      }
      cov_231v276fpk().s[15]++;
      res.json({
        client
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_231v276fpk().s[16]++;
      console.error('Erro ao buscar cliente:', error);
      /* istanbul ignore next */
      cov_231v276fpk().s[17]++;
      res.status(500).json({
        error: 'Erro interno do servidor',
        code: 'CLIENT_FETCH_ERROR'
      });
    }
  }));

  /**
   * Criar novo cliente
   * @route POST /api/clients
   * @access Private
   */
  static createClient =
  /* istanbul ignore next */
  (cov_231v276fpk().s[18]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_231v276fpk().f[2]++;
    cov_231v276fpk().s[19]++;
    try {
      const clientData =
      /* istanbul ignore next */
      (cov_231v276fpk().s[20]++, req.body);
      const newClient =
      /* istanbul ignore next */
      (cov_231v276fpk().s[21]++, await ClientService.createClient(clientData));
      /* istanbul ignore next */
      cov_231v276fpk().s[22]++;
      res.status(201).json({
        message: 'Cliente criado com sucesso',
        client: newClient
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_231v276fpk().s[23]++;
      console.error('Erro ao criar cliente:', error);
      /* istanbul ignore next */
      cov_231v276fpk().s[24]++;
      if (error.message.includes('já existe')) {
        /* istanbul ignore next */
        cov_231v276fpk().b[7][0]++;
        cov_231v276fpk().s[25]++;
        return res.status(409).json({
          error: error.message,
          code: 'CLIENT_ALREADY_EXISTS'
        });
      } else
      /* istanbul ignore next */
      {
        cov_231v276fpk().b[7][1]++;
      }
      cov_231v276fpk().s[26]++;
      res.status(500).json({
        error: 'Erro interno do servidor',
        code: 'CLIENT_CREATE_ERROR'
      });
    }
  }));

  /**
   * Atualizar cliente
   * @route PUT /api/clients/:id
   * @access Private
   */
  static updateClient =
  /* istanbul ignore next */
  (cov_231v276fpk().s[27]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_231v276fpk().f[3]++;
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_231v276fpk().s[28]++, req.params);
    const updateData =
    /* istanbul ignore next */
    (cov_231v276fpk().s[29]++, req.body);
    /* istanbul ignore next */
    cov_231v276fpk().s[30]++;
    try {
      const updatedClient =
      /* istanbul ignore next */
      (cov_231v276fpk().s[31]++, await ClientService.updateClient(id, updateData));
      /* istanbul ignore next */
      cov_231v276fpk().s[32]++;
      if (!updatedClient) {
        /* istanbul ignore next */
        cov_231v276fpk().b[8][0]++;
        cov_231v276fpk().s[33]++;
        return res.status(404).json({
          error: 'Cliente não encontrado',
          code: 'CLIENT_NOT_FOUND'
        });
      } else
      /* istanbul ignore next */
      {
        cov_231v276fpk().b[8][1]++;
      }
      cov_231v276fpk().s[34]++;
      res.json({
        message: 'Cliente atualizado com sucesso',
        client: updatedClient
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_231v276fpk().s[35]++;
      console.error('Erro ao atualizar cliente:', error);
      /* istanbul ignore next */
      cov_231v276fpk().s[36]++;
      if (error.message.includes('já existe')) {
        /* istanbul ignore next */
        cov_231v276fpk().b[9][0]++;
        cov_231v276fpk().s[37]++;
        return res.status(409).json({
          error: error.message,
          code: 'CLIENT_ALREADY_EXISTS'
        });
      } else
      /* istanbul ignore next */
      {
        cov_231v276fpk().b[9][1]++;
      }
      cov_231v276fpk().s[38]++;
      res.status(500).json({
        error: 'Erro interno do servidor',
        code: 'CLIENT_UPDATE_ERROR'
      });
    }
  }));

  /**
   * Deletar cliente
   * @route DELETE /api/clients/:id
   * @access Private
   */
  static deleteClient =
  /* istanbul ignore next */
  (cov_231v276fpk().s[39]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_231v276fpk().f[4]++;
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_231v276fpk().s[40]++, req.params);
    /* istanbul ignore next */
    cov_231v276fpk().s[41]++;
    try {
      const deleted =
      /* istanbul ignore next */
      (cov_231v276fpk().s[42]++, await ClientService.deleteClient(id));
      /* istanbul ignore next */
      cov_231v276fpk().s[43]++;
      if (!deleted) {
        /* istanbul ignore next */
        cov_231v276fpk().b[10][0]++;
        cov_231v276fpk().s[44]++;
        return res.status(404).json({
          error: 'Cliente não encontrado',
          code: 'CLIENT_NOT_FOUND'
        });
      } else
      /* istanbul ignore next */
      {
        cov_231v276fpk().b[10][1]++;
      }
      cov_231v276fpk().s[45]++;
      res.json({
        message: 'Cliente deletado com sucesso'
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_231v276fpk().s[46]++;
      console.error('Erro ao deletar cliente:', error);
      /* istanbul ignore next */
      cov_231v276fpk().s[47]++;
      if (error.message.includes('possui contratos')) {
        /* istanbul ignore next */
        cov_231v276fpk().b[11][0]++;
        cov_231v276fpk().s[48]++;
        return res.status(409).json({
          error: error.message,
          code: 'CLIENT_HAS_CONTRACTS'
        });
      } else
      /* istanbul ignore next */
      {
        cov_231v276fpk().b[11][1]++;
      }
      cov_231v276fpk().s[49]++;
      res.status(500).json({
        error: 'Erro interno do servidor',
        code: 'CLIENT_DELETE_ERROR'
      });
    }
  }));

  /**
   * Obter contratos do cliente
   * @route GET /api/clients/:id/contracts
   * @access Private
   */
  static getClientContracts =
  /* istanbul ignore next */
  (cov_231v276fpk().s[50]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_231v276fpk().f[5]++;
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_231v276fpk().s[51]++, req.params);
    const {
      page =
      /* istanbul ignore next */
      (cov_231v276fpk().b[12][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_231v276fpk().b[13][0]++, 10),
      status =
      /* istanbul ignore next */
      (cov_231v276fpk().b[14][0]++, '')
    } =
    /* istanbul ignore next */
    (cov_231v276fpk().s[52]++, req.query);
    /* istanbul ignore next */
    cov_231v276fpk().s[53]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_231v276fpk().s[54]++, await ClientService.getClientContracts(id, {
        page: parseInt(page),
        limit: parseInt(limit),
        status
      }));
      /* istanbul ignore next */
      cov_231v276fpk().s[55]++;
      res.json(result);
    } catch (error) {
      /* istanbul ignore next */
      cov_231v276fpk().s[56]++;
      console.error('Erro ao buscar contratos do cliente:', error);
      /* istanbul ignore next */
      cov_231v276fpk().s[57]++;
      res.status(500).json({
        error: 'Erro interno do servidor',
        code: 'CLIENT_CONTRACTS_FETCH_ERROR'
      });
    }
  }));

  /**
   * Obter pagamentos do cliente
   * @route GET /api/clients/:id/payments
   * @access Private
   */
  static getClientPayments =
  /* istanbul ignore next */
  (cov_231v276fpk().s[58]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_231v276fpk().f[6]++;
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_231v276fpk().s[59]++, req.params);
    const {
      page =
      /* istanbul ignore next */
      (cov_231v276fpk().b[15][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_231v276fpk().b[16][0]++, 10),
      status =
      /* istanbul ignore next */
      (cov_231v276fpk().b[17][0]++, '')
    } =
    /* istanbul ignore next */
    (cov_231v276fpk().s[60]++, req.query);
    /* istanbul ignore next */
    cov_231v276fpk().s[61]++;
    try {
      const result =
      /* istanbul ignore next */
      (cov_231v276fpk().s[62]++, await ClientService.getClientPayments(id, {
        page: parseInt(page),
        limit: parseInt(limit),
        status
      }));
      /* istanbul ignore next */
      cov_231v276fpk().s[63]++;
      res.json(result);
    } catch (error) {
      /* istanbul ignore next */
      cov_231v276fpk().s[64]++;
      console.error('Erro ao buscar pagamentos do cliente:', error);
      /* istanbul ignore next */
      cov_231v276fpk().s[65]++;
      res.status(500).json({
        error: 'Erro interno do servidor',
        code: 'CLIENT_PAYMENTS_FETCH_ERROR'
      });
    }
  }));

  /**
   * Buscar clientes por termo
   * @route GET /api/clients/search
   * @access Private
   */
  static searchClients =
  /* istanbul ignore next */
  (cov_231v276fpk().s[66]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_231v276fpk().f[7]++;
    const {
      q: query,
      limit =
      /* istanbul ignore next */
      (cov_231v276fpk().b[18][0]++, 10)
    } =
    /* istanbul ignore next */
    (cov_231v276fpk().s[67]++, req.query);
    /* istanbul ignore next */
    cov_231v276fpk().s[68]++;
    if (
    /* istanbul ignore next */
    (cov_231v276fpk().b[20][0]++, !query) ||
    /* istanbul ignore next */
    (cov_231v276fpk().b[20][1]++, query.trim().length < 2)) {
      /* istanbul ignore next */
      cov_231v276fpk().b[19][0]++;
      cov_231v276fpk().s[69]++;
      return res.status(400).json({
        error: 'Termo de busca deve ter pelo menos 2 caracteres',
        code: 'INVALID_SEARCH_TERM'
      });
    } else
    /* istanbul ignore next */
    {
      cov_231v276fpk().b[19][1]++;
    }
    cov_231v276fpk().s[70]++;
    try {
      const clients =
      /* istanbul ignore next */
      (cov_231v276fpk().s[71]++, await ClientService.searchClients(query.trim(), parseInt(limit)));
      /* istanbul ignore next */
      cov_231v276fpk().s[72]++;
      res.json({
        clients
      });
    } catch (error) {
      /* istanbul ignore next */
      cov_231v276fpk().s[73]++;
      console.error('Erro ao buscar clientes:', error);
      /* istanbul ignore next */
      cov_231v276fpk().s[74]++;
      res.status(500).json({
        error: 'Erro interno do servidor',
        code: 'CLIENT_SEARCH_ERROR'
      });
    }
  }));
}
/* istanbul ignore next */
cov_231v276fpk().s[75]++;
module.exports = {
  ClientController
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,