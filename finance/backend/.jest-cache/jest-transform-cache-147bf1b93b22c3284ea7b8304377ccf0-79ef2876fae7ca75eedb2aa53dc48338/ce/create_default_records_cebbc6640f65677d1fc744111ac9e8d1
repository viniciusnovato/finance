5868a0d2c328077a09027ae29b7d421a
/* istanbul ignore next */
function cov_gdlqw3ncj() {
  var path = "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/scripts/create_default_records.js";
  var hash = "9571dc5311692a70b42835e9f57525106f94deb7";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/scripts/create_default_records.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 27
        }
      },
      "1": {
        start: {
          line: 2,
          column: 25
        },
        end: {
          line: 2,
          column: 57
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "3": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 10,
          column: 48
        }
      },
      "4": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 56,
          column: 3
        }
      },
      "5": {
        start: {
          line: 14,
          column: 51
        },
        end: {
          line: 24,
          column: 15
        }
      },
      "6": {
        start: {
          line: 26,
          column: 4
        },
        end: {
          line: 30,
          column: 5
        }
      },
      "7": {
        start: {
          line: 27,
          column: 6
        },
        end: {
          line: 27,
          column: 70
        }
      },
      "8": {
        start: {
          line: 29,
          column: 6
        },
        end: {
          line: 29,
          column: 45
        }
      },
      "9": {
        start: {
          line: 33,
          column: 49
        },
        end: {
          line: 44,
          column: 15
        }
      },
      "10": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "11": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 47,
          column: 68
        }
      },
      "12": {
        start: {
          line: 49,
          column: 6
        },
        end: {
          line: 49,
          column: 44
        }
      },
      "13": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 60
        }
      },
      "14": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 50
        }
      },
      "15": {
        start: {
          line: 59,
          column: 0
        },
        end: {
          line: 59,
          column: 23
        }
      }
    },
    fnMap: {
      "0": {
        name: "createDefaultRecords",
        decl: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 9,
            column: 35
          }
        },
        loc: {
          start: {
            line: 9,
            column: 38
          },
          end: {
            line: 57,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 26,
            column: 4
          },
          end: {
            line: 30,
            column: 5
          }
        }, {
          start: {
            line: 28,
            column: 11
          },
          end: {
            line: 30,
            column: 5
          }
        }],
        line: 26
      },
      "1": {
        loc: {
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 46,
            column: 4
          },
          end: {
            line: 50,
            column: 5
          }
        }, {
          start: {
            line: 48,
            column: 11
          },
          end: {
            line: 50,
            column: 5
          }
        }],
        line: 46
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "9571dc5311692a70b42835e9f57525106f94deb7"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_gdlqw3ncj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_gdlqw3ncj();
cov_gdlqw3ncj().s[0]++;
require('dotenv').config();
const {
  createClient
} =
/* istanbul ignore next */
(cov_gdlqw3ncj().s[1]++, require('@supabase/supabase-js'));
const supabase =
/* istanbul ignore next */
(cov_gdlqw3ncj().s[2]++, createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY));
async function createDefaultRecords() {
  /* istanbul ignore next */
  cov_gdlqw3ncj().f[0]++;
  cov_gdlqw3ncj().s[3]++;
  console.log('üè¢ Criando registros padr√£o...');
  /* istanbul ignore next */
  cov_gdlqw3ncj().s[4]++;
  try {
    // Criar empresa padr√£o
    const {
      data: company,
      error: companyError
    } =
    /* istanbul ignore next */
    (cov_gdlqw3ncj().s[5]++, await supabase.from('companies').upsert({
      id: '00000000-0000-0000-0000-000000000001',
      name: 'Empresa Padr√£o',
      document: '00000000000100',
      document_type: 'CNPJ',
      email: 'contato@empresa.com',
      phone: '(11) 99999-9999'
    }, {
      onConflict: 'id'
    }).select());
    /* istanbul ignore next */
    cov_gdlqw3ncj().s[6]++;
    if (companyError) {
      /* istanbul ignore next */
      cov_gdlqw3ncj().b[0][0]++;
      cov_gdlqw3ncj().s[7]++;
      console.error('‚ùå Erro ao criar empresa:', companyError.message);
    } else {
      /* istanbul ignore next */
      cov_gdlqw3ncj().b[0][1]++;
      cov_gdlqw3ncj().s[8]++;
      console.log('‚úÖ Empresa padr√£o criada');
    }

    // Criar filial padr√£o
    const {
      data: branch,
      error: branchError
    } =
    /* istanbul ignore next */
    (cov_gdlqw3ncj().s[9]++, await supabase.from('branches').upsert({
      id: '00000000-0000-0000-0000-000000000001',
      company_id: '00000000-0000-0000-0000-000000000001',
      name: 'Filial Principal',
      address: 'Endere√ßo da Filial Principal',
      city: 'S√£o Paulo',
      state: 'SP',
      zip_code: '01000-000'
    }, {
      onConflict: 'id'
    }).select());
    /* istanbul ignore next */
    cov_gdlqw3ncj().s[10]++;
    if (branchError) {
      /* istanbul ignore next */
      cov_gdlqw3ncj().b[1][0]++;
      cov_gdlqw3ncj().s[11]++;
      console.error('‚ùå Erro ao criar filial:', branchError.message);
    } else {
      /* istanbul ignore next */
      cov_gdlqw3ncj().b[1][1]++;
      cov_gdlqw3ncj().s[12]++;
      console.log('‚úÖ Filial padr√£o criada');
    }
    /* istanbul ignore next */
    cov_gdlqw3ncj().s[13]++;
    console.log('üéâ Registros padr√£o criados com sucesso!');
  } catch (error) {
    /* istanbul ignore next */
    cov_gdlqw3ncj().s[14]++;
    console.error('‚ùå Erro geral:', error.message);
  }
}
/* istanbul ignore next */
cov_gdlqw3ncj().s[15]++;
createDefaultRecords();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfZ2RscXczbmNqIiwiYWN0dWFsQ292ZXJhZ2UiLCJzIiwicmVxdWlyZSIsImNvbmZpZyIsImNyZWF0ZUNsaWVudCIsInN1cGFiYXNlIiwicHJvY2VzcyIsImVudiIsIlNVUEFCQVNFX1VSTCIsIlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkiLCJjcmVhdGVEZWZhdWx0UmVjb3JkcyIsImYiLCJjb25zb2xlIiwibG9nIiwiZGF0YSIsImNvbXBhbnkiLCJlcnJvciIsImNvbXBhbnlFcnJvciIsImZyb20iLCJ1cHNlcnQiLCJpZCIsIm5hbWUiLCJkb2N1bWVudCIsImRvY3VtZW50X3R5cGUiLCJlbWFpbCIsInBob25lIiwib25Db25mbGljdCIsInNlbGVjdCIsImIiLCJtZXNzYWdlIiwiYnJhbmNoIiwiYnJhbmNoRXJyb3IiLCJjb21wYW55X2lkIiwiYWRkcmVzcyIsImNpdHkiLCJzdGF0ZSIsInppcF9jb2RlIl0sInNvdXJjZXMiOlsiY3JlYXRlX2RlZmF1bHRfcmVjb3Jkcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcbmNvbnN0IHsgY3JlYXRlQ2xpZW50IH0gPSByZXF1aXJlKCdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnKTtcblxuY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnQoXG4gIHByb2Nlc3MuZW52LlNVUEFCQVNFX1VSTCxcbiAgcHJvY2Vzcy5lbnYuU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWVxuKTtcblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlRGVmYXVsdFJlY29yZHMoKSB7XG4gIGNvbnNvbGUubG9nKCfwn4+iIENyaWFuZG8gcmVnaXN0cm9zIHBhZHLDo28uLi4nKTtcbiAgXG4gIHRyeSB7XG4gICAgLy8gQ3JpYXIgZW1wcmVzYSBwYWRyw6NvXG4gICAgY29uc3QgeyBkYXRhOiBjb21wYW55LCBlcnJvcjogY29tcGFueUVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ2NvbXBhbmllcycpXG4gICAgICAudXBzZXJ0KHtcbiAgICAgICAgaWQ6ICcwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDEnLFxuICAgICAgICBuYW1lOiAnRW1wcmVzYSBQYWRyw6NvJyxcbiAgICAgICAgZG9jdW1lbnQ6ICcwMDAwMDAwMDAwMDEwMCcsXG4gICAgICAgIGRvY3VtZW50X3R5cGU6ICdDTlBKJyxcbiAgICAgICAgZW1haWw6ICdjb250YXRvQGVtcHJlc2EuY29tJyxcbiAgICAgICAgcGhvbmU6ICcoMTEpIDk5OTk5LTk5OTknXG4gICAgICB9LCB7IG9uQ29uZmxpY3Q6ICdpZCcgfSlcbiAgICAgIC5zZWxlY3QoKTtcbiAgICBcbiAgICBpZiAoY29tcGFueUVycm9yKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCfinYwgRXJybyBhbyBjcmlhciBlbXByZXNhOicsIGNvbXBhbnlFcnJvci5tZXNzYWdlKTtcbiAgICB9IGVsc2Uge1xuICAgICAgY29uc29sZS5sb2coJ+KchSBFbXByZXNhIHBhZHLDo28gY3JpYWRhJyk7XG4gICAgfVxuICAgIFxuICAgIC8vIENyaWFyIGZpbGlhbCBwYWRyw6NvXG4gICAgY29uc3QgeyBkYXRhOiBicmFuY2gsIGVycm9yOiBicmFuY2hFcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgIC5mcm9tKCdicmFuY2hlcycpXG4gICAgICAudXBzZXJ0KHtcbiAgICAgICAgaWQ6ICcwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDEnLFxuICAgICAgICBjb21wYW55X2lkOiAnMDAwMDAwMDAtMDAwMC0wMDAwLTAwMDAtMDAwMDAwMDAwMDAxJyxcbiAgICAgICAgbmFtZTogJ0ZpbGlhbCBQcmluY2lwYWwnLFxuICAgICAgICBhZGRyZXNzOiAnRW5kZXJlw6dvIGRhIEZpbGlhbCBQcmluY2lwYWwnLFxuICAgICAgICBjaXR5OiAnU8OjbyBQYXVsbycsXG4gICAgICAgIHN0YXRlOiAnU1AnLFxuICAgICAgICB6aXBfY29kZTogJzAxMDAwLTAwMCdcbiAgICAgIH0sIHsgb25Db25mbGljdDogJ2lkJyB9KVxuICAgICAgLnNlbGVjdCgpO1xuICAgIFxuICAgIGlmIChicmFuY2hFcnJvcikge1xuICAgICAgY29uc29sZS5lcnJvcign4p2MIEVycm8gYW8gY3JpYXIgZmlsaWFsOicsIGJyYW5jaEVycm9yLm1lc3NhZ2UpO1xuICAgIH0gZWxzZSB7XG4gICAgICBjb25zb2xlLmxvZygn4pyFIEZpbGlhbCBwYWRyw6NvIGNyaWFkYScpO1xuICAgIH1cbiAgICBcbiAgICBjb25zb2xlLmxvZygn8J+OiSBSZWdpc3Ryb3MgcGFkcsOjbyBjcmlhZG9zIGNvbSBzdWNlc3NvIScpO1xuICAgIFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvIGdlcmFsOicsIGVycm9yLm1lc3NhZ2UpO1xuICB9XG59XG5cbmNyZWF0ZURlZmF1bHRSZWNvcmRzKCk7Il0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0lBZVk7SUFBQUEsYUFBQSxZQUFBQSxDQUFBO01BQUEsT0FBQUMsY0FBQTtJQUFBO0VBQUE7RUFBQSxPQUFBQSxjQUFBO0FBQUE7QUFBQUQsYUFBQTtBQUFBQSxhQUFBLEdBQUFFLENBQUE7QUFmWkMsT0FBTyxDQUFDLFFBQVEsQ0FBQyxDQUFDQyxNQUFNLENBQUMsQ0FBQztBQUMxQixNQUFNO0VBQUVD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