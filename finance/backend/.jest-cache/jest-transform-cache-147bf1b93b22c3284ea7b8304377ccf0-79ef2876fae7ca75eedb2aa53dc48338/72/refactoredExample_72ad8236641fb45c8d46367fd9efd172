146d9b76077a171a654e344c02e4a91c
/* istanbul ignore next */
function cov_t4zlpdmhy() {
  var path = "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/examples/refactoredExample.js";
  var hash = "d49d5271a2ebaee70ca3f1d008fdd97e9d259539";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/examples/refactoredExample.js",
    statementMap: {
      "0": {
        start: {
          line: 6,
          column: 35
        },
        end: {
          line: 6,
          column: 87
        }
      },
      "1": {
        start: {
          line: 7,
          column: 32
        },
        end: {
          line: 7,
          column: 78
        }
      },
      "2": {
        start: {
          line: 8,
          column: 35
        },
        end: {
          line: 8,
          column: 88
        }
      },
      "3": {
        start: {
          line: 9,
          column: 23
        },
        end: {
          line: 9,
          column: 57
        }
      },
      "4": {
        start: {
          line: 10,
          column: 25
        },
        end: {
          line: 10,
          column: 61
        }
      },
      "5": {
        start: {
          line: 11,
          column: 21
        },
        end: {
          line: 11,
          column: 53
        }
      },
      "6": {
        start: {
          line: 12,
          column: 23
        },
        end: {
          line: 12,
          column: 57
        }
      },
      "7": {
        start: {
          line: 13,
          column: 57
        },
        end: {
          line: 13,
          column: 86
        }
      },
      "8": {
        start: {
          line: 21,
          column: 29
        },
        end: {
          line: 21,
          column: 61
        }
      },
      "9": {
        start: {
          line: 24,
          column: 26
        },
        end: {
          line: 24,
          column: 71
        }
      },
      "10": {
        start: {
          line: 27,
          column: 29
        },
        end: {
          line: 27,
          column: 74
        }
      },
      "11": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 33,
          column: 6
        }
      },
      "12": {
        start: {
          line: 40,
          column: 4
        },
        end: {
          line: 48,
          column: 5
        }
      },
      "13": {
        start: {
          line: 41,
          column: 35
        },
        end: {
          line: 41,
          column: 59
        }
      },
      "14": {
        start: {
          line: 44,
          column: 6
        },
        end: {
          line: 44,
          column: 53
        }
      },
      "15": {
        start: {
          line: 47,
          column: 6
        },
        end: {
          line: 47,
          column: 53
        }
      },
      "16": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "17": {
        start: {
          line: 56,
          column: 32
        },
        end: {
          line: 56,
          column: 56
        }
      },
      "18": {
        start: {
          line: 59,
          column: 22
        },
        end: {
          line: 63,
          column: 7
        }
      },
      "19": {
        start: {
          line: 65,
          column: 25
        },
        end: {
          line: 68,
          column: 7
        }
      },
      "20": {
        start: {
          line: 70,
          column: 22
        },
        end: {
          line: 73,
          column: 7
        }
      },
      "21": {
        start: {
          line: 75,
          column: 21
        },
        end: {
          line: 79,
          column: 7
        }
      },
      "22": {
        start: {
          line: 81,
          column: 6
        },
        end: {
          line: 81,
          column: 51
        }
      },
      "23": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 55
        }
      },
      "24": {
        start: {
          line: 92,
          column: 4
        },
        end: {
          line: 110,
          column: 5
        }
      },
      "25": {
        start: {
          line: 93,
          column: 35
        },
        end: {
          line: 93,
          column: 59
        }
      },
      "26": {
        start: {
          line: 96,
          column: 25
        },
        end: {
          line: 103,
          column: 7
        }
      },
      "27": {
        start: {
          line: 105,
          column: 24
        },
        end: {
          line: 105,
          column: 71
        }
      },
      "28": {
        start: {
          line: 106,
          column: 6
        },
        end: {
          line: 106,
          column: 48
        }
      },
      "29": {
        start: {
          line: 109,
          column: 6
        },
        end: {
          line: 109,
          column: 58
        }
      },
      "30": {
        start: {
          line: 118,
          column: 18
        },
        end: {
          line: 118,
          column: 35
        }
      },
      "31": {
        start: {
          line: 119,
          column: 25
        },
        end: {
          line: 119,
          column: 61
        }
      },
      "32": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 120,
          column: 58
        }
      },
      "33": {
        start: {
          line: 123,
          column: 16
        },
        end: {
          line: 123,
          column: 29
        }
      },
      "34": {
        start: {
          line: 124,
          column: 23
        },
        end: {
          line: 124,
          column: 55
        }
      },
      "35": {
        start: {
          line: 125,
          column: 4
        },
        end: {
          line: 125,
          column: 52
        }
      },
      "36": {
        start: {
          line: 128,
          column: 24
        },
        end: {
          line: 128,
          column: 40
        }
      },
      "37": {
        start: {
          line: 129,
          column: 24
        },
        end: {
          line: 129,
          column: 68
        }
      },
      "38": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 50
        }
      },
      "39": {
        start: {
          line: 138,
          column: 17
        },
        end: {
          line: 138,
          column: 46
        }
      },
      "40": {
        start: {
          line: 139,
          column: 4
        },
        end: {
          line: 139,
          column: 72
        }
      },
      "41": {
        start: {
          line: 142,
          column: 19
        },
        end: {
          line: 142,
          column: 66
        }
      },
      "42": {
        start: {
          line: 143,
          column: 4
        },
        end: {
          line: 143,
          column: 67
        }
      },
      "43": {
        start: {
          line: 146,
          column: 4
        },
        end: {
          line: 146,
          column: 59
        }
      },
      "44": {
        start: {
          line: 154,
          column: 23
        },
        end: {
          line: 154,
          column: 45
        }
      },
      "45": {
        start: {
          line: 155,
          column: 28
        },
        end: {
          line: 155,
          column: 75
        }
      },
      "46": {
        start: {
          line: 156,
          column: 4
        },
        end: {
          line: 156,
          column: 56
        }
      },
      "47": {
        start: {
          line: 159,
          column: 20
        },
        end: {
          line: 159,
          column: 54
        }
      },
      "48": {
        start: {
          line: 160,
          column: 27
        },
        end: {
          line: 160,
          column: 54
        }
      },
      "49": {
        start: {
          line: 161,
          column: 24
        },
        end: {
          line: 161,
          column: 80
        }
      },
      "50": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 162,
          column: 50
        }
      },
      "51": {
        start: {
          line: 165,
          column: 20
        },
        end: {
          line: 165,
          column: 52
        }
      },
      "52": {
        start: {
          line: 166,
          column: 30
        },
        end: {
          line: 166,
          column: 61
        }
      },
      "53": {
        start: {
          line: 167,
          column: 22
        },
        end: {
          line: 167,
          column: 79
        }
      },
      "54": {
        start: {
          line: 168,
          column: 4
        },
        end: {
          line: 168,
          column: 50
        }
      },
      "55": {
        start: {
          line: 175,
          column: 4
        },
        end: {
          line: 198,
          column: 5
        }
      },
      "56": {
        start: {
          line: 176,
          column: 35
        },
        end: {
          line: 176,
          column: 59
        }
      },
      "57": {
        start: {
          line: 179,
          column: 6
        },
        end: {
          line: 191,
          column: 8
        }
      },
      "58": {
        start: {
          line: 194,
          column: 6
        },
        end: {
          line: 194,
          column: 55
        }
      },
      "59": {
        start: {
          line: 197,
          column: 6
        },
        end: {
          line: 197,
          column: 53
        }
      },
      "60": {
        start: {
          line: 205,
          column: 24
        },
        end: {
          line: 207,
          column: 1
        }
      },
      "61": {
        start: {
          line: 206,
          column: 2
        },
        end: {
          line: 206,
          column: 57
        }
      },
      "62": {
        start: {
          line: 213,
          column: 31
        },
        end: {
          line: 213,
          column: 73
        }
      },
      "63": {
        start: {
          line: 216,
          column: 2
        },
        end: {
          line: 216,
          column: 81
        }
      },
      "64": {
        start: {
          line: 217,
          column: 2
        },
        end: {
          line: 217,
          column: 85
        }
      },
      "65": {
        start: {
          line: 218,
          column: 2
        },
        end: {
          line: 218,
          column: 84
        }
      },
      "66": {
        start: {
          line: 219,
          column: 2
        },
        end: {
          line: 219,
          column: 92
        }
      },
      "67": {
        start: {
          line: 220,
          column: 2
        },
        end: {
          line: 220,
          column: 87
        }
      },
      "68": {
        start: {
          line: 221,
          column: 2
        },
        end: {
          line: 221,
          column: 88
        }
      },
      "69": {
        start: {
          line: 224,
          column: 2
        },
        end: {
          line: 224,
          column: 27
        }
      },
      "70": {
        start: {
          line: 227,
          column: 0
        },
        end: {
          line: 231,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 19,
            column: 2
          },
          end: {
            line: 19,
            column: 3
          }
        },
        loc: {
          start: {
            line: 19,
            column: 29
          },
          end: {
            line: 34,
            column: 3
          }
        },
        line: 19
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 39,
            column: 2
          },
          end: {
            line: 39,
            column: 3
          }
        },
        loc: {
          start: {
            line: 39,
            column: 48
          },
          end: {
            line: 49,
            column: 3
          }
        },
        line: 39
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 54,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        },
        loc: {
          start: {
            line: 54,
            column: 37
          },
          end: {
            line: 86,
            column: 3
          }
        },
        line: 54
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 91,
            column: 2
          },
          end: {
            line: 91,
            column: 3
          }
        },
        loc: {
          start: {
            line: 91,
            column: 40
          },
          end: {
            line: 111,
            column: 3
          }
        },
        line: 91
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 116,
            column: 2
          },
          end: {
            line: 116,
            column: 3
          }
        },
        loc: {
          start: {
            line: 116,
            column: 34
          },
          end: {
            line: 131,
            column: 3
          }
        },
        line: 116
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 136,
            column: 2
          },
          end: {
            line: 136,
            column: 3
          }
        },
        loc: {
          start: {
            line: 136,
            column: 35
          },
          end: {
            line: 147,
            column: 3
          }
        },
        line: 136
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 152,
            column: 2
          },
          end: {
            line: 152,
            column: 3
          }
        },
        loc: {
          start: {
            line: 152,
            column: 38
          },
          end: {
            line: 169,
            column: 3
          }
        },
        line: 152
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 174,
            column: 2
          },
          end: {
            line: 174,
            column: 3
          }
        },
        loc: {
          start: {
            line: 174,
            column: 45
          },
          end: {
            line: 199,
            column: 3
          }
        },
        line: 174
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 205,
            column: 24
          },
          end: {
            line: 205,
            column: 25
          }
        },
        loc: {
          start: {
            line: 205,
            column: 51
          },
          end: {
            line: 207,
            column: 1
          }
        },
        line: 205
      },
      "9": {
        name: "setupRefactoredRoutes",
        decl: {
          start: {
            line: 212,
            column: 9
          },
          end: {
            line: 212,
            column: 30
          }
        },
        loc: {
          start: {
            line: 212,
            column: 36
          },
          end: {
            line: 225,
            column: 1
          }
        },
        line: 212
      }
    },
    branchMap: {},
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0
    },
    b: {},
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "d49d5271a2ebaee70ca3f1d008fdd97e9d259539"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_t4zlpdmhy = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_t4zlpdmhy();
/**
 * Exemplo de uso das classes refatoradas seguindo Clean Code
 * Este arquivo demonstra como integrar todas as classes refatoradas
 */

const ClientControllerRefactored =
/* istanbul ignore next */
(cov_t4zlpdmhy().s[0]++, require('../controllers/ClientControllerRefactored'));
const ClientServiceRefactored =
/* istanbul ignore next */
(cov_t4zlpdmhy().s[1]++, require('../services/ClientServiceRefactored'));
const ClientRepositoryRefactored =
/* istanbul ignore next */
(cov_t4zlpdmhy().s[2]++, require('../repositories/ClientRepositoryRefactored'));
const ResponseHelper =
/* istanbul ignore next */
(cov_t4zlpdmhy().s[3]++, require('../utils/responseHelper'));
const ValidationHelper =
/* istanbul ignore next */
(cov_t4zlpdmhy().s[4]++, require('../utils/validationHelper'));
const ErrorHandler =
/* istanbul ignore next */
(cov_t4zlpdmhy().s[5]++, require('../utils/errorHandler'));
const DatabaseHelper =
/* istanbul ignore next */
(cov_t4zlpdmhy().s[6]++, require('../utils/databaseHelper'));
const {
  HttpStatusCodes,
  ErrorCodes,
  SuccessMessages
} =
/* istanbul ignore next */
(cov_t4zlpdmhy().s[7]++, require('../utils/constants'));

/**
 * Exemplo de configuração das dependências
 */
class RefactoredExampleSetup {
  static setupDependencies() {
    /* istanbul ignore next */
    cov_t4zlpdmhy().f[0]++;
    // Instanciar repositório
    const clientRepository =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[8]++, new ClientRepositoryRefactored());

    // Instanciar serviço com repositório
    const clientService =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[9]++, new ClientServiceRefactored(clientRepository));

    // Instanciar controller com serviço
    const clientController =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[10]++, new ClientControllerRefactored(clientService));
    /* istanbul ignore next */
    cov_t4zlpdmhy().s[11]++;
    return {
      clientRepository,
      clientService,
      clientController
    };
  }

  /**
   * Exemplo de uso do controller refatorado
   */
  static async exampleControllerUsage(req, res) {
    /* istanbul ignore next */
    cov_t4zlpdmhy().f[1]++;
    cov_t4zlpdmhy().s[12]++;
    try {
      const {
        clientController
      } =
      /* istanbul ignore next */
      (cov_t4zlpdmhy().s[13]++, this.setupDependencies());

      // Exemplo de busca de clientes com paginação
      /* istanbul ignore next */
      cov_t4zlpdmhy().s[14]++;
      await clientController.getAllClients(req, res);
    } catch (error) {
      /* istanbul ignore next */
      cov_t4zlpdmhy().s[15]++;
      ErrorHandler.handleControllerError(error, res);
    }
  }

  /**
   * Exemplo de uso do service refatorado
   */
  static async exampleServiceUsage() {
    /* istanbul ignore next */
    cov_t4zlpdmhy().f[2]++;
    cov_t4zlpdmhy().s[16]++;
    try {
      const {
        clientService
      } =
      /* istanbul ignore next */
      (cov_t4zlpdmhy().s[17]++, this.setupDependencies());

      // Exemplo de busca com filtros
      const filters =
      /* istanbul ignore next */
      (cov_t4zlpdmhy().s[18]++, {
        name: 'João',
        status: 'active',
        city: 'São Paulo'
      });
      const pagination =
      /* istanbul ignore next */
      (cov_t4zlpdmhy().s[19]++, {
        page: 1,
        limit: 10
      });
      const sorting =
      /* istanbul ignore next */
      (cov_t4zlpdmhy().s[20]++, {
        field: 'name',
        order: 'asc'
      });
      const result =
      /* istanbul ignore next */
      (cov_t4zlpdmhy().s[21]++, await clientService.findClientsWithPagination(filters, pagination, sorting));
      /* istanbul ignore next */
      cov_t4zlpdmhy().s[22]++;
      console.log('Clientes encontrados:', result);
    } catch (error) {
      /* istanbul ignore next */
      cov_t4zlpdmhy().s[23]++;
      console.error('Erro no service:', error.message);
    }
  }

  /**
   * Exemplo de uso do repository refatorado
   */
  static async exampleRepositoryUsage() {
    /* istanbul ignore next */
    cov_t4zlpdmhy().f[3]++;
    cov_t4zlpdmhy().s[24]++;
    try {
      const {
        clientRepository
      } =
      /* istanbul ignore next */
      (cov_t4zlpdmhy().s[25]++, this.setupDependencies());

      // Exemplo de criação de cliente
      const clientData =
      /* istanbul ignore next */
      (cov_t4zlpdmhy().s[26]++, {
        name: 'João Silva',
        email: 'joao@email.com',
        phone: '11999999999',
        tax_id: '12345678901',
        type: 'individual',
        status: 'active'
      });
      const newClient =
      /* istanbul ignore next */
      (cov_t4zlpdmhy().s[27]++, await clientRepository.createClient(clientData));
      /* istanbul ignore next */
      cov_t4zlpdmhy().s[28]++;
      console.log('Cliente criado:', newClient);
    } catch (error) {
      /* istanbul ignore next */
      cov_t4zlpdmhy().s[29]++;
      console.error('Erro no repository:', error.message);
    }
  }

  /**
   * Exemplo de uso dos helpers de validação
   */
  static exampleValidationUsage() {
    /* istanbul ignore next */
    cov_t4zlpdmhy().f[4]++;
    // Validação de email
    const email =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[30]++, 'teste@email.com');
    const isValidEmail =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[31]++, ValidationHelper.isValidEmail(email));
    /* istanbul ignore next */
    cov_t4zlpdmhy().s[32]++;
    console.log(`Email ${email} é válido:`, isValidEmail);

    // Validação de CPF
    const cpf =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[33]++, '12345678901');
    const isValidCPF =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[34]++, ValidationHelper.isValidCPF(cpf));
    /* istanbul ignore next */
    cov_t4zlpdmhy().s[35]++;
    console.log(`CPF ${cpf} é válido:`, isValidCPF);

    // Sanitização de string
    const dirtyString =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[36]++, '  João Silva  ');
    const cleanString =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[37]++, ValidationHelper.sanitizeString(dirtyString));
    /* istanbul ignore next */
    cov_t4zlpdmhy().s[38]++;
    console.log(`String limpa: '${cleanString}'`);
  }

  /**
   * Exemplo de uso do helper de resposta
   */
  static exampleResponseUsage(res) {
    /* istanbul ignore next */
    cov_t4zlpdmhy().f[5]++;
    // Resposta de sucesso
    const data =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[39]++, {
      id: 1,
      name: 'João Silva'
    });
    /* istanbul ignore next */
    cov_t4zlpdmhy().s[40]++;
    ResponseHelper.success(res, data, SuccessMessages.CLIENT_RETRIEVED);

    // Resposta de erro de validação
    const errors =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[41]++, [{
      field: 'email',
      message: 'Email inválido'
    }]);
    /* istanbul ignore next */
    cov_t4zlpdmhy().s[42]++;
    ResponseHelper.validationError(res, 'Dados inválidos', errors);

    // Resposta não encontrado
    /* istanbul ignore next */
    cov_t4zlpdmhy().s[43]++;
    ResponseHelper.notFound(res, 'Cliente não encontrado');
  }

  /**
   * Exemplo de uso do helper de banco de dados
   */
  static exampleDatabaseHelperUsage() {
    /* istanbul ignore next */
    cov_t4zlpdmhy().f[6]++;
    // Construção de query de paginação
    const pagination =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[44]++, {
      page: 2,
      limit: 15
    });
    const paginationQuery =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[45]++, DatabaseHelper.buildPaginationQuery(pagination));
    /* istanbul ignore next */
    cov_t4zlpdmhy().s[46]++;
    console.log('Query de paginação:', paginationQuery);

    // Construção de filtros
    const filters =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[47]++, {
      name: 'João',
      status: 'active'
    });
    const allowedFilters =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[48]++, ['name', 'status', 'email']);
    const filterQuery =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[49]++, DatabaseHelper.buildFilterQuery(filters, allowedFilters));
    /* istanbul ignore next */
    cov_t4zlpdmhy().s[50]++;
    console.log('Query de filtros:', filterQuery);

    // Construção de ordenação
    const sorting =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[51]++, {
      field: 'name',
      order: 'desc'
    });
    const allowedSortFields =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[52]++, ['name', 'email', 'created_at']);
    const sortQuery =
    /* istanbul ignore next */
    (cov_t4zlpdmhy().s[53]++, DatabaseHelper.buildSortQuery(sorting, allowedSortFields));
    /* istanbul ignore next */
    cov_t4zlpdmhy().s[54]++;
    console.log('Query de ordenação:', sortQuery);
  }

  /**
   * Exemplo completo de fluxo de criação de cliente
   */
  static async exampleCompleteFlow(req, res) {
    /* istanbul ignore next */
    cov_t4zlpdmhy().f[7]++;
    cov_t4zlpdmhy().s[55]++;
    try {
      const {
        clientController
      } =
      /* istanbul ignore next */
      (cov_t4zlpdmhy().s[56]++, this.setupDependencies());

      // Simular dados da requisição
      /* istanbul ignore next */
      cov_t4zlpdmhy().s[57]++;
      req.body = {
        name: 'Maria Santos',
        email: 'maria@email.com',
        phone: '11888888888',
        tax_id: '98765432100',
        type: 'individual',
        address: {
          street: 'Rua das Flores, 123',
          city: 'São Paulo',
          state: 'SP',
          zip_code: '01234-567'
        }
      };

      // Executar criação através do controller
      /* istanbul ignore next */
      cov_t4zlpdmhy().s[58]++;
      await clientController.createNewClient(req, res);
    } catch (error) {
      /* istanbul ignore next */
      cov_t4zlpdmhy().s[59]++;
      ErrorHandler.handleControllerError(error, res);
    }
  }
}

/**
 * Exemplo de middleware de tratamento de erros
 */
/* istanbul ignore next */
cov_t4zlpdmhy().s[60]++;
const errorMiddleware = (error, req, res, next) => {
  /* istanbul ignore next */
  cov_t4zlpdmhy().f[8]++;
  cov_t4zlpdmhy().s[61]++;
  ErrorHandler.handleExpressError(error, req, res, next);
};

/**
 * Exemplo de configuração de rotas com as classes refatoradas
 */
function setupRefactoredRoutes(app) {
  /* istanbul ignore next */
  cov_t4zlpdmhy().f[9]++;
  const {
    clientController
  } =
  /* istanbul ignore next */
  (cov_t4zlpdmhy().s[62]++, RefactoredExampleSetup.setupDependencies());

  // Rotas de clientes
  /* istanbul ignore next */
  cov_t4zlpdmhy().s[63]++;
  app.get('/api/clients', clientController.getAllClients.bind(clientController));
  /* istanbul ignore next */
  cov_t4zlpdmhy().s[64]++;
  app.get('/api/clients/:id', clientController.getClientById.bind(clientController));
  /* istanbul ignore next */
  cov_t4zlpdmhy().s[65]++;
  app.post('/api/clients', clientController.createNewClient.bind(clientController));
  /* istanbul ignore next */
  cov_t4zlpdmhy().s[66]++;
  app.put('/api/clients/:id', clientController.updateExistingClient.bind(clientController));
  /* istanbul ignore next */
  cov_t4zlpdmhy().s[67]++;
  app.delete('/api/clients/:id', clientController.removeClient.bind(clientController));
  /* istanbul ignore next */
  cov_t4zlpdmhy().s[68]++;
  app.get('/api/clients/search', clientController.searchClients.bind(clientController));

  // Middleware de tratamento de erros
  /* istanbul ignore next */
  cov_t4zlpdmhy().s[69]++;
  app.use(errorMiddleware);
}
/* istanbul ignore next */
cov_t4zlpdmhy().s[70]++;
module.exports = {
  RefactoredExampleSetup,
  setupRefactoredRoutes,
  errorMiddleware
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,