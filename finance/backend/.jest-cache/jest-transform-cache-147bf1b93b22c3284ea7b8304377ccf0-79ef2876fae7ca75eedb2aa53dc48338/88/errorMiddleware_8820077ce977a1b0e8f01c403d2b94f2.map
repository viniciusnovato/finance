{"version":3,"names":["cov_20zqwaaxzf","actualCoverage","s","notFound","req","res","next","f","error","Error","originalUrl","status","errorHandler","err","statusCode","b","message","code","isJoi","json","details","map","detail","field","path","join","timestamp","Date","toISOString","startsWith","name","process","env","NODE_ENV","console","stack","asyncHandler","fn","Promise","resolve","catch","module","exports"],"sources":["errorMiddleware.js"],"sourcesContent":["// Middleware para rotas não encontradas\nconst notFound = (req, res, next) => {\n  const error = new Error(`Rota não encontrada - ${req.originalUrl}`);\n  res.status(404);\n  next(error);\n};\n\n// Middleware para tratamento de erros\nconst errorHandler = (err, req, res, next) => {\n  let statusCode = res.statusCode === 200 ? 500 : res.statusCode;\n  let message = err.message;\n  let code = err.code || 'INTERNAL_ERROR';\n\n  // Erro de validação do Joi\n  if (err.isJoi) {\n    statusCode = 400;\n    message = 'Dados inválidos';\n    code = 'VALIDATION_ERROR';\n    \n    return res.status(statusCode).json({\n      error: message,\n      code,\n      details: err.details.map(detail => ({\n        field: detail.path.join('.'),\n        message: detail.message\n      })),\n      timestamp: new Date().toISOString(),\n      path: req.originalUrl\n    });\n  }\n\n  // Erro do Supabase\n  if (err.code && err.code.startsWith('PGRST')) {\n    statusCode = 400;\n    message = 'Erro na operação do banco de dados';\n    code = 'DATABASE_ERROR';\n  }\n\n  // Erro de token JWT\n  if (err.name === 'JsonWebTokenError') {\n    statusCode = 401;\n    message = 'Token inválido';\n    code = 'INVALID_TOKEN';\n  }\n\n  if (err.name === 'TokenExpiredError') {\n    statusCode = 401;\n    message = 'Token expirado';\n    code = 'EXPIRED_TOKEN';\n  }\n\n  // Erro de arquivo muito grande\n  if (err.code === 'LIMIT_FILE_SIZE') {\n    statusCode = 413;\n    message = 'Arquivo muito grande';\n    code = 'FILE_TOO_LARGE';\n  }\n\n  // Log do erro em desenvolvimento\n  if (process.env.NODE_ENV === 'development') {\n    console.error('Error Stack:', err.stack);\n  }\n\n  res.status(statusCode).json({\n    error: message,\n    code,\n    ...(process.env.NODE_ENV === 'development' && { stack: err.stack }),\n    timestamp: new Date().toISOString(),\n    path: req.originalUrl\n  });\n};\n\n// Middleware para capturar erros assíncronos\nconst asyncHandler = (fn) => (req, res, next) => {\n  Promise.resolve(fn(req, res, next)).catch(next);\n};\n\nmodule.exports = {\n  notFound,\n  errorHandler,\n  asyncHandler\n};"],"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","ignoreList":[]}