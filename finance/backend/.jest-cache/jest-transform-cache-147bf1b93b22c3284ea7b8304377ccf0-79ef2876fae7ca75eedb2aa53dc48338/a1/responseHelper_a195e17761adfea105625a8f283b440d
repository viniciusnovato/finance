4fe4c577c682672c184eb834de3d56dd
/* istanbul ignore next */
"use strict";

function cov_2bpxtpwsdt() {
  var path = "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/utils/responseHelper.js";
  var hash = "6e40631f97c8cff1d2838c4e7199b5d91825089b";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/utils/responseHelper.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 28
        },
        end: {
          line: 1,
          column: 50
        }
      },
      "1": {
        start: {
          line: 15,
          column: 21
        },
        end: {
          line: 19,
          column: 5
        }
      },
      "2": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 49
        }
      },
      "3": {
        start: {
          line: 33,
          column: 21
        },
        end: {
          line: 40,
          column: 5
        }
      },
      "4": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 5
        }
      },
      "5": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 39
        }
      },
      "6": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 49
        }
      },
      "7": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 61,
          column: 6
        }
      },
      "8": {
        start: {
          line: 72,
          column: 21
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "9": {
        start: {
          line: 87,
          column: 4
        },
        end: {
          line: 87,
          column: 57
        }
      },
      "10": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 102,
          column: 6
        }
      },
      "11": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 117,
          column: 6
        }
      },
      "12": {
        start: {
          line: 126,
          column: 4
        },
        end: {
          line: 131,
          column: 6
        }
      },
      "13": {
        start: {
          line: 140,
          column: 4
        },
        end: {
          line: 145,
          column: 6
        }
      },
      "14": {
        start: {
          line: 152,
          column: 4
        },
        end: {
          line: 157,
          column: 7
        }
      },
      "15": {
        start: {
          line: 164,
          column: 4
        },
        end: {
          line: 169,
          column: 7
        }
      },
      "16": {
        start: {
          line: 176,
          column: 4
        },
        end: {
          line: 181,
          column: 7
        }
      },
      "17": {
        start: {
          line: 188,
          column: 4
        },
        end: {
          line: 193,
          column: 7
        }
      },
      "18": {
        start: {
          line: 203,
          column: 4
        },
        end: {
          line: 209,
          column: 6
        }
      },
      "19": {
        start: {
          line: 217,
          column: 4
        },
        end: {
          line: 217,
          column: 57
        }
      },
      "20": {
        start: {
          line: 228,
          column: 23
        },
        end: {
          line: 228,
          column: 52
        }
      },
      "21": {
        start: {
          line: 230,
          column: 4
        },
        end: {
          line: 237,
          column: 6
        }
      },
      "22": {
        start: {
          line: 241,
          column: 0
        },
        end: {
          line: 241,
          column: 36
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 14,
            column: 2
          },
          end: {
            line: 14,
            column: 3
          }
        },
        loc: {
          start: {
            line: 14,
            column: 70
          },
          end: {
            line: 22,
            column: 3
          }
        },
        line: 14
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 32,
            column: 2
          },
          end: {
            line: 32,
            column: 3
          }
        },
        loc: {
          start: {
            line: 32,
            column: 67
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 32
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 54,
            column: 2
          },
          end: {
            line: 54,
            column: 3
          }
        },
        loc: {
          start: {
            line: 54,
            column: 52
          },
          end: {
            line: 62,
            column: 3
          }
        },
        line: 54
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 71,
            column: 2
          },
          end: {
            line: 71,
            column: 3
          }
        },
        loc: {
          start: {
            line: 71,
            column: 65
          },
          end: {
            line: 88,
            column: 3
          }
        },
        line: 71
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 96,
            column: 2
          },
          end: {
            line: 96,
            column: 3
          }
        },
        loc: {
          start: {
            line: 96,
            column: 78
          },
          end: {
            line: 103,
            column: 3
          }
        },
        line: 96
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 111,
            column: 2
          },
          end: {
            line: 111,
            column: 3
          }
        },
        loc: {
          start: {
            line: 111,
            column: 77
          },
          end: {
            line: 118,
            column: 3
          }
        },
        line: 111
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 125,
            column: 2
          },
          end: {
            line: 125,
            column: 3
          }
        },
        loc: {
          start: {
            line: 125,
            column: 66
          },
          end: {
            line: 132,
            column: 3
          }
        },
        line: 125
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 139,
            column: 2
          },
          end: {
            line: 139,
            column: 3
          }
        },
        loc: {
          start: {
            line: 139,
            column: 57
          },
          end: {
            line: 146,
            column: 3
          }
        },
        line: 139
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 151,
            column: 2
          },
          end: {
            line: 151,
            column: 3
          }
        },
        loc: {
          start: {
            line: 151,
            column: 64
          },
          end: {
            line: 158,
            column: 3
          }
        },
        line: 151
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 163,
            column: 2
          },
          end: {
            line: 163,
            column: 3
          }
        },
        loc: {
          start: {
            line: 163,
            column: 62
          },
          end: {
            line: 170,
            column: 3
          }
        },
        line: 163
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 175,
            column: 2
          },
          end: {
            line: 175,
            column: 3
          }
        },
        loc: {
          start: {
            line: 175,
            column: 50
          },
          end: {
            line: 182,
            column: 3
          }
        },
        line: 175
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 187,
            column: 2
          },
          end: {
            line: 187,
            column: 3
          }
        },
        loc: {
          start: {
            line: 187,
            column: 67
          },
          end: {
            line: 194,
            column: 3
          }
        },
        line: 187
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 202,
            column: 2
          },
          end: {
            line: 202,
            column: 3
          }
        },
        loc: {
          start: {
            line: 202,
            column: 86
          },
          end: {
            line: 210,
            column: 3
          }
        },
        line: 202
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 216,
            column: 2
          },
          end: {
            line: 216,
            column: 3
          }
        },
        loc: {
          start: {
            line: 216,
            column: 28
          },
          end: {
            line: 218,
            column: 3
          }
        },
        line: 216
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 227,
            column: 2
          },
          end: {
            line: 227,
            column: 3
          }
        },
        loc: {
          start: {
            line: 227,
            column: 51
          },
          end: {
            line: 238,
            column: 3
          }
        },
        line: 227
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 14,
            column: 26
          },
          end: {
            line: 14,
            column: 35
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 33
          },
          end: {
            line: 14,
            column: 35
          }
        }],
        line: 14
      },
      "1": {
        loc: {
          start: {
            line: 14,
            column: 37
          },
          end: {
            line: 14,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 14,
            column: 50
          },
          end: {
            line: 14,
            column: 68
          }
        }],
        line: 14
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 51
          },
          end: {
            line: 32,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 32,
            column: 61
          },
          end: {
            line: 32,
            column: 65
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 4
          },
          end: {
            line: 44,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 42
      },
      "4": {
        loc: {
          start: {
            line: 71,
            column: 54
          },
          end: {
            line: 71,
            column: 63
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 71,
            column: 61
          },
          end: {
            line: 71,
            column: 63
          }
        }],
        line: 71
      },
      "5": {
        loc: {
          start: {
            line: 96,
            column: 27
          },
          end: {
            line: 96,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 96,
            column: 38
          },
          end: {
            line: 96,
            column: 47
          }
        }],
        line: 96
      },
      "6": {
        loc: {
          start: {
            line: 96,
            column: 49
          },
          end: {
            line: 96,
            column: 76
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 96,
            column: 56
          },
          end: {
            line: 96,
            column: 76
          }
        }],
        line: 96
      },
      "7": {
        loc: {
          start: {
            line: 111,
            column: 27
          },
          end: {
            line: 111,
            column: 47
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 111,
            column: 38
          },
          end: {
            line: 111,
            column: 47
          }
        }],
        line: 111
      },
      "8": {
        loc: {
          start: {
            line: 111,
            column: 49
          },
          end: {
            line: 111,
            column: 75
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 111,
            column: 56
          },
          end: {
            line: 111,
            column: 75
          }
        }],
        line: 111
      },
      "9": {
        loc: {
          start: {
            line: 125,
            column: 31
          },
          end: {
            line: 125,
            column: 64
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 125,
            column: 41
          },
          end: {
            line: 125,
            column: 64
          }
        }],
        line: 125
      },
      "10": {
        loc: {
          start: {
            line: 139,
            column: 28
          },
          end: {
            line: 139,
            column: 55
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 139,
            column: 38
          },
          end: {
            line: 139,
            column: 55
          }
        }],
        line: 139
      },
      "11": {
        loc: {
          start: {
            line: 151,
            column: 29
          },
          end: {
            line: 151,
            column: 62
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 151,
            column: 39
          },
          end: {
            line: 151,
            column: 62
          }
        }],
        line: 151
      },
      "12": {
        loc: {
          start: {
            line: 163,
            column: 30
          },
          end: {
            line: 163,
            column: 60
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 163,
            column: 40
          },
          end: {
            line: 163,
            column: 60
          }
        }],
        line: 163
      },
      "13": {
        loc: {
          start: {
            line: 175,
            column: 25
          },
          end: {
            line: 175,
            column: 48
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 175,
            column: 35
          },
          end: {
            line: 175,
            column: 48
          }
        }],
        line: 175
      },
      "14": {
        loc: {
          start: {
            line: 187,
            column: 33
          },
          end: {
            line: 187,
            column: 65
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 187,
            column: 43
          },
          end: {
            line: 187,
            column: 65
          }
        }],
        line: 187
      },
      "15": {
        loc: {
          start: {
            line: 202,
            column: 32
          },
          end: {
            line: 202,
            column: 68
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 202,
            column: 42
          },
          end: {
            line: 202,
            column: 68
          }
        }],
        line: 202
      },
      "16": {
        loc: {
          start: {
            line: 202,
            column: 70
          },
          end: {
            line: 202,
            column: 84
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 202,
            column: 80
          },
          end: {
            line: 202,
            column: 84
          }
        }],
        line: 202
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0],
      "3": [0, 0],
      "4": [0],
      "5": [0],
      "6": [0],
      "7": [0],
      "8": [0],
      "9": [0],
      "10": [0],
      "11": [0],
      "12": [0],
      "13": [0],
      "14": [0],
      "15": [0],
      "16": [0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6e40631f97c8cff1d2838c4e7199b5d91825089b"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2bpxtpwsdt = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2bpxtpwsdt();
const {
  HttpStatusCodes
} =
/* istanbul ignore next */
(cov_2bpxtpwsdt().s[0]++, require('./constants'));

/**
 * Helper para padronizar respostas da API
 * Centraliza a lógica de formatação de respostas de sucesso e erro
 */
class ResponseHelper {
  /**
   * Envia resposta de sucesso padronizada
   * @param {Object} res - Objeto de resposta do Express
   * @param {Object} data - Dados a serem enviados
   * @param {number} statusCode - Código de status HTTP (padrão: 200)
   */
  static sendSuccess(res, data =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[0][0]++, {}), statusCode =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[1][0]++, HttpStatusCodes.OK)) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[0]++;
    const response =
    /* istanbul ignore next */
    (cov_2bpxtpwsdt().s[1]++, {
      success: true,
      timestamp: new Date().toISOString(),
      ...data
    });
    /* istanbul ignore next */
    cov_2bpxtpwsdt().s[2]++;
    return res.status(statusCode).json(response);
  }

  /**
   * Envia resposta de erro padronizada
   * @param {Object} res - Objeto de resposta do Express
   * @param {number} statusCode - Código de status HTTP
   * @param {string} message - Mensagem de erro
   * @param {string} code - Código de erro específico
   * @param {Object} details - Detalhes adicionais do erro (opcional)
   */
  static sendError(res, statusCode, message, code, details =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[2][0]++, null)) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[1]++;
    const response =
    /* istanbul ignore next */
    (cov_2bpxtpwsdt().s[3]++, {
      success: false,
      error: {
        message,
        code,
        timestamp: new Date().toISOString()
      }
    });
    /* istanbul ignore next */
    cov_2bpxtpwsdt().s[4]++;
    if (details) {
      /* istanbul ignore next */
      cov_2bpxtpwsdt().b[3][0]++;
      cov_2bpxtpwsdt().s[5]++;
      response.error.details = details;
    } else
    /* istanbul ignore next */
    {
      cov_2bpxtpwsdt().b[3][1]++;
    }
    cov_2bpxtpwsdt().s[6]++;
    return res.status(statusCode).json(response);
  }

  /**
   * Envia resposta de validação com erros específicos
   * @param {Object} res - Objeto de resposta do Express
   * @param {Array} validationErrors - Array de erros de validação
   */
  static sendValidationError(res, validationErrors) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[2]++;
    cov_2bpxtpwsdt().s[7]++;
    return ResponseHelper.sendError(res, HttpStatusCodes.UNPROCESSABLE_ENTITY, 'Dados de entrada inválidos', 'VALIDATION_ERROR', {
      validationErrors
    });
  }

  /**
   * Envia resposta de dados paginados
   * @param {Object} res - Objeto de resposta do Express
   * @param {Array} data - Array de dados
   * @param {Object} pagination - Informações de paginação
   * @param {Object} meta - Metadados adicionais (opcional)
   */
  static sendPaginatedResponse(res, data, pagination, meta =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[4][0]++, {})) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[3]++;
    const response =
    /* istanbul ignore next */
    (cov_2bpxtpwsdt().s[8]++, {
      success: true,
      timestamp: new Date().toISOString(),
      data,
      pagination: {
        currentPage: pagination.page,
        totalPages: pagination.totalPages,
        totalItems: pagination.totalItems,
        itemsPerPage: pagination.limit,
        hasNextPage: pagination.page < pagination.totalPages,
        hasPreviousPage: pagination.page > 1
      },
      ...meta
    });
    /* istanbul ignore next */
    cov_2bpxtpwsdt().s[9]++;
    return res.status(HttpStatusCodes.OK).json(response);
  }

  /**
   * Envia resposta de recurso não encontrado
   * @param {Object} res - Objeto de resposta do Express
   * @param {string} resource - Nome do recurso não encontrado
   * @param {string} code - Código de erro específico
   */
  static sendNotFound(res, resource =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[5][0]++, 'Recurso'), code =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[6][0]++, 'RESOURCE_NOT_FOUND')) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[4]++;
    cov_2bpxtpwsdt().s[10]++;
    return ResponseHelper.sendError(res, HttpStatusCodes.NOT_FOUND, `${resource} não encontrado`, code);
  }

  /**
   * Envia resposta de conflito (recurso já existe)
   * @param {Object} res - Objeto de resposta do Express
   * @param {string} resource - Nome do recurso em conflito
   * @param {string} code - Código de erro específico
   */
  static sendConflict(res, resource =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[7][0]++, 'Recurso'), code =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[8][0]++, 'RESOURCE_CONFLICT')) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[5]++;
    cov_2bpxtpwsdt().s[11]++;
    return ResponseHelper.sendError(res, HttpStatusCodes.CONFLICT, `${resource} já existe`, code);
  }

  /**
   * Envia resposta de acesso não autorizado
   * @param {Object} res - Objeto de resposta do Express
   * @param {string} message - Mensagem personalizada (opcional)
   */
  static sendUnauthorized(res, message =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[9][0]++, 'Acesso não autorizado')) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[6]++;
    cov_2bpxtpwsdt().s[12]++;
    return ResponseHelper.sendError(res, HttpStatusCodes.UNAUTHORIZED, message, 'UNAUTHORIZED_ACCESS');
  }

  /**
   * Envia resposta de acesso proibido
   * @param {Object} res - Objeto de resposta do Express
   * @param {string} message - Mensagem personalizada (opcional)
   */
  static sendForbidden(res, message =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[10][0]++, 'Acesso proibido')) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[7]++;
    cov_2bpxtpwsdt().s[13]++;
    return ResponseHelper.sendError(res, HttpStatusCodes.FORBIDDEN, message, 'FORBIDDEN_ACCESS');
  }

  /**
   * Resposta de timeout de requisição (408)
   */
  static requestTimeout(res, message =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[11][0]++, 'Timeout da requisição')) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[8]++;
    cov_2bpxtpwsdt().s[14]++;
    return res.status(HttpStatusCodes.REQUEST_TIMEOUT).json({
      success: false,
      message,
      code: 'REQUEST_TIMEOUT',
      timestamp: new Date().toISOString()
    });
  }

  /**
   * Resposta de muitas requisições (429)
   */
  static tooManyRequests(res, message =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[12][0]++, 'Muitas requisições')) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[9]++;
    cov_2bpxtpwsdt().s[15]++;
    return res.status(HttpStatusCodes.TOO_MANY_REQUESTS).json({
      success: false,
      message,
      code: 'TOO_MANY_REQUESTS',
      timestamp: new Date().toISOString()
    });
  }

  /**
   * Resposta de bad gateway (502)
   */
  static badGateway(res, message =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[13][0]++, 'Bad Gateway')) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[10]++;
    cov_2bpxtpwsdt().s[16]++;
    return res.status(HttpStatusCodes.BAD_GATEWAY).json({
      success: false,
      message,
      code: 'BAD_GATEWAY',
      timestamp: new Date().toISOString()
    });
  }

  /**
   * Resposta de serviço indisponível (503)
   */
  static serviceUnavailable(res, message =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[14][0]++, 'Serviço indisponível')) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[11]++;
    cov_2bpxtpwsdt().s[17]++;
    return res.status(HttpStatusCodes.SERVICE_UNAVAILABLE).json({
      success: false,
      message,
      code: 'SERVICE_UNAVAILABLE',
      timestamp: new Date().toISOString()
    });
  }

  /**
   * Envia resposta de erro interno do servidor
   * @param {Object} res - Objeto de resposta do Express
   * @param {string} message - Mensagem de erro (opcional)
   * @param {Object} details - Detalhes do erro (opcional)
   */
  static sendInternalError(res, message =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[15][0]++, 'Erro interno do servidor'), details =
  /* istanbul ignore next */
  (cov_2bpxtpwsdt().b[16][0]++, null)) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[12]++;
    cov_2bpxtpwsdt().s[18]++;
    return ResponseHelper.sendError(res, HttpStatusCodes.INTERNAL_SERVER_ERROR, message, 'INTERNAL_SERVER_ERROR', details);
  }

  /**
   * Envia resposta de operação bem-sucedida sem conteúdo
   * @param {Object} res - Objeto de resposta do Express
   */
  static sendNoContent(res) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[13]++;
    cov_2bpxtpwsdt().s[19]++;
    return res.status(HttpStatusCodes.NO_CONTENT).send();
  }

  /**
   * Formata dados de paginação para resposta
   * @param {number} page - Página atual
   * @param {number} limit - Itens por página
   * @param {number} totalItems - Total de itens
   * @returns {Object} Objeto de paginação formatado
   */
  static formatPagination(page, limit, totalItems) {
    /* istanbul ignore next */
    cov_2bpxtpwsdt().f[14]++;
    const totalPages =
    /* istanbul ignore next */
    (cov_2bpxtpwsdt().s[20]++, Math.ceil(totalItems / limit));
    /* istanbul ignore next */
    cov_2bpxtpwsdt().s[21]++;
    return {
      page,
      limit,
      totalItems,
      totalPages,
      hasNextPage: page < totalPages,
      hasPreviousPage: page > 1
    };
  }
}
/* istanbul ignore next */
cov_2bpxtpwsdt().s[22]++;
module.exports = {
  ResponseHelper
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,