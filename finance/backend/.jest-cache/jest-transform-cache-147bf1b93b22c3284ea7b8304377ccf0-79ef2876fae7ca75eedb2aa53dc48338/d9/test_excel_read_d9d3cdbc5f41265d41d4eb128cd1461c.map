{"version":3,"names":["cov_27vjwxp0t1","path","hash","global","Function","gcv","coverageData","statementMap","start","line","column","end","fnMap","name","decl","loc","branchMap","type","locations","undefined","s","f","b","_coverageSchema","coverage","actualCoverage","XLSX","require","fs","testExcelRead","excelFilePath","console","log","existsSync","error","workbook","readFile","SheetNames","length","forEach","sheetName","index","worksheet","Sheets","jsonData","utils","sheet_to_json","defval","Object","keys","join","JSON","stringify","columns","col","nonEmptyValues","filter","row","percentage","toFixed","message","stack"],"sources":["test_excel_read.js"],"sourcesContent":["#!/usr/bin/env node\n\n/**\n * Script de teste para ler a planilha Excel\n */\n\nconst XLSX = require('xlsx');\nconst fs = require('fs');\n\nfunction testExcelRead() {\n    const excelFilePath = '/Users/insitutoareluna/Documents/finance/MACRO_PAGAMENTOS INSTITUTO ARELUNA - Edit√°vel (1).xlsm';\n    \n    console.log('=== Teste de Leitura da Planilha Excel ===');\n    console.log(`Arquivo: ${excelFilePath}`);\n    \n    // Verificar se o arquivo existe\n    if (!fs.existsSync(excelFilePath)) {\n        console.error(`‚ùå Arquivo n√£o encontrado: ${excelFilePath}`);\n        return;\n    }\n    \n    console.log('‚úÖ Arquivo encontrado');\n    \n    try {\n        // Ler o arquivo\n        console.log('üìñ Lendo arquivo...');\n        const workbook = XLSX.readFile(excelFilePath);\n        \n        console.log('‚úÖ Arquivo lido com sucesso');\n        console.log(`üìä Abas encontradas: ${workbook.SheetNames.length}`);\n        \n        workbook.SheetNames.forEach((sheetName, index) => {\n            console.log(`\\n--- Aba ${index + 1}: ${sheetName} ---`);\n            \n            const worksheet = workbook.Sheets[sheetName];\n            const jsonData = XLSX.utils.sheet_to_json(worksheet, { defval: null });\n            \n            console.log(`üìù Linhas de dados: ${jsonData.length}`);\n            \n            if (jsonData.length > 0) {\n                console.log(`üî§ Colunas: ${Object.keys(jsonData[0]).join(', ')}`);\n                \n                // Mostrar primeira linha como exemplo\n                console.log('\\nüìã Primeira linha de dados:');\n                console.log(JSON.stringify(jsonData[0], null, 2));\n                \n                // Mostrar estat√≠sticas das colunas\n                const columns = Object.keys(jsonData[0]);\n                console.log('\\nüìà Estat√≠sticas das colunas:');\n                columns.forEach(col => {\n                    const nonEmptyValues = jsonData.filter(row => row[col] !== null && row[col] !== '').length;\n                    const percentage = ((nonEmptyValues / jsonData.length) * 100).toFixed(1);\n                    console.log(`  ${col}: ${nonEmptyValues}/${jsonData.length} (${percentage}%) valores preenchidos`);\n                });\n            } else {\n                console.log('‚ö†Ô∏è  Aba vazia');\n            }\n        });\n        \n        console.log('\\n‚úÖ Teste conclu√≠do com sucesso!');\n        \n    } catch (error) {\n        console.error('‚ùå Erro ao ler arquivo:', error.message);\n        console.error('Stack trace:', error.stack);\n    }\n}\n\n// Executar teste\ntestExcelRead();"],"mappings":"AAAA;;AAEA;AACA;AACA;AAFA;AAAA,SAAAA,eAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,IAAA;EAAA,IAAAC,MAAA,OAAAC,QAAA;EAAA,IAAAC,GAAA;EAAA,IAAAC,YAAA;IAAAL,IAAA;IAAAM,YAAA;MAAA;QAAAC,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAAF,KAAA;UAAAC,IAAA;UAAAC,MAAA;QAAA;QAAAC,GAAA;UAAAF,IAAA;UAAAC,MAAA;QAAA;MAAA;MAAA;QAAA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","ignoreList":[]}