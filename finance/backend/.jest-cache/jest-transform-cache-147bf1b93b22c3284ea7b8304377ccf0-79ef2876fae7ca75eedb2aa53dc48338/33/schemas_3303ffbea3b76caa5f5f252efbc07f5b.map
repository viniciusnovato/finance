{"version":3,"names":["cov_1mp2z3zokl","actualCoverage","Joi","s","require","clientSchema","object","first_name","string","min","max","required","messages","last_name","email","phone","allow","mobile","tax_id","birth_date","date","iso","address","city","postal_code","country","default","notes","is_active","boolean","contractSchema","contract_number","client_id","uuid","treatment_description","total_amount","number","positive","precision","down_payment","installments","integer","installment_amount","status","valid","start_date","end_date","custom","value","helpers","f","b","error","Date","paymentSchema","contract_id","installment_number","amount","due_date","paid_date","payment_method","reference_number","loginSchema","password","changePasswordSchema","current_password","new_password","userSchema","role","branch_id","module","exports"],"sources":["schemas.js"],"sourcesContent":["const Joi = require('joi');\n\n// Schema para validação de clientes\nconst clientSchema = Joi.object({\n  first_name: Joi.string().min(2).max(255).required().messages({\n    'string.min': 'Nome deve ter pelo menos 2 caracteres',\n    'string.max': 'Nome deve ter no máximo 255 caracteres',\n    'any.required': 'Nome é obrigatório'\n  }),\n  last_name: Joi.string().min(2).max(255).required().messages({\n    'string.min': 'Sobrenome deve ter pelo menos 2 caracteres',\n    'string.max': 'Sobrenome deve ter no máximo 255 caracteres',\n    'any.required': 'Sobrenome é obrigatório'\n  }),\n  email: Joi.string().email().max(255).messages({\n    'string.email': 'Email deve ter um formato válido',\n    'string.max': 'Email deve ter no máximo 255 caracteres'\n  }),\n  phone: Joi.string().max(50).allow('', null),\n  mobile: Joi.string().max(50).allow('', null),\n  tax_id: Joi.string().max(50).allow('', null),\n  birth_date: Joi.date().iso().allow(null),\n  address: Joi.string().allow('', null),\n  city: Joi.string().max(100).allow('', null),\n  postal_code: Joi.string().max(20).allow('', null),\n  country: Joi.string().max(100).default('Portugal'),\n  notes: Joi.string().allow('', null),\n  is_active: Joi.boolean().default(true)\n});\n\n// Schema para validação de contratos\nconst contractSchema = Joi.object({\n  contract_number: Joi.string().max(50).required().messages({\n    'any.required': 'Número do contrato é obrigatório'\n  }),\n  client_id: Joi.string().uuid().required().messages({\n    'string.uuid': 'ID do cliente deve ser um UUID válido',\n    'any.required': 'Cliente é obrigatório'\n  }),\n  // Removido branch_id - tabela branches não existe mais\n  treatment_description: Joi.string().min(10).required().messages({\n    'string.min': 'Descrição do tratamento deve ter pelo menos 10 caracteres',\n    'any.required': 'Descrição do tratamento é obrigatória'\n  }),\n  total_amount: Joi.number().positive().precision(2).required().messages({\n    'number.positive': 'Valor total deve ser positivo',\n    'any.required': 'Valor total é obrigatório'\n  }),\n  down_payment: Joi.number().positive().precision(2).required().messages({\n    'number.positive': 'Entrada deve ser positiva',\n    'any.required': 'Entrada é obrigatória'\n  }),\n  installments: Joi.number().integer().min(1).max(24).required().messages({\n    'number.min': 'Número de parcelas deve ser pelo menos 1',\n    'number.max': 'Número de parcelas deve ser no máximo 24',\n    'any.required': 'Número de parcelas é obrigatório'\n  }),\n  installment_amount: Joi.number().positive().precision(2).required().messages({\n    'number.positive': 'Valor da parcela deve ser positivo',\n    'any.required': 'Valor da parcela é obrigatório'\n  }),\n  status: Joi.string().valid('draft', 'validated', 'active', 'defaulting', 'paid_off', 'closed').default('draft'),\n  start_date: Joi.date().iso().allow(null),\n  end_date: Joi.date().iso().allow(null),\n  notes: Joi.string().allow('', null)\n}).custom((value, helpers) => {\n  // Validar que a entrada é pelo menos 30% do valor total\n  if (value.down_payment < value.total_amount * 0.30) {\n    return helpers.error('custom.downPaymentMinimum');\n  }\n  \n  // Validar que as datas fazem sentido\n  if (value.start_date && value.end_date && new Date(value.start_date) >= new Date(value.end_date)) {\n    return helpers.error('custom.invalidDateRange');\n  }\n  \n  return value;\n}, 'Validação customizada do contrato').messages({\n  'custom.downPaymentMinimum': 'Entrada deve ser pelo menos 30% do valor total',\n  'custom.invalidDateRange': 'Data de início deve ser anterior à data de fim'\n});\n\n// Schema para validação de pagamentos\nconst paymentSchema = Joi.object({\n  contract_id: Joi.string().uuid().required().messages({\n    'string.uuid': 'ID do contrato deve ser um UUID válido',\n    'any.required': 'Contrato é obrigatório'\n  }),\n  installment_number: Joi.number().integer().min(1).required().messages({\n    'number.min': 'Número da parcela deve ser pelo menos 1',\n    'any.required': 'Número da parcela é obrigatório'\n  }),\n  amount: Joi.number().positive().precision(2).required().messages({\n    'number.positive': 'Valor deve ser positivo',\n    'any.required': 'Valor é obrigatório'\n  }),\n  due_date: Joi.date().iso().required().messages({\n    'any.required': 'Data de vencimento é obrigatória'\n  }),\n  paid_date: Joi.date().iso().allow(null),\n  payment_method: Joi.string().valid(\n    'mbway', 'cash', 'transfer', 'sepa', 'credit_card', 'direct_debit', 'payment_order'\n  ).allow(null),\n  status: Joi.string().valid('pending', 'paid', 'overdue', 'failed', 'cancelled').default('pending'),\n  reference_number: Joi.string().max(100).allow('', null),\n  notes: Joi.string().allow('', null)\n});\n\n// Schema removido - tabela companies não existe mais\n// const companySchema = ...\n\n// Schema removido - tabela branches não existe mais\n// const branchSchema = ...\n\n// Schema removido - tabela users não existe mais\n// const userSchema = ...\n\n// Schema para login\nconst loginSchema = Joi.object({\n  email: Joi.string().email().required().messages({\n    'string.email': 'Email deve ter um formato válido',\n    'any.required': 'Email é obrigatório'\n  }),\n  password: Joi.string().required().messages({\n    'any.required': 'Senha é obrigatória'\n  })\n});\n\n// Schema para atualização de senha\nconst changePasswordSchema = Joi.object({\n  current_password: Joi.string().required().messages({\n    'any.required': 'Senha atual é obrigatória'\n  }),\n  new_password: Joi.string().min(8).required().messages({\n    'string.min': 'Nova senha deve ter pelo menos 8 caracteres',\n    'any.required': 'Nova senha é obrigatória'\n  })\n});\n\n// Schema para validação de usuários\nconst userSchema = Joi.object({\n  email: Joi.string().email().required().messages({\n    'string.email': 'Email deve ter um formato válido',\n    'any.required': 'Email é obrigatório'\n  }),\n  password: Joi.string().min(8).required().messages({\n    'string.min': 'Senha deve ter pelo menos 8 caracteres',\n    'any.required': 'Senha é obrigatória'\n  }),\n  first_name: Joi.string().min(2).max(255).required().messages({\n    'string.min': 'Nome deve ter pelo menos 2 caracteres',\n    'string.max': 'Nome deve ter no máximo 255 caracteres',\n    'any.required': 'Nome é obrigatório'\n  }),\n  last_name: Joi.string().min(2).max(255).required().messages({\n    'string.min': 'Sobrenome deve ter pelo menos 2 caracteres',\n    'string.max': 'Sobrenome deve ter no máximo 255 caracteres',\n    'any.required': 'Sobrenome é obrigatório'\n  }),\n  role: Joi.string().valid('admin', 'user', 'manager').default('user'),\n  branch_id: Joi.string().uuid().allow(null),\n  client_id: Joi.string().uuid().allow(null)\n});\n\nmodule.exports = {\n  clientSchema,\n  contractSchema,\n  paymentSchema,\n  userSchema,\n  loginSchema,\n  changePasswordSchema\n};"],"mappings":"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","ignoreList":[]}