{"version":3,"names":["cov_2l2d0braaa","actualCoverage","fs","s","require","path","PROCESSED_DATA_PATH","join","__dirname","data","JSON","parse","readFileSync","console","log","clients","length","contracts","payments","generateClientsSQL","f","b","values","map","client","firstName","first_name","replace","lastName","last_name","email","phone","mobile","taxId","tax_id","birthDate","birth_date","address","city","state","postalCode","postal_code","country","notes","status","externalId","external_id","generateContractsSQL","contract","contractNumber","contract_number","description","value","startDate","start_date","endDate","end_date","paymentFrequency","payment_frequency","clientExternalId","client_external_id","generatePaymentsSQL","payment","amount","dueDate","due_date","paidDate","paid_date","paymentMethod","payment_method","contractExternalId","contract_external_id","clientsSQL","contractsSQL","paymentsSQL","writeFileSync"],"sources":["bulk_import.js"],"sourcesContent":["const fs = require('fs');\nconst path = require('path');\n\n// Carregar dados processados\nconst PROCESSED_DATA_PATH = path.join(__dirname, '../../processed_data.json');\nconst data = JSON.parse(fs.readFileSync(PROCESSED_DATA_PATH, 'utf8'));\n\nconsole.log('üöÄ Gerando SQL para importa√ß√£o em lote...');\nconsole.log(`üìä Dados: ${data.clients.length} clientes, ${data.contracts.length} contratos, ${data.payments.length} pagamentos`);\n\n// Gerar SQL para clientes\nfunction generateClientsSQL() {\n    if (data.clients.length === 0) return '';\n    \n    const values = data.clients.map(client => {\n        const firstName = client.first_name ? `'${client.first_name.replace(/'/g, \"''\")}'` : 'NULL';\n        const lastName = client.last_name ? `'${client.last_name.replace(/'/g, \"''\")}'` : 'NULL';\n        const email = client.email ? `'${client.email.replace(/'/g, \"''\")}'` : 'NULL';\n        const phone = client.phone ? `'${client.phone.replace(/'/g, \"''\")}'` : 'NULL';\n        const mobile = client.mobile ? `'${client.mobile.replace(/'/g, \"''\")}'` : 'NULL';\n        const taxId = client.tax_id ? `'${client.tax_id.replace(/'/g, \"''\")}'` : 'NULL';\n        const birthDate = client.birth_date ? `'${client.birth_date}'` : 'NULL';\n        const address = client.address ? `'${client.address.replace(/'/g, \"''\")}'` : 'NULL';\n        const city = client.city ? `'${client.city.replace(/'/g, \"''\")}'` : 'NULL';\n        const state = client.state ? `'${client.state.replace(/'/g, \"''\")}'` : 'NULL';\n        const postalCode = client.postal_code ? `'${client.postal_code.replace(/'/g, \"''\")}'` : 'NULL';\n        const country = client.country ? `'${client.country.replace(/'/g, \"''\")}'` : \"'Brasil'\";\n        const notes = client.notes ? `'${client.notes.replace(/'/g, \"''\")}'` : 'NULL';\n        const status = client.status ? `'${client.status}'` : \"'active'\";\n        const externalId = client.external_id ? `'${client.external_id}'` : 'NULL';\n        \n        return `(${firstName}, ${lastName}, ${email}, ${phone}, ${mobile}, ${taxId}, ${birthDate}, ${address}, ${city}, ${state}, ${postalCode}, ${country}, ${notes}, ${status}, ${externalId})`;\n    }).join(',\\n    ');\n    \n    return `INSERT INTO clients (\n    first_name, last_name, email, phone, mobile, tax_id, birth_date, \n    address, city, state, postal_code, country, notes, status, external_id\n) VALUES \n    ${values}\nON CONFLICT (external_id) DO UPDATE SET\n    first_name = EXCLUDED.first_name,\n    last_name = EXCLUDED.last_name,\n    email = EXCLUDED.email,\n    phone = EXCLUDED.phone,\n    mobile = EXCLUDED.mobile,\n    updated_at = NOW();`;\n}\n\n// Gerar SQL para contratos\nfunction generateContractsSQL() {\n    if (data.contracts.length === 0) return '';\n    \n    const values = data.contracts.map(contract => {\n        const contractNumber = contract.contract_number ? `'${contract.contract_number.replace(/'/g, \"''\")}'` : 'NULL';\n        const description = contract.description ? `'${contract.description.replace(/'/g, \"''\")}'` : 'NULL';\n        const value = contract.value || 0;\n        const startDate = contract.start_date ? `'${contract.start_date}'` : 'NULL';\n        const endDate = contract.end_date ? `'${contract.end_date}'` : 'NULL';\n        const status = contract.status ? `'${contract.status}'` : \"'active'\";\n        const paymentFrequency = contract.payment_frequency ? `'${contract.payment_frequency}'` : \"'monthly'\";\n        const notes = contract.notes ? `'${contract.notes.replace(/'/g, \"''\")}'` : 'NULL';\n        const externalId = contract.external_id ? `'${contract.external_id}'` : 'NULL';\n        const clientExternalId = contract.client_external_id ? `'${contract.client_external_id}'` : 'NULL';\n        \n        return `(\n        (SELECT id FROM clients WHERE external_id = ${clientExternalId} LIMIT 1),\n        ${contractNumber}, ${description}, ${value}, ${startDate}, ${endDate}, \n        ${status}, ${paymentFrequency}, ${notes}, ${externalId}\n    )`;\n    }).join(',\\n    ');\n    \n    return `INSERT INTO contracts (\n    client_id, contract_number, description, value, start_date, end_date,\n    status, payment_frequency, notes, external_id\n) VALUES \n    ${values}\nON CONFLICT (external_id) DO UPDATE SET\n    description = EXCLUDED.description,\n    value = EXCLUDED.value,\n    start_date = EXCLUDED.start_date,\n    end_date = EXCLUDED.end_date,\n    status = EXCLUDED.status,\n    updated_at = NOW();`;\n}\n\n// Gerar SQL para pagamentos\nfunction generatePaymentsSQL() {\n    if (data.payments.length === 0) return '';\n    \n    const values = data.payments.map(payment => {\n        const amount = payment.amount || 0;\n        const dueDate = payment.due_date ? `'${payment.due_date}'` : 'NULL';\n        const paidDate = payment.paid_date ? `'${payment.paid_date}'` : 'NULL';\n        const status = payment.status ? `'${payment.status}'` : \"'pending'\";\n        const paymentMethod = payment.payment_method ? `'${payment.payment_method.replace(/'/g, \"''\")}'` : 'NULL';\n        const notes = payment.notes ? `'${payment.notes.replace(/'/g, \"''\")}'` : 'NULL';\n        const externalId = payment.external_id ? `'${payment.external_id}'` : 'NULL';\n        const contractExternalId = payment.contract_external_id ? `'${payment.contract_external_id}'` : 'NULL';\n        \n        return `(\n        (SELECT id FROM contracts WHERE external_id = ${contractExternalId} LIMIT 1),\n        ${amount}, ${dueDate}, ${paidDate}, ${status}, ${paymentMethod}, ${notes}, ${externalId}\n    )`;\n    }).join(',\\n    ');\n    \n    return `INSERT INTO payments (\n    contract_id, amount, due_date, paid_date, status, payment_method, notes, external_id\n) VALUES \n    ${values}\nON CONFLICT (external_id) DO UPDATE SET\n    amount = EXCLUDED.amount,\n    due_date = EXCLUDED.due_date,\n    paid_date = EXCLUDED.paid_date,\n    status = EXCLUDED.status,\n    updated_at = NOW();`;\n}\n\n// Gerar todos os SQLs\nconst clientsSQL = generateClientsSQL();\nconst contractsSQL = generateContractsSQL();\nconst paymentsSQL = generatePaymentsSQL();\n\n// Salvar SQLs em arquivos\nif (clientsSQL) {\n    fs.writeFileSync(path.join(__dirname, 'clients_import.sql'), clientsSQL);\n    console.log('‚úÖ SQL de clientes gerado: clients_import.sql');\n}\n\nif (contractsSQL) {\n    fs.writeFileSync(path.join(__dirname, 'contracts_import.sql'), contractsSQL);\n    console.log('‚úÖ SQL de contratos gerado: contracts_import.sql');\n}\n\nif (paymentsSQL) {\n    fs.writeFileSync(path.join(__dirname, 'payments_import.sql'), paymentsSQL);\n    console.log('‚úÖ SQL de pagamentos gerado: payments_import.sql');\n} else {\n    console.log('‚ö†Ô∏è Nenhum pagamento para importar');\n}\n\nconsole.log('\\nüéâ Arquivos SQL gerados com sucesso!');\nconsole.log('üí° Use as fun√ß√µes MCP do Supabase para executar os SQLs na ordem: clientes ‚Üí contratos ‚Üí pagamentos');"],"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","ignoreList":[]}