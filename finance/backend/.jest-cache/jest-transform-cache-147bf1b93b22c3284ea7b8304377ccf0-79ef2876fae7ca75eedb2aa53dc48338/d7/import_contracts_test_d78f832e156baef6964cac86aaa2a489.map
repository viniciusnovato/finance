{"version":3,"names":["cov_1qlmsc5jq9","actualCoverage","s","require","config","createClient","fs","path","supabase","process","env","SUPABASE_URL","SUPABASE_SERVICE_ROLE_KEY","auth","autoRefreshToken","persistSession","parseCSV","csvContent","f","lines","split","filter","line","trim","headers","slice","map","values","current","inQuotes","i","length","char","b","push","obj","forEach","header","index","importContractsTest","console","log","csvPath","join","__dirname","readFileSync","contracts","testContracts","successCount","errorCount","contract","data","clientExists","from","select","eq","client_id","single","contract_number","uniqueContractNumber","id","substring","uniqueExternalId","external_id","contractData","description","value","parseFloat","start_date","end_date","status","payment_frequency","notes","created_at","Date","toISOString","updated_at","error","insert","message","err","count","head","catch"],"sources":["import_contracts_test.js"],"sourcesContent":["require('dotenv').config();\nconst { createClient } = require('@supabase/supabase-js');\nconst fs = require('fs');\nconst path = require('path');\n\n// Usar service_role key para ter permiss√µes administrativas\nconst supabase = createClient(\n  process.env.SUPABASE_URL, \n  process.env.SUPABASE_SERVICE_ROLE_KEY,\n  {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false\n    }\n  }\n);\n\nfunction parseCSV(csvContent) {\n  const lines = csvContent.split('\\n').filter(line => line.trim());\n  const headers = lines[0].split(',');\n  \n  return lines.slice(1).map(line => {\n    const values = [];\n    let current = '';\n    let inQuotes = false;\n    \n    for (let i = 0; i < line.length; i++) {\n      const char = line[i];\n      \n      if (char === '\"') {\n        inQuotes = !inQuotes;\n      } else if (char === ',' && !inQuotes) {\n        values.push(current.trim());\n        current = '';\n      } else {\n        current += char;\n      }\n    }\n    values.push(current.trim());\n    \n    const obj = {};\n    headers.forEach((header, index) => {\n      obj[header.trim()] = values[index] || null;\n    });\n    \n    return obj;\n  });\n}\n\nasync function importContractsTest() {\n  console.log('üì• IMPORTA√á√ÉO DE CONTRATOS (TESTE - 5 LINHAS)');\n  console.log('==================================================');\n  \n  try {\n    // Ler arquivo CSV\n    const csvPath = path.join(__dirname, '../../../importBD/contracts.csv');\n    const csvContent = fs.readFileSync(csvPath, 'utf8');\n    \n    // Parse CSV\n    const contracts = parseCSV(csvContent);\n    console.log(`üìä Total de contratos no CSV: ${contracts.length}`);\n    \n    // Processar apenas os primeiros 5 para teste\n    const testContracts = contracts.slice(0, 5);\n    console.log(`üß™ Processando ${testContracts.length} contratos para teste`);\n    \n    let successCount = 0;\n    let errorCount = 0;\n    \n    for (const contract of testContracts) {\n      try {\n        // Verificar se o client_id existe\n        const { data: clientExists } = await supabase\n          .from('clients')\n          .select('id')\n          .eq('id', contract.client_id)\n          .single();\n        \n        if (!clientExists) {\n          console.log(`‚ö†Ô∏è  Cliente ${contract.client_id} n√£o encontrado para contrato ${contract.contract_number}`);\n          errorCount++;\n          continue;\n        }\n        \n        // Preparar dados do contrato (criar IDs √∫nicos)\n        const uniqueContractNumber = `${contract.contract_number || 'CONTRACT'}_${contract.id.substring(0, 8)}`;\n        const uniqueExternalId = `${contract.external_id || 'EXT'}_${contract.id.substring(0, 8)}`;\n        \n        const contractData = {\n          id: contract.id,\n          client_id: contract.client_id,\n          contract_number: uniqueContractNumber.substring(0, 50),\n          description: (contract.description || '').substring(0, 255),\n          value: contract.value ? parseFloat(contract.value) : null,\n          start_date: contract.start_date || null,\n          end_date: contract.end_date || null,\n          status: contract.status || 'active',\n          payment_frequency: (contract.payment_frequency || '').substring(0, 20),\n          notes: contract.notes || null,\n          external_id: uniqueExternalId.substring(0, 50),\n          created_at: contract.created_at || new Date().toISOString(),\n          updated_at: contract.updated_at || new Date().toISOString()\n        };\n        \n        // Inserir no Supabase\n        const { error } = await supabase\n          .from('contracts')\n          .insert(contractData);\n        \n        if (error) {\n          console.log(`‚ùå Erro ao inserir contrato ${contract.contract_number}: ${error.message}`);\n          errorCount++;\n        } else {\n          console.log(`‚úÖ Contrato inserido: ${contract.contract_number} (Cliente: ${contract.client_id})`);\n          successCount++;\n        }\n        \n      } catch (err) {\n        console.log(`‚ùå Erro ao processar contrato: ${err.message}`);\n        errorCount++;\n      }\n    }\n    \n    console.log('\\nüìä RESUMO DA IMPORTA√á√ÉO:');\n    console.log(`‚úÖ Sucessos: ${successCount}`);\n    console.log(`‚ùå Erros: ${errorCount}`);\n    \n    // Verificar total na tabela\n    const { count } = await supabase\n      .from('contracts')\n      .select('*', { count: 'exact', head: true });\n    \n    console.log(`üìã Total de contratos na tabela: ${count}`);\n    \n  } catch (error) {\n    console.error('‚ùå Erro geral:', error.message);\n  }\n}\n\nimportContractsTest().catch(console.error);"],"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","ignoreList":[]}