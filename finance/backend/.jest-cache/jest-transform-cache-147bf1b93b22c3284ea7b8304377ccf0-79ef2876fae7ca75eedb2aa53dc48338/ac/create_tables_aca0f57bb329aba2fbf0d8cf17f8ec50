0e22708abc4a7342ebc871ad29dc633e
/* istanbul ignore next */
function cov_q4vr4yk8g() {
  var path = "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/scripts/create_tables.js";
  var hash = "484659a287790ce3d9dd77b2cff61170d976b753";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/scripts/create_tables.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 25
        },
        end: {
          line: 1,
          column: 57
        }
      },
      "1": {
        start: {
          line: 2,
          column: 0
        },
        end: {
          line: 2,
          column: 27
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "3": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 10,
          column: 47
        }
      },
      "4": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 61,
          column: 3
        }
      },
      "5": {
        start: {
          line: 14,
          column: 4
        },
        end: {
          line: 14,
          column: 42
        }
      },
      "6": {
        start: {
          line: 17,
          column: 49
        },
        end: {
          line: 20,
          column: 15
        }
      },
      "7": {
        start: {
          line: 22,
          column: 4
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "8": {
        start: {
          line: 23,
          column: 6
        },
        end: {
          line: 23,
          column: 62
        }
      },
      "9": {
        start: {
          line: 24,
          column: 11
        },
        end: {
          line: 27,
          column: 5
        }
      },
      "10": {
        start: {
          line: 25,
          column: 6
        },
        end: {
          line: 25,
          column: 61
        }
      },
      "11": {
        start: {
          line: 26,
          column: 6
        },
        end: {
          line: 26,
          column: 13
        }
      },
      "12": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 30,
          column: 56
        }
      },
      "13": {
        start: {
          line: 33,
          column: 19
        },
        end: {
          line: 33,
          column: 89
        }
      },
      "14": {
        start: {
          line: 35,
          column: 4
        },
        end: {
          line: 50,
          column: 5
        }
      },
      "15": {
        start: {
          line: 36,
          column: 6
        },
        end: {
          line: 49,
          column: 7
        }
      },
      "16": {
        start: {
          line: 37,
          column: 32
        },
        end: {
          line: 40,
          column: 19
        }
      },
      "17": {
        start: {
          line: 42,
          column: 8
        },
        end: {
          line: 46,
          column: 9
        }
      },
      "18": {
        start: {
          line: 43,
          column: 10
        },
        end: {
          line: 43,
          column: 76
        }
      },
      "19": {
        start: {
          line: 45,
          column: 10
        },
        end: {
          line: 45,
          column: 57
        }
      },
      "20": {
        start: {
          line: 48,
          column: 8
        },
        end: {
          line: 48,
          column: 72
        }
      },
      "21": {
        start: {
          line: 52,
          column: 4
        },
        end: {
          line: 52,
          column: 44
        }
      },
      "22": {
        start: {
          line: 53,
          column: 4
        },
        end: {
          line: 53,
          column: 84
        }
      },
      "23": {
        start: {
          line: 54,
          column: 4
        },
        end: {
          line: 54,
          column: 49
        }
      },
      "24": {
        start: {
          line: 55,
          column: 4
        },
        end: {
          line: 55,
          column: 41
        }
      },
      "25": {
        start: {
          line: 56,
          column: 4
        },
        end: {
          line: 56,
          column: 78
        }
      },
      "26": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 57,
          column: 72
        }
      },
      "27": {
        start: {
          line: 60,
          column: 4
        },
        end: {
          line: 60,
          column: 50
        }
      },
      "28": {
        start: {
          line: 64,
          column: 0
        },
        end: {
          line: 64,
          column: 15
        }
      }
    },
    fnMap: {
      "0": {
        name: "createTables",
        decl: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 9,
            column: 27
          }
        },
        loc: {
          start: {
            line: 9,
            column: 30
          },
          end: {
            line: 62,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 22,
            column: 4
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 27,
            column: 5
          }
        }],
        line: 22
      },
      "1": {
        loc: {
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 65
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 22,
            column: 8
          },
          end: {
            line: 22,
            column: 17
          }
        }, {
          start: {
            line: 22,
            column: 21
          },
          end: {
            line: 22,
            column: 65
          }
        }],
        line: 22
      },
      "2": {
        loc: {
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 27,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 24,
            column: 11
          },
          end: {
            line: 27,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 24
      },
      "3": {
        loc: {
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 42,
            column: 8
          },
          end: {
            line: 46,
            column: 9
          }
        }, {
          start: {
            line: 44,
            column: 15
          },
          end: {
            line: 46,
            column: 9
          }
        }],
        line: 42
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "484659a287790ce3d9dd77b2cff61170d976b753"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_q4vr4yk8g = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_q4vr4yk8g();
const {
  createClient
} =
/* istanbul ignore next */
(cov_q4vr4yk8g().s[0]++, require('@supabase/supabase-js'));
/* istanbul ignore next */
cov_q4vr4yk8g().s[1]++;
require('dotenv').config();
const supabase =
/* istanbul ignore next */
(cov_q4vr4yk8g().s[2]++, createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY));
async function createTables() {
  /* istanbul ignore next */
  cov_q4vr4yk8g().f[0]++;
  cov_q4vr4yk8g().s[3]++;
  console.log('🚀 Criando tabelas básicas...');
  /* istanbul ignore next */
  cov_q4vr4yk8g().s[4]++;
  try {
    /* istanbul ignore next */
    cov_q4vr4yk8g().s[5]++;
    // Primeiro, vamos tentar criar uma tabela simples para testar
    console.log('📊 Testando conexão...');

    // Tentar acessar uma tabela existente ou criar uma de teste
    const {
      data: testData,
      error: testError
    } =
    /* istanbul ignore next */
    (cov_q4vr4yk8g().s[6]++, await supabase.from('test_table').select('*').limit(1));
    /* istanbul ignore next */
    cov_q4vr4yk8g().s[7]++;
    if (
    /* istanbul ignore next */
    (cov_q4vr4yk8g().b[1][0]++, testError) &&
    /* istanbul ignore next */
    (cov_q4vr4yk8g().b[1][1]++, testError.message.includes('does not exist'))) {
      /* istanbul ignore next */
      cov_q4vr4yk8g().b[0][0]++;
      cov_q4vr4yk8g().s[8]++;
      console.log('✅ Conexão OK - tabelas não existem ainda');
    } else {
      /* istanbul ignore next */
      cov_q4vr4yk8g().b[0][1]++;
      cov_q4vr4yk8g().s[9]++;
      if (testError) {
        /* istanbul ignore next */
        cov_q4vr4yk8g().b[2][0]++;
        cov_q4vr4yk8g().s[10]++;
        console.log('⚠️  Erro de conexão:', testError.message);
        /* istanbul ignore next */
        cov_q4vr4yk8g().s[11]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_q4vr4yk8g().b[2][1]++;
      }
    }

    // Vamos usar uma abordagem diferente - criar dados diretamente
    /* istanbul ignore next */
    cov_q4vr4yk8g().s[12]++;
    console.log('💡 Tentando abordagem alternativa...');

    // Verificar se já existem dados nas tabelas
    const tables =
    /* istanbul ignore next */
    (cov_q4vr4yk8g().s[13]++, ['companies', 'branches', 'users', 'clients', 'contracts', 'payments']);
    /* istanbul ignore next */
    cov_q4vr4yk8g().s[14]++;
    for (const tableName of tables) {
      /* istanbul ignore next */
      cov_q4vr4yk8g().s[15]++;
      try {
        const {
          data,
          error
        } =
        /* istanbul ignore next */
        (cov_q4vr4yk8g().s[16]++, await supabase.from(tableName).select('id').limit(1));
        /* istanbul ignore next */
        cov_q4vr4yk8g().s[17]++;
        if (error) {
          /* istanbul ignore next */
          cov_q4vr4yk8g().b[3][0]++;
          cov_q4vr4yk8g().s[18]++;
          console.log(`❌ Tabela ${tableName} não existe: ${error.message}`);
        } else {
          /* istanbul ignore next */
          cov_q4vr4yk8g().b[3][1]++;
          cov_q4vr4yk8g().s[19]++;
          console.log(`✅ Tabela ${tableName} já existe`);
        }
      } catch (err) {
        /* istanbul ignore next */
        cov_q4vr4yk8g().s[20]++;
        console.log(`❌ Erro ao verificar ${tableName}: ${err.message}`);
      }
    }
    /* istanbul ignore next */
    cov_q4vr4yk8g().s[21]++;
    console.log('\n📋 INSTRUÇÕES MANUAIS:');
    /* istanbul ignore next */
    cov_q4vr4yk8g().s[22]++;
    console.log('Como as tabelas não foram criadas automaticamente, você precisa:');
    /* istanbul ignore next */
    cov_q4vr4yk8g().s[23]++;
    console.log('1. Abrir o Supabase Dashboard');
    /* istanbul ignore next */
    cov_q4vr4yk8g().s[24]++;
    console.log('2. Ir para SQL Editor');
    /* istanbul ignore next */
    cov_q4vr4yk8g().s[25]++;
    console.log('3. Executar o conteúdo do arquivo: src/migrations/init.sql');
    /* istanbul ignore next */
    cov_q4vr4yk8g().s[26]++;
    console.log('4. Depois executar novamente este script para testar');
  } catch (error) {
    /* istanbul ignore next */
    cov_q4vr4yk8g().s[27]++;
    console.error('❌ Erro geral:', error.message);
  }
}
/* istanbul ignore next */
cov_q4vr4yk8g().s[28]++;
createTables();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfcTR2cjR5azhnIiwiYWN0dWFsQ292ZXJhZ2UiLCJjcmVhdGVDbGllbnQiLCJzIiwicmVxdWlyZSIsImNvbmZpZyIsInN1cGFiYXNlIiwicHJvY2VzcyIsImVudiIsIlNVUEFCQVNFX1VSTCIsIlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVkiLCJjcmVhdGVUYWJsZXMiLCJmIiwiY29uc29sZSIsImxvZyIsImRhdGEiLCJ0ZXN0RGF0YSIsImVycm9yIiwidGVzdEVycm9yIiwiZnJvbSIsInNlbGVjdCIsImxpbWl0IiwiYiIsIm1lc3NhZ2UiLCJpbmNsdWRlcyIsInRhYmxlcyIsInRhYmxlTmFtZSIsImVyciJdLCJzb3VyY2VzIjpbImNyZWF0ZV90YWJsZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBjcmVhdGVDbGllbnQgfSA9IHJlcXVpcmUoJ0BzdXBhYmFzZS9zdXBhYmFzZS1qcycpO1xucmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCk7XG5cbmNvbnN0IHN1cGFiYXNlID0gY3JlYXRlQ2xpZW50KFxuICBwcm9jZXNzLmVudi5TVVBBQkFTRV9VUkwsXG4gIHByb2Nlc3MuZW52LlNVUEFCQVNFX1NFUlZJQ0VfUk9MRV9LRVlcbik7XG5cbmFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVRhYmxlcygpIHtcbiAgY29uc29sZS5sb2coJ/CfmoAgQ3JpYW5kbyB0YWJlbGFzIGLDoXNpY2FzLi4uJyk7XG4gIFxuICB0cnkge1xuICAgIC8vIFByaW1laXJvLCB2YW1vcyB0ZW50YXIgY3JpYXIgdW1hIHRhYmVsYSBzaW1wbGVzIHBhcmEgdGVzdGFyXG4gICAgY29uc29sZS5sb2coJ/Cfk4ogVGVzdGFuZG8gY29uZXjDo28uLi4nKTtcbiAgICBcbiAgICAvLyBUZW50YXIgYWNlc3NhciB1bWEgdGFiZWxhIGV4aXN0ZW50ZSBvdSBjcmlhciB1bWEgZGUgdGVzdGVcbiAgICBjb25zdCB7IGRhdGE6IHRlc3REYXRhLCBlcnJvcjogdGVzdEVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZVxuICAgICAgLmZyb20oJ3Rlc3RfdGFibGUnKVxuICAgICAgLnNlbGVjdCgnKicpXG4gICAgICAubGltaXQoMSk7XG4gICAgXG4gICAgaWYgKHRlc3RFcnJvciAmJiB0ZXN0RXJyb3IubWVzc2FnZS5pbmNsdWRlcygnZG9lcyBub3QgZXhpc3QnKSkge1xuICAgICAgY29uc29sZS5sb2coJ+KchSBDb25leMOjbyBPSyAtIHRhYmVsYXMgbsOjbyBleGlzdGVtIGFpbmRhJyk7XG4gICAgfSBlbHNlIGlmICh0ZXN0RXJyb3IpIHtcbiAgICAgIGNvbnNvbGUubG9nKCfimqDvuI8gIEVycm8gZGUgY29uZXjDo286JywgdGVzdEVycm9yLm1lc3NhZ2UpO1xuICAgICAgcmV0dXJuO1xuICAgIH1cbiAgICBcbiAgICAvLyBWYW1vcyB1c2FyIHVtYSBhYm9yZGFnZW0gZGlmZXJlbnRlIC0gY3JpYXIgZGFkb3MgZGlyZXRhbWVudGVcbiAgICBjb25zb2xlLmxvZygn8J+SoSBUZW50YW5kbyBhYm9yZGFnZW0gYWx0ZXJuYXRpdmEuLi4nKTtcbiAgICBcbiAgICAvLyBWZXJpZmljYXIgc2UgasOhIGV4aXN0ZW0gZGFkb3MgbmFzIHRhYmVsYXNcbiAgICBjb25zdCB0YWJsZXMgPSBbJ2NvbXBhbmllcycsICdicmFuY2hlcycsICd1c2VycycsICdjbGllbnRzJywgJ2NvbnRyYWN0cycsICdwYXltZW50cyddO1xuICAgIFxuICAgIGZvciAoY29uc3QgdGFibGVOYW1lIG9mIHRhYmxlcykge1xuICAgICAgdHJ5IHtcbiAgICAgICAgY29uc3QgeyBkYXRhLCBlcnJvciB9ID0gYXdhaXQgc3VwYWJhc2VcbiAgICAgICAgICAuZnJvbSh0YWJsZU5hbWUpXG4gICAgICAgICAgLnNlbGVjdCgnaWQnKVxuICAgICAgICAgIC5saW1pdCgxKTtcbiAgICAgICAgXG4gICAgICAgIGlmIChlcnJvcikge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGDinYwgVGFiZWxhICR7dGFibGVOYW1lfSBuw6NvIGV4aXN0ZTogJHtlcnJvci5tZXNzYWdlfWApO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGDinIUgVGFiZWxhICR7dGFibGVOYW1lfSBqw6EgZXhpc3RlYCk7XG4gICAgICAgIH1cbiAgICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICBjb25zb2xlLmxvZyhg4p2MIEVycm8gYW8gdmVyaWZpY2FyICR7dGFibGVOYW1lfTogJHtlcnIubWVzc2FnZX1gKTtcbiAgICAgIH1cbiAgICB9XG4gICAgXG4gICAgY29uc29sZS5sb2coJ1xcbvCfk4sgSU5TVFJVw4fDlUVTIE1BTlVBSVM6Jyk7XG4gICAgY29uc29sZS5sb2coJ0NvbW8gYXMgdGFiZWxhcyBuw6NvIGZvcmFtIGNyaWFkYXMgYXV0b21hdGljYW1lbnRlLCB2b2PDqiBwcmVjaXNhOicpO1xuICAgIGNvbnNvbGUubG9nKCcxLiBBYnJpciBvIFN1cGFiYXNlIERhc2hib2FyZCcpO1xuICAgIGNvbnNvbGUubG9nKCcyLiBJciBwYXJhIFNRTCBFZGl0b3InKTtcbiAgICBjb25zb2xlLmxvZygnMy4gRXhlY3V0YXIgbyBjb250ZcO6ZG8gZG8gYXJxdWl2bzogc3JjL21pZ3JhdGlvbnMvaW5pdC5zcWwnKTtcbiAgICBjb25zb2xlLmxvZygnNC4gRGVwb2lzIGV4ZWN1dGFyIG5vdmFtZW50ZSBlc3RlIHNjcmlwdCBwYXJhIHRlc3RhcicpO1xuICAgIFxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUuZXJyb3IoJ+KdjCBFcnJvIGdlcmFsOicsIGVycm9yLm1lc3NhZ2UpO1xuICB9XG59XG5cbmNyZWF0ZVRhYmxlcygpOyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7SUFlWTtJQUFBQSxhQUFBLFlBQUFBLENBQUE7TUFBQSxPQUFBQyxjQUFBO0lBQUE7RUFBQTtFQUFBLE9BQUFBLGNBQUE7QUFBQTtBQUFBRCxhQUFBO0FBZlosTUFBTTtFQUFFRTtBQUFhLENBQUM7QUFBQTtBQUFBLENBQUFGLGFBQUEsR0FBQUcsQ0FBQSxPQUFHQyxPQUFPLENBQUMsdUJBQXVCLENBQUM7QUFBQztBQUFBSixhQUFBLEdBQUFHLENBQUE7QUFDMURDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQ0MsTUFBTSxDQUFDLENBQUM7QUFFMUIsTUFBTUMsUUFBUTtBQUFBO0FBQUEsQ0FBQU4sYUFBQSxHQUFBRyxDQUFBLE9BQUdELFlBQVksQ0FDM0JLLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxZQUFZLEVBQ3hCRixPQUFPLENBQUNDLEdBQUcsQ0FBQ0UseUJBQ2QsQ0FBQztBQUVELGVBQWVDLFlBQVlBLENBQUEsRUFBRztFQUFBO0VBQUFYLGFBQUEsR0FBQVksQ0FBQTtFQUFBWixhQUFBLEdBQUFHLENBQUE7RUFDNUJVLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLCtCQUErQixDQUFDO0VBQUM7RUFBQWQsYUFBQSxHQUFBRyxDQUFBO0VBRTdDLElBQUk7SUFBQTtJQUFBSCxhQUFBLEdBQUFHLENBQUE7SUFDRjtJQUNBVSxPQUFPLENBQUNDLEdBQUcsQ0FBQyx3QkFBd0IsQ0FBQzs7SUFFckM7SUFDQSxNQUFNO01BQUVDLElBQUksRUFBRUMsUUFBUTtNQUFFQyxLQUFLLEVBQUVDO0lBQVUsQ0FBQztJQUFBO0lBQUEsQ0FBQWxCLGFBQUEsR0FBQUcsQ0FBQSxPQUFHLE1BQU1HLFFBQVEsQ0FDeERhLElBQUksQ0FBQyxZQUFZLENBQUMsQ0FDbEJDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FDWEMsS0FBSyxDQUFDLENBQUMsQ0FBQztJQUFDO0lBQUFyQixhQUFBLEdBQUFHLENBQUE7SUFFWjtJQUFJO0lBQUEsQ0FBQUgsYUFBQSxHQUFBc0IsQ0FBQSxVQUFBSixTQUFTO0lBQUE7SUFBQSxDQUFBbEIsYUFBQSxHQUFBc0IsQ0FBQSxVQUFJSixTQUFTLENBQUNLLE9BQU8sQ0FBQ0MsUUFBUSxDQUFDLGdCQUFnQixDQUFDLEdBQUU7TUFBQTtNQUFBeEIsYUFBQSxHQUFBc0IsQ0FBQTtNQUFBdEIsYUFBQSxHQUFBRyxDQUFBO01BQzdEVSxPQUFPLENBQUNDLEdBQUcsQ0FBQywwQ0FBMEMsQ0FBQztJQUN6RCxDQUFDLE1BQU07TUFBQTtNQUFBZCxhQUFBLEdBQUFzQixDQUFBO01BQUF0QixhQUFBLEdBQUFHLENBQUE7TUFBQSxJQUFJZSxTQUFTLEVBQUU7UUFBQTtRQUFBbEIsYUFBQSxHQUFBc0IsQ0FBQTtRQUFBdEIsYUFBQSxHQUFBRyxDQUFBO1FBQ3BCVSxPQUFPLENBQUNDLEdBQUcsQ0FBQyxzQkFBc0IsRUFBRUksU0FBUyxDQUFDSyxPQUFPLENBQUM7UUFBQztRQUFBdkIsYUFBQSxHQUFBRyxDQUFBO1FBQ3ZEO01BQ0YsQ0FBQztNQUFBO01BQUE7UUFBQUgsYUFBQSxHQUFBc0IsQ0FBQTtNQUFBO0lBQUQ7O0lBRUE7SUFBQTtJQUFBdEIsYUFBQSxHQUFBRyxDQUFBO0lBQ0FVLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHNDQUFzQyxDQUFDOztJQUVuRDtJQUNBLE1BQU1XLE1BQU07SUFBQTtJQUFBLENBQUF6QixhQUFBLEdBQUFHLENBQUEsUUFBRyxDQUFDLFdBQVcsRUFBRSxVQUFVLEVBQUUsT0FBTyxFQUFFLFNBQVMsRUFBRSxXQUFXLEVBQUUsVUFBVSxDQUFDO0lBQUM7SUFBQUgsYUFBQSxHQUFBRyxDQUFBO0lBRXRGLEtBQUssTUFBTXVCLFNBQVMsSUFBSUQsTUFBTSxFQUFFO01BQUE7TUFBQXpCLGFBQUEsR0FBQUcsQ0FBQTtNQUM5QixJQUFJO1FBQ0YsTUFBTTtVQUFFWSxJQUFJO1VBQUVFO1FBQU0sQ0FBQztRQUFBO1FBQUEsQ0FBQWpCLGFBQUEsR0FBQUcsQ0FBQSxRQUFHLE1BQU1HLFFBQVEsQ0FDbkNhLElBQUksQ0FBQ08sU0FBUyxDQUFDLENBQ2ZOLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FDWkMsS0FBSyxDQUFDLENBQUMsQ0FBQztRQUFDO1FBQUFyQixhQUFBLEdBQUFHLENBQUE7UUFFWixJQUFJYyxLQUFLLEVBQUU7VUFBQTtVQUFBakIsYUFBQSxHQUFBc0IsQ0FBQTtVQUFBdEIsYUFBQSxHQUFBRyxDQUFBO1VBQ1RVLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLFlBQVlZLFNBQVMsZ0JBQWdCVCxLQUFLLENBQUNNLE9BQU8sRUFBRSxDQUFDO1FBQ25FLENBQUMsTUFBTTtVQUFBO1VBQUF2QixhQUFBLEdBQUFzQixDQUFBO1VBQUF0QixhQUFBLEdBQUFHLENBQUE7VUFDTFUsT0FBTyxDQUFDQyxHQUFHLENBQUMsWUFBWVksU0FBUyxZQUFZLENBQUM7UUFDaEQ7TUFDRixDQUFDLENBQUMsT0FBT0MsR0FBRyxFQUFFO1FBQUE7UUFBQTNCLGFBQUEsR0FBQUcsQ0FBQTtRQUNaVSxPQUFPLENBQUNDLEdBQUcsQ0FBQyx1QkFBdUJZLFNBQVMsS0FBS0MsR0FBRyxDQUFDSixPQUFPLEVBQUUsQ0FBQztNQUNqRTtJQUNGO0lBQUM7SUFBQXZCLGFBQUEsR0FBQUcsQ0FBQTtJQUVEVSxPQUFPLENBQUNDLEdBQUcsQ0FBQywwQkFBMEIsQ0FBQztJQUFDO0lBQUFkLGFBQUEsR0FBQUcsQ0FBQTtJQUN4Q1UsT0FBTyxDQUFDQyxHQUFHLENBQUMsa0VBQWtFLENBQUM7SUFBQztJQUFBZCxhQUFBLEdBQUFHLENBQUE7SUFDaEZVLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLCtCQUErQixDQUFDO0lBQUM7SUFBQWQsYUFBQSxHQUFBRyxDQUFBO0lBQzdDVSxPQUFPLENBQUNDLEdBQUcsQ0FBQyx1QkFBdUIsQ0FBQztJQUFDO0lBQUFkLGFBQUEsR0FBQUcsQ0FBQTtJQUNyQ1UsT0FBTyxDQUFDQyxHQUFHLENBQUMsNERBQTRELENBQUM7SUFBQztJQUFBZCxhQUFBLEdBQUFHLENBQUE7SUFDMUVVLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHNEQUFzRCxDQUFDO0VBRXJFLENBQUMsQ0FBQyxPQUFPRyxLQUFLLEVBQUU7SUFBQTtJQUFBakIsYUFBQSxHQUFBRyxDQUFBO0lBQ2RVLE9BQU8sQ0FBQ0ksS0FBSyxDQUFDLGVBQWUsRUFBRUEsS0FBSyxDQUFDTSxPQUFPLENBQUM7RUFDL0M7QUFDRjtBQUFDO0FBQUF2QixhQUFBLEdBQUFHLENBQUE7QUFFRFEsWUFBWSxDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=