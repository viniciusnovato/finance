{"version":3,"names":["cov_1fju942wtt","actualCoverage","s","require","config","createClient","supabase","process","env","SUPABASE_URL","SUPABASE_SERVICE_ROLE_KEY","auth","autoRefreshToken","persistSession","cleanDatabaseAdmin","f","console","log","tables","table","count","beforeCount","from","select","head","error","delete","not","b","message","afterCount","err","catch"],"sources":["clean_database_admin.js"],"sourcesContent":["require('dotenv').config();\nconst { createClient } = require('@supabase/supabase-js');\n\n// Usar service_role key para ter permiss√µes administrativas\nconst supabase = createClient(\n  process.env.SUPABASE_URL, \n  process.env.SUPABASE_SERVICE_ROLE_KEY,\n  {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false\n    }\n  }\n);\n\nasync function cleanDatabaseAdmin() {\n  console.log('üßπ LIMPANDO BANCO DE DADOS (MODO ADMIN)');\n  console.log('==================================================');\n  \n  const tables = ['clients', 'contracts', 'payments'];\n  \n  for (const table of tables) {\n    try {\n      console.log(`üóëÔ∏è  Limpando tabela '${table}'...`);\n      \n      // Primeiro, contar registros\n      const { count: beforeCount } = await supabase\n        .from(table)\n        .select('*', { count: 'exact', head: true });\n      \n      console.log(`   üìä Registros antes: ${beforeCount}`);\n      \n      // Deletar todos os registros\n      const { error } = await supabase\n        .from(table)\n        .delete()\n        .not('id', 'is', null);\n      \n      if (error) {\n        console.log(`‚ùå Erro ao limpar '${table}': ${error.message}`);\n      } else {\n        // Verificar ap√≥s limpeza\n        const { count: afterCount } = await supabase\n          .from(table)\n          .select('*', { count: 'exact', head: true });\n        \n        console.log(`   üìä Registros depois: ${afterCount}`);\n        console.log(`‚úÖ Tabela '${table}' limpa com sucesso`);\n      }\n    } catch (err) {\n      console.log(`‚ùå Erro ao acessar tabela '${table}': ${err.message}`);\n    }\n  }\n  \n  console.log('\\n‚úÖ LIMPEZA ADMINISTRATIVA CONCLU√çDA!');\n}\n\ncleanDatabaseAdmin().catch(console.error);"],"mappings":"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","ignoreList":[]}