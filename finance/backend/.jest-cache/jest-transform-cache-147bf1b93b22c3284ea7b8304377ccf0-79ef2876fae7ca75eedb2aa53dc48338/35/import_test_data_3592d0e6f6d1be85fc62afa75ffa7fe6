012dcd10f715f4479afe9083e5b832f9
/* istanbul ignore next */
function cov_1ef7uzlsbw() {
  var path = "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/scripts/import_test_data.js";
  var hash = "a28461bff647d07397ce4cc95e4968acd0bae8f2";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/scripts/import_test_data.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 25
        },
        end: {
          line: 1,
          column: 57
        }
      },
      "1": {
        start: {
          line: 2,
          column: 11
        },
        end: {
          line: 2,
          column: 24
        }
      },
      "2": {
        start: {
          line: 3,
          column: 12
        },
        end: {
          line: 3,
          column: 33
        }
      },
      "3": {
        start: {
          line: 4,
          column: 13
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "4": {
        start: {
          line: 5,
          column: 0
        },
        end: {
          line: 5,
          column: 27
        }
      },
      "5": {
        start: {
          line: 8,
          column: 20
        },
        end: {
          line: 8,
          column: 44
        }
      },
      "6": {
        start: {
          line: 9,
          column: 20
        },
        end: {
          line: 9,
          column: 49
        }
      },
      "7": {
        start: {
          line: 11,
          column: 0
        },
        end: {
          line: 14,
          column: 1
        }
      },
      "8": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 12,
          column: 93
        }
      },
      "9": {
        start: {
          line: 13,
          column: 2
        },
        end: {
          line: 13,
          column: 18
        }
      },
      "10": {
        start: {
          line: 16,
          column: 17
        },
        end: {
          line: 16,
          column: 55
        }
      },
      "11": {
        start: {
          line: 19,
          column: 22
        },
        end: {
          line: 19,
          column: 50
        }
      },
      "12": {
        start: {
          line: 23,
          column: 2
        },
        end: {
          line: 71,
          column: 5
        }
      },
      "13": {
        start: {
          line: 24,
          column: 20
        },
        end: {
          line: 24,
          column: 22
        }
      },
      "14": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 21
        }
      },
      "15": {
        start: {
          line: 26,
          column: 19
        },
        end: {
          line: 26,
          column: 20
        }
      },
      "16": {
        start: {
          line: 28,
          column: 4
        },
        end: {
          line: 28,
          column: 58
        }
      },
      "17": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 70,
          column: 9
        }
      },
      "18": {
        start: {
          line: 33,
          column: 28
        },
        end: {
          line: 33,
          column: 54
        }
      },
      "19": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 36,
          column: 9
        }
      },
      "20": {
        start: {
          line: 35,
          column: 10
        },
        end: {
          line: 35,
          column: 36
        }
      },
      "21": {
        start: {
          line: 39,
          column: 8
        },
        end: {
          line: 39,
          column: 76
        }
      },
      "22": {
        start: {
          line: 41,
          column: 8
        },
        end: {
          line: 45,
          column: 9
        }
      },
      "23": {
        start: {
          line: 42,
          column: 10
        },
        end: {
          line: 42,
          column: 63
        }
      },
      "24": {
        start: {
          line: 43,
          column: 10
        },
        end: {
          line: 43,
          column: 46
        }
      },
      "25": {
        start: {
          line: 44,
          column: 10
        },
        end: {
          line: 44,
          column: 17
        }
      },
      "26": {
        start: {
          line: 47,
          column: 8
        },
        end: {
          line: 63,
          column: 9
        }
      },
      "27": {
        start: {
          line: 48,
          column: 34
        },
        end: {
          line: 51,
          column: 21
        }
      },
      "28": {
        start: {
          line: 53,
          column: 10
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "29": {
        start: {
          line: 54,
          column: 12
        },
        end: {
          line: 54,
          column: 66
        }
      },
      "30": {
        start: {
          line: 55,
          column: 12
        },
        end: {
          line: 55,
          column: 50
        }
      },
      "31": {
        start: {
          line: 57,
          column: 12
        },
        end: {
          line: 57,
          column: 59
        }
      },
      "32": {
        start: {
          line: 58,
          column: 12
        },
        end: {
          line: 58,
          column: 83
        }
      },
      "33": {
        start: {
          line: 61,
          column: 10
        },
        end: {
          line: 61,
          column: 62
        }
      },
      "34": {
        start: {
          line: 62,
          column: 10
        },
        end: {
          line: 62,
          column: 46
        }
      },
      "35": {
        start: {
          line: 65,
          column: 8
        },
        end: {
          line: 65,
          column: 53
        }
      },
      "36": {
        start: {
          line: 68,
          column: 8
        },
        end: {
          line: 68,
          column: 67
        }
      },
      "37": {
        start: {
          line: 69,
          column: 8
        },
        end: {
          line: 69,
          column: 22
        }
      },
      "38": {
        start: {
          line: 76,
          column: 2
        },
        end: {
          line: 130,
          column: 3
        }
      },
      "39": {
        start: {
          line: 77,
          column: 4
        },
        end: {
          line: 77,
          column: 64
        }
      },
      "40": {
        start: {
          line: 80,
          column: 4
        },
        end: {
          line: 80,
          column: 55
        }
      },
      "41": {
        start: {
          line: 81,
          column: 28
        },
        end: {
          line: 81,
          column: 83
        }
      },
      "42": {
        start: {
          line: 82,
          column: 4
        },
        end: {
          line: 85,
          column: 5
        }
      },
      "43": {
        start: {
          line: 83,
          column: 6
        },
        end: {
          line: 83,
          column: 57
        }
      },
      "44": {
        start: {
          line: 84,
          column: 6
        },
        end: {
          line: 84,
          column: 22
        }
      },
      "45": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 86,
          column: 55
        }
      },
      "46": {
        start: {
          line: 88,
          column: 20
        },
        end: {
          line: 88,
          column: 66
        }
      },
      "47": {
        start: {
          line: 89,
          column: 24
        },
        end: {
          line: 89,
          column: 25
        }
      },
      "48": {
        start: {
          line: 90,
          column: 22
        },
        end: {
          line: 90,
          column: 23
        }
      },
      "49": {
        start: {
          line: 93,
          column: 22
        },
        end: {
          line: 97,
          column: 5
        }
      },
      "50": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 112,
          column: 5
        }
      },
      "51": {
        start: {
          line: 100,
          column: 23
        },
        end: {
          line: 100,
          column: 47
        }
      },
      "52": {
        start: {
          line: 102,
          column: 6
        },
        end: {
          line: 111,
          column: 7
        }
      },
      "53": {
        start: {
          line: 103,
          column: 8
        },
        end: {
          line: 103,
          column: 59
        }
      },
      "54": {
        start: {
          line: 104,
          column: 23
        },
        end: {
          line: 104,
          column: 59
        }
      },
      "55": {
        start: {
          line: 105,
          column: 8
        },
        end: {
          line: 105,
          column: 90
        }
      },
      "56": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 107,
          column: 41
        }
      },
      "57": {
        start: {
          line: 108,
          column: 8
        },
        end: {
          line: 108,
          column: 37
        }
      },
      "58": {
        start: {
          line: 110,
          column: 8
        },
        end: {
          line: 110,
          column: 72
        }
      },
      "59": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 114,
          column: 55
        }
      },
      "60": {
        start: {
          line: 115,
          column: 4
        },
        end: {
          line: 115,
          column: 70
        }
      },
      "61": {
        start: {
          line: 116,
          column: 4
        },
        end: {
          line: 116,
          column: 79
        }
      },
      "62": {
        start: {
          line: 117,
          column: 4
        },
        end: {
          line: 117,
          column: 52
        }
      },
      "63": {
        start: {
          line: 118,
          column: 4
        },
        end: {
          line: 118,
          column: 70
        }
      },
      "64": {
        start: {
          line: 120,
          column: 4
        },
        end: {
          line: 125,
          column: 5
        }
      },
      "65": {
        start: {
          line: 121,
          column: 6
        },
        end: {
          line: 121,
          column: 79
        }
      },
      "66": {
        start: {
          line: 122,
          column: 6
        },
        end: {
          line: 122,
          column: 68
        }
      },
      "67": {
        start: {
          line: 124,
          column: 6
        },
        end: {
          line: 124,
          column: 91
        }
      },
      "68": {
        start: {
          line: 128,
          column: 4
        },
        end: {
          line: 128,
          column: 42
        }
      },
      "69": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 20
        }
      },
      "70": {
        start: {
          line: 134,
          column: 0
        },
        end: {
          line: 136,
          column: 1
        }
      },
      "71": {
        start: {
          line: 135,
          column: 2
        },
        end: {
          line: 135,
          column: 13
        }
      },
      "72": {
        start: {
          line: 138,
          column: 0
        },
        end: {
          line: 138,
          column: 45
        }
      }
    },
    fnMap: {
      "0": {
        name: "importTestCSV",
        decl: {
          start: {
            line: 22,
            column: 15
          },
          end: {
            line: 22,
            column: 28
          }
        },
        loc: {
          start: {
            line: 22,
            column: 50
          },
          end: {
            line: 72,
            column: 1
          }
        },
        line: 22
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 23,
            column: 21
          },
          end: {
            line: 23,
            column: 22
          }
        },
        loc: {
          start: {
            line: 23,
            column: 42
          },
          end: {
            line: 71,
            column: 3
          }
        },
        line: 23
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 32,
            column: 18
          },
          end: {
            line: 32,
            column: 19
          }
        },
        loc: {
          start: {
            line: 32,
            column: 28
          },
          end: {
            line: 37,
            column: 7
          }
        },
        line: 32
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 17
          },
          end: {
            line: 38,
            column: 18
          }
        },
        loc: {
          start: {
            line: 38,
            column: 29
          },
          end: {
            line: 66,
            column: 7
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 67,
            column: 19
          },
          end: {
            line: 67,
            column: 20
          }
        },
        loc: {
          start: {
            line: 67,
            column: 30
          },
          end: {
            line: 70,
            column: 7
          }
        },
        line: 67
      },
      "5": {
        name: "mainTest",
        decl: {
          start: {
            line: 75,
            column: 15
          },
          end: {
            line: 75,
            column: 23
          }
        },
        loc: {
          start: {
            line: 75,
            column: 26
          },
          end: {
            line: 131,
            column: 1
          }
        },
        line: 75
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 11,
            column: 0
          },
          end: {
            line: 14,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 11,
            column: 0
          },
          end: {
            line: 14,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 11
      },
      "1": {
        loc: {
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 32
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 11,
            column: 4
          },
          end: {
            line: 11,
            column: 16
          }
        }, {
          start: {
            line: 11,
            column: 20
          },
          end: {
            line: 11,
            column: 32
          }
        }],
        line: 11
      },
      "2": {
        loc: {
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 34,
            column: 8
          },
          end: {
            line: 36,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 34
      },
      "3": {
        loc: {
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 41,
            column: 8
          },
          end: {
            line: 45,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 41
      },
      "4": {
        loc: {
          start: {
            line: 53,
            column: 10
          },
          end: {
            line: 59,
            column: 11
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 53,
            column: 10
          },
          end: {
            line: 59,
            column: 11
          }
        }, {
          start: {
            line: 56,
            column: 17
          },
          end: {
            line: 59,
            column: 11
          }
        }],
        line: 53
      },
      "5": {
        loc: {
          start: {
            line: 57,
            column: 23
          },
          end: {
            line: 57,
            column: 58
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 57,
            column: 30
          },
          end: {
            line: 57,
            column: 41
          }
        }, {
          start: {
            line: 57,
            column: 44
          },
          end: {
            line: 57,
            column: 58
          }
        }],
        line: 57
      },
      "6": {
        loc: {
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 82,
            column: 4
          },
          end: {
            line: 85,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 82
      },
      "7": {
        loc: {
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 111,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 102,
            column: 6
          },
          end: {
            line: 111,
            column: 7
          }
        }, {
          start: {
            line: 109,
            column: 13
          },
          end: {
            line: 111,
            column: 7
          }
        }],
        line: 102
      },
      "8": {
        loc: {
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 120,
            column: 4
          },
          end: {
            line: 125,
            column: 5
          }
        }, {
          start: {
            line: 123,
            column: 11
          },
          end: {
            line: 125,
            column: 5
          }
        }],
        line: 120
      },
      "9": {
        loc: {
          start: {
            line: 134,
            column: 0
          },
          end: {
            line: 136,
            column: 1
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 134,
            column: 0
          },
          end: {
            line: 136,
            column: 1
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 134
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0,
      "72": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "a28461bff647d07397ce4cc95e4968acd0bae8f2"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1ef7uzlsbw = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1ef7uzlsbw();
const {
  createClient
} =
/* istanbul ignore next */
(cov_1ef7uzlsbw().s[0]++, require('@supabase/supabase-js'));
const fs =
/* istanbul ignore next */
(cov_1ef7uzlsbw().s[1]++, require('fs'));
const csv =
/* istanbul ignore next */
(cov_1ef7uzlsbw().s[2]++, require('csv-parser'));
const path =
/* istanbul ignore next */
(cov_1ef7uzlsbw().s[3]++, require('path'));
/* istanbul ignore next */
cov_1ef7uzlsbw().s[4]++;
require('dotenv').config();

// Configuração do Supabase
const supabaseUrl =
/* istanbul ignore next */
(cov_1ef7uzlsbw().s[5]++, process.env.SUPABASE_URL);
const supabaseKey =
/* istanbul ignore next */
(cov_1ef7uzlsbw().s[6]++, process.env.SUPABASE_ANON_KEY);
/* istanbul ignore next */
cov_1ef7uzlsbw().s[7]++;
if (
/* istanbul ignore next */
(cov_1ef7uzlsbw().b[1][0]++, !supabaseUrl) ||
/* istanbul ignore next */
(cov_1ef7uzlsbw().b[1][1]++, !supabaseKey)) {
  /* istanbul ignore next */
  cov_1ef7uzlsbw().b[0][0]++;
  cov_1ef7uzlsbw().s[8]++;
  console.error('❌ Variáveis de ambiente SUPABASE_URL e SUPABASE_ANON_KEY são obrigatórias');
  /* istanbul ignore next */
  cov_1ef7uzlsbw().s[9]++;
  process.exit(1);
} else
/* istanbul ignore next */
{
  cov_1ef7uzlsbw().b[0][1]++;
}
const supabase =
/* istanbul ignore next */
(cov_1ef7uzlsbw().s[10]++, createClient(supabaseUrl, supabaseKey));

// Importar funções do script principal
const {
  cleanData
} =
/* istanbul ignore next */
(cov_1ef7uzlsbw().s[11]++, require('./import_csv_data'));

// Função para importar dados de um arquivo CSV (versão para teste)
async function importTestCSV(filePath, tableName) {
  /* istanbul ignore next */
  cov_1ef7uzlsbw().f[0]++;
  cov_1ef7uzlsbw().s[12]++;
  return new Promise((resolve, reject) => {
    /* istanbul ignore next */
    cov_1ef7uzlsbw().f[1]++;
    const results =
    /* istanbul ignore next */
    (cov_1ef7uzlsbw().s[13]++, []);
    const errors =
    /* istanbul ignore next */
    (cov_1ef7uzlsbw().s[14]++, []);
    let imported =
    /* istanbul ignore next */
    (cov_1ef7uzlsbw().s[15]++, 0);
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[16]++;
    console.log(`📂 Lendo arquivo de teste: ${filePath}`);
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[17]++;
    fs.createReadStream(filePath).pipe(csv()).on('data', data => {
      /* istanbul ignore next */
      cov_1ef7uzlsbw().f[2]++;
      const cleanedData =
      /* istanbul ignore next */
      (cov_1ef7uzlsbw().s[18]++, cleanData(data, tableName));
      /* istanbul ignore next */
      cov_1ef7uzlsbw().s[19]++;
      if (Object.keys(cleanedData).length > 0) {
        /* istanbul ignore next */
        cov_1ef7uzlsbw().b[2][0]++;
        cov_1ef7uzlsbw().s[20]++;
        results.push(cleanedData);
      } else
      /* istanbul ignore next */
      {
        cov_1ef7uzlsbw().b[2][1]++;
      }
    }).on('end', async () => {
      /* istanbul ignore next */
      cov_1ef7uzlsbw().f[3]++;
      cov_1ef7uzlsbw().s[21]++;
      console.log(`📊 ${results.length} registros lidos do CSV de teste`);
      /* istanbul ignore next */
      cov_1ef7uzlsbw().s[22]++;
      if (results.length === 0) {
        /* istanbul ignore next */
        cov_1ef7uzlsbw().b[3][0]++;
        cov_1ef7uzlsbw().s[23]++;
        console.log('⚠️  Nenhum registro válido encontrado');
        /* istanbul ignore next */
        cov_1ef7uzlsbw().s[24]++;
        resolve({
          imported: 0,
          errors: 0
        });
        /* istanbul ignore next */
        cov_1ef7uzlsbw().s[25]++;
        return;
      } else
      /* istanbul ignore next */
      {
        cov_1ef7uzlsbw().b[3][1]++;
      }
      cov_1ef7uzlsbw().s[26]++;
      try {
        const {
          data,
          error
        } =
        /* istanbul ignore next */
        (cov_1ef7uzlsbw().s[27]++, await supabase.from(tableName).insert(results).select());
        /* istanbul ignore next */
        cov_1ef7uzlsbw().s[28]++;
        if (error) {
          /* istanbul ignore next */
          cov_1ef7uzlsbw().b[4][0]++;
          cov_1ef7uzlsbw().s[29]++;
          console.log(`❌ Erro na importação: ${error.message}`);
          /* istanbul ignore next */
          cov_1ef7uzlsbw().s[30]++;
          errors.push({
            error: error.message
          });
        } else {
          /* istanbul ignore next */
          cov_1ef7uzlsbw().b[4][1]++;
          cov_1ef7uzlsbw().s[31]++;
          imported = data ?
          /* istanbul ignore next */
          (cov_1ef7uzlsbw().b[5][0]++, data.length) :
          /* istanbul ignore next */
          (cov_1ef7uzlsbw().b[5][1]++, results.length);
          /* istanbul ignore next */
          cov_1ef7uzlsbw().s[32]++;
          console.log(`✅ ${imported} registros de teste importados com sucesso`);
        }
      } catch (err) {
        /* istanbul ignore next */
        cov_1ef7uzlsbw().s[33]++;
        console.log(`❌ Erro na importação: ${err.message}`);
        /* istanbul ignore next */
        cov_1ef7uzlsbw().s[34]++;
        errors.push({
          error: err.message
        });
      }
      /* istanbul ignore next */
      cov_1ef7uzlsbw().s[35]++;
      resolve({
        imported,
        errors: errors.length
      });
    }).on('error', error => {
      /* istanbul ignore next */
      cov_1ef7uzlsbw().f[4]++;
      cov_1ef7uzlsbw().s[36]++;
      console.error(`❌ Erro ao ler arquivo ${filePath}:`, error);
      /* istanbul ignore next */
      cov_1ef7uzlsbw().s[37]++;
      reject(error);
    });
  });
}

// Função principal para teste
async function mainTest() {
  /* istanbul ignore next */
  cov_1ef7uzlsbw().f[5]++;
  cov_1ef7uzlsbw().s[38]++;
  try {
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[39]++;
    console.log('🧪 Iniciando importação de DADOS DE TESTE...');

    // Testar conexão
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[40]++;
    console.log('🔗 Testando conexão com Supabase...');
    const {
      data,
      error
    } =
    /* istanbul ignore next */
    (cov_1ef7uzlsbw().s[41]++, await supabase.from('clients').select('count').limit(1));
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[42]++;
    if (error) {
      /* istanbul ignore next */
      cov_1ef7uzlsbw().b[6][0]++;
      cov_1ef7uzlsbw().s[43]++;
      console.error('❌ Erro de conexão:', error.message);
      /* istanbul ignore next */
      cov_1ef7uzlsbw().s[44]++;
      process.exit(1);
    } else
    /* istanbul ignore next */
    {
      cov_1ef7uzlsbw().b[6][1]++;
    }
    cov_1ef7uzlsbw().s[45]++;
    console.log('✅ Conexão estabelecida com sucesso!');
    const testDir =
    /* istanbul ignore next */
    (cov_1ef7uzlsbw().s[46]++, path.join(__dirname, '../../../importBD/test'));
    let totalImported =
    /* istanbul ignore next */
    (cov_1ef7uzlsbw().s[47]++, 0);
    let totalErrors =
    /* istanbul ignore next */
    (cov_1ef7uzlsbw().s[48]++, 0);

    // Arquivos CSV de teste para importar (ordem importante devido às dependências)
    const testFiles =
    /* istanbul ignore next */
    (cov_1ef7uzlsbw().s[49]++, [{
      file: 'test_clients.csv',
      table: 'clients'
    }, {
      file: 'test_contracts.csv',
      table: 'contracts'
    }
    // payments será importado apenas na versão completa
    ]);
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[50]++;
    for (const {
      file,
      table
    } of testFiles) {
      const filePath =
      /* istanbul ignore next */
      (cov_1ef7uzlsbw().s[51]++, path.join(testDir, file));
      /* istanbul ignore next */
      cov_1ef7uzlsbw().s[52]++;
      if (fs.existsSync(filePath)) {
        /* istanbul ignore next */
        cov_1ef7uzlsbw().b[7][0]++;
        cov_1ef7uzlsbw().s[53]++;
        console.log(`\n📋 Importando ${table} (TESTE)...`);
        const result =
        /* istanbul ignore next */
        (cov_1ef7uzlsbw().s[54]++, await importTestCSV(filePath, table));
        /* istanbul ignore next */
        cov_1ef7uzlsbw().s[55]++;
        console.log(`📊 ${table}: ${result.imported} importados, ${result.errors} erros`);
        /* istanbul ignore next */
        cov_1ef7uzlsbw().s[56]++;
        totalImported += result.imported;
        /* istanbul ignore next */
        cov_1ef7uzlsbw().s[57]++;
        totalErrors += result.errors;
      } else {
        /* istanbul ignore next */
        cov_1ef7uzlsbw().b[7][1]++;
        cov_1ef7uzlsbw().s[58]++;
        console.log(`⚠️  Arquivo de teste não encontrado: ${filePath}`);
      }
    }
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[59]++;
    console.log('\n🎉 IMPORTAÇÃO DE TESTE CONCLUÍDA!');
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[60]++;
    console.log('==================================================');
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[61]++;
    console.log(`📊 Total de registros de teste importados: ${totalImported}`);
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[62]++;
    console.log(`❌ Total de erros: ${totalErrors}`);
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[63]++;
    console.log('==================================================');
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[64]++;
    if (totalErrors > 0) {
      /* istanbul ignore next */
      cov_1ef7uzlsbw().b[8][0]++;
      cov_1ef7uzlsbw().s[65]++;
      console.log('⚠️  Alguns erros ocorreram durante a importação de teste.');
      /* istanbul ignore next */
      cov_1ef7uzlsbw().s[66]++;
      console.log('   Verifique os logs acima para mais detalhes.');
    } else {
      /* istanbul ignore next */
      cov_1ef7uzlsbw().b[8][1]++;
      cov_1ef7uzlsbw().s[67]++;
      console.log('✅ Teste bem-sucedido! Agora você pode executar a importação completa.');
    }
  } catch (error) {
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[68]++;
    console.error('❌ Erro fatal:', error);
    /* istanbul ignore next */
    cov_1ef7uzlsbw().s[69]++;
    process.exit(1);
  }
}

// Executar se chamado diretamente
/* istanbul ignore next */
cov_1ef7uzlsbw().s[70]++;
if (require.main === module) {
  /* istanbul ignore next */
  cov_1ef7uzlsbw().b[9][0]++;
  cov_1ef7uzlsbw().s[71]++;
  mainTest();
} else
/* istanbul ignore next */
{
  cov_1ef7uzlsbw().b[9][1]++;
}
cov_1ef7uzlsbw().s[72]++;
module.exports = {
  importTestCSV,
  mainTest
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,