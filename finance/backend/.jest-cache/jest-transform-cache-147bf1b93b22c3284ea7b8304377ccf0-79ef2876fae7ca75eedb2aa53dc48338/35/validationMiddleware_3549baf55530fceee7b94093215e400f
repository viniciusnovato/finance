7f3bed170bda238f461b5283f533f6e2
/* istanbul ignore next */
function cov_2jlasvax8a() {
  var path = "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/middleware/validationMiddleware.js";
  var hash = "6a24cd0fcfb8d5b7754b702c59a14317feb9ba1a";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/middleware/validationMiddleware.js",
    statementMap: {
      "0": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 8,
          column: 36
        }
      },
      "1": {
        start: {
          line: 11,
          column: 17
        },
        end: {
          line: 35,
          column: 1
        }
      },
      "2": {
        start: {
          line: 12,
          column: 2
        },
        end: {
          line: 34,
          column: 4
        }
      },
      "3": {
        start: {
          line: 13,
          column: 29
        },
        end: {
          line: 16,
          column: 6
        }
      },
      "4": {
        start: {
          line: 18,
          column: 4
        },
        end: {
          line: 29,
          column: 5
        }
      },
      "5": {
        start: {
          line: 19,
          column: 6
        },
        end: {
          line: 28,
          column: 9
        }
      },
      "6": {
        start: {
          line: 22,
          column: 46
        },
        end: {
          line: 26,
          column: 9
        }
      },
      "7": {
        start: {
          line: 32,
          column: 4
        },
        end: {
          line: 32,
          column: 21
        }
      },
      "8": {
        start: {
          line: 33,
          column: 4
        },
        end: {
          line: 33,
          column: 11
        }
      },
      "9": {
        start: {
          line: 38,
          column: 22
        },
        end: {
          line: 61,
          column: 1
        }
      },
      "10": {
        start: {
          line: 39,
          column: 2
        },
        end: {
          line: 60,
          column: 4
        }
      },
      "11": {
        start: {
          line: 40,
          column: 29
        },
        end: {
          line: 43,
          column: 6
        }
      },
      "12": {
        start: {
          line: 45,
          column: 4
        },
        end: {
          line: 56,
          column: 5
        }
      },
      "13": {
        start: {
          line: 46,
          column: 6
        },
        end: {
          line: 55,
          column: 9
        }
      },
      "14": {
        start: {
          line: 49,
          column: 46
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "15": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 22
        }
      },
      "16": {
        start: {
          line: 59,
          column: 4
        },
        end: {
          line: 59,
          column: 11
        }
      },
      "17": {
        start: {
          line: 64,
          column: 23
        },
        end: {
          line: 87,
          column: 1
        }
      },
      "18": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 86,
          column: 4
        }
      },
      "19": {
        start: {
          line: 66,
          column: 29
        },
        end: {
          line: 69,
          column: 6
        }
      },
      "20": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 82,
          column: 5
        }
      },
      "21": {
        start: {
          line: 72,
          column: 6
        },
        end: {
          line: 81,
          column: 9
        }
      },
      "22": {
        start: {
          line: 75,
          column: 46
        },
        end: {
          line: 79,
          column: 9
        }
      },
      "23": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 23
        }
      },
      "24": {
        start: {
          line: 85,
          column: 4
        },
        end: {
          line: 85,
          column: 11
        }
      },
      "25": {
        start: {
          line: 90,
          column: 23
        },
        end: {
          line: 90,
          column: 45
        }
      },
      "26": {
        start: {
          line: 91,
          column: 25
        },
        end: {
          line: 91,
          column: 49
        }
      },
      "27": {
        start: {
          line: 92,
          column: 24
        },
        end: {
          line: 92,
          column: 47
        }
      },
      "28": {
        start: {
          line: 93,
          column: 21
        },
        end: {
          line: 93,
          column: 41
        }
      },
      "29": {
        start: {
          line: 94,
          column: 22
        },
        end: {
          line: 94,
          column: 43
        }
      },
      "30": {
        start: {
          line: 95,
          column: 31
        },
        end: {
          line: 95,
          column: 61
        }
      },
      "31": {
        start: {
          line: 98,
          column: 27
        },
        end: {
          line: 107,
          column: 1
        }
      },
      "32": {
        start: {
          line: 99,
          column: 23
        },
        end: {
          line: 99,
          column: 25
        }
      },
      "33": {
        start: {
          line: 101,
          column: 2
        },
        end: {
          line: 104,
          column: 5
        }
      },
      "34": {
        start: {
          line: 102,
          column: 18
        },
        end: {
          line: 102,
          column: 41
        }
      },
      "35": {
        start: {
          line: 103,
          column: 4
        },
        end: {
          line: 103,
          column: 41
        }
      },
      "36": {
        start: {
          line: 106,
          column: 2
        },
        end: {
          line: 106,
          column: 83
        }
      },
      "37": {
        start: {
          line: 106,
          column: 64
        },
        end: {
          line: 106,
          column: 81
        }
      },
      "38": {
        start: {
          line: 110,
          column: 29
        },
        end: {
          line: 110,
          column: 71
        }
      },
      "39": {
        start: {
          line: 111,
          column: 31
        },
        end: {
          line: 111,
          column: 75
        }
      },
      "40": {
        start: {
          line: 112,
          column: 30
        },
        end: {
          line: 112,
          column: 73
        }
      },
      "41": {
        start: {
          line: 113,
          column: 27
        },
        end: {
          line: 113,
          column: 67
        }
      },
      "42": {
        start: {
          line: 115,
          column: 0
        },
        end: {
          line: 129,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 11,
            column: 17
          },
          end: {
            line: 11,
            column: 18
          }
        },
        loc: {
          start: {
            line: 11,
            column: 29
          },
          end: {
            line: 35,
            column: 1
          }
        },
        line: 11
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 12,
            column: 9
          },
          end: {
            line: 12,
            column: 10
          }
        },
        loc: {
          start: {
            line: 12,
            column: 29
          },
          end: {
            line: 34,
            column: 3
          }
        },
        line: 12
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 35
          },
          end: {
            line: 22,
            column: 36
          }
        },
        loc: {
          start: {
            line: 22,
            column: 46
          },
          end: {
            line: 26,
            column: 9
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 38,
            column: 22
          },
          end: {
            line: 38,
            column: 23
          }
        },
        loc: {
          start: {
            line: 38,
            column: 34
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 38
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 39,
            column: 9
          },
          end: {
            line: 39,
            column: 10
          }
        },
        loc: {
          start: {
            line: 39,
            column: 29
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 39
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 49,
            column: 35
          },
          end: {
            line: 49,
            column: 36
          }
        },
        loc: {
          start: {
            line: 49,
            column: 46
          },
          end: {
            line: 53,
            column: 9
          }
        },
        line: 49
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 64,
            column: 23
          },
          end: {
            line: 64,
            column: 24
          }
        },
        loc: {
          start: {
            line: 64,
            column: 35
          },
          end: {
            line: 87,
            column: 1
          }
        },
        line: 64
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 65,
            column: 9
          },
          end: {
            line: 65,
            column: 10
          }
        },
        loc: {
          start: {
            line: 65,
            column: 29
          },
          end: {
            line: 86,
            column: 3
          }
        },
        line: 65
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 75,
            column: 35
          },
          end: {
            line: 75,
            column: 36
          }
        },
        loc: {
          start: {
            line: 75,
            column: 46
          },
          end: {
            line: 79,
            column: 9
          }
        },
        line: 75
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 98,
            column: 27
          },
          end: {
            line: 98,
            column: 28
          }
        },
        loc: {
          start: {
            line: 98,
            column: 43
          },
          end: {
            line: 107,
            column: 1
          }
        },
        line: 98
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 101,
            column: 50
          },
          end: {
            line: 101,
            column: 51
          }
        },
        loc: {
          start: {
            line: 101,
            column: 57
          },
          end: {
            line: 104,
            column: 3
          }
        },
        line: 101
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 106,
            column: 52
          },
          end: {
            line: 106,
            column: 53
          }
        },
        loc: {
          start: {
            line: 106,
            column: 64
          },
          end: {
            line: 106,
            column: 81
          }
        },
        line: 106
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 4
          },
          end: {
            line: 29,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 18
      },
      "1": {
        loc: {
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 45,
            column: 4
          },
          end: {
            line: 56,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 45
      },
      "2": {
        loc: {
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 71,
            column: 4
          },
          end: {
            line: 82,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 71
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "6a24cd0fcfb8d5b7754b702c59a14317feb9ba1a"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_2jlasvax8a = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_2jlasvax8a();
const {
  clientSchema,
  contractSchema,
  paymentSchema,
  userSchema,
  loginSchema,
  changePasswordSchema
} =
/* istanbul ignore next */
(cov_2jlasvax8a().s[0]++, require('../validators/schemas'));

// Middleware genérico para validação
/* istanbul ignore next */
cov_2jlasvax8a().s[1]++;
const validate = schema => {
  /* istanbul ignore next */
  cov_2jlasvax8a().f[0]++;
  cov_2jlasvax8a().s[2]++;
  return (req, res, next) => {
    /* istanbul ignore next */
    cov_2jlasvax8a().f[1]++;
    const {
      error,
      value
    } =
    /* istanbul ignore next */
    (cov_2jlasvax8a().s[3]++, schema.validate(req.body, {
      abortEarly: false,
      // Retorna todos os erros, não apenas o primeiro
      stripUnknown: true // Remove campos não definidos no schema
    }));
    /* istanbul ignore next */
    cov_2jlasvax8a().s[4]++;
    if (error) {
      /* istanbul ignore next */
      cov_2jlasvax8a().b[0][0]++;
      cov_2jlasvax8a().s[5]++;
      return res.status(400).json({
        error: 'Dados inválidos',
        code: 'VALIDATION_ERROR',
        details: error.details.map(detail => {
          /* istanbul ignore next */
          cov_2jlasvax8a().f[2]++;
          cov_2jlasvax8a().s[6]++;
          return {
            field: detail.path.join('.'),
            message: detail.message,
            value: detail.context?.value
          };
        }),
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jlasvax8a().b[0][1]++;
    }

    // Substitui req.body pelos dados validados e limpos
    cov_2jlasvax8a().s[7]++;
    req.body = value;
    /* istanbul ignore next */
    cov_2jlasvax8a().s[8]++;
    next();
  };
};

// Middleware para validação de parâmetros de query
/* istanbul ignore next */
cov_2jlasvax8a().s[9]++;
const validateQuery = schema => {
  /* istanbul ignore next */
  cov_2jlasvax8a().f[3]++;
  cov_2jlasvax8a().s[10]++;
  return (req, res, next) => {
    /* istanbul ignore next */
    cov_2jlasvax8a().f[4]++;
    const {
      error,
      value
    } =
    /* istanbul ignore next */
    (cov_2jlasvax8a().s[11]++, schema.validate(req.query, {
      abortEarly: false,
      stripUnknown: true
    }));
    /* istanbul ignore next */
    cov_2jlasvax8a().s[12]++;
    if (error) {
      /* istanbul ignore next */
      cov_2jlasvax8a().b[1][0]++;
      cov_2jlasvax8a().s[13]++;
      return res.status(400).json({
        error: 'Parâmetros de consulta inválidos',
        code: 'QUERY_VALIDATION_ERROR',
        details: error.details.map(detail => {
          /* istanbul ignore next */
          cov_2jlasvax8a().f[5]++;
          cov_2jlasvax8a().s[14]++;
          return {
            field: detail.path.join('.'),
            message: detail.message,
            value: detail.context?.value
          };
        }),
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jlasvax8a().b[1][1]++;
    }
    cov_2jlasvax8a().s[15]++;
    req.query = value;
    /* istanbul ignore next */
    cov_2jlasvax8a().s[16]++;
    next();
  };
};

// Middleware para validação de parâmetros de rota
/* istanbul ignore next */
cov_2jlasvax8a().s[17]++;
const validateParams = schema => {
  /* istanbul ignore next */
  cov_2jlasvax8a().f[6]++;
  cov_2jlasvax8a().s[18]++;
  return (req, res, next) => {
    /* istanbul ignore next */
    cov_2jlasvax8a().f[7]++;
    const {
      error,
      value
    } =
    /* istanbul ignore next */
    (cov_2jlasvax8a().s[19]++, schema.validate(req.params, {
      abortEarly: false,
      stripUnknown: true
    }));
    /* istanbul ignore next */
    cov_2jlasvax8a().s[20]++;
    if (error) {
      /* istanbul ignore next */
      cov_2jlasvax8a().b[2][0]++;
      cov_2jlasvax8a().s[21]++;
      return res.status(400).json({
        error: 'Parâmetros de rota inválidos',
        code: 'PARAMS_VALIDATION_ERROR',
        details: error.details.map(detail => {
          /* istanbul ignore next */
          cov_2jlasvax8a().f[8]++;
          cov_2jlasvax8a().s[22]++;
          return {
            field: detail.path.join('.'),
            message: detail.message,
            value: detail.context?.value
          };
        }),
        timestamp: new Date().toISOString()
      });
    } else
    /* istanbul ignore next */
    {
      cov_2jlasvax8a().b[2][1]++;
    }
    cov_2jlasvax8a().s[23]++;
    req.params = value;
    /* istanbul ignore next */
    cov_2jlasvax8a().s[24]++;
    next();
  };
};

// Middlewares específicos para cada entidade
const validateClient =
/* istanbul ignore next */
(cov_2jlasvax8a().s[25]++, validate(clientSchema));
const validateContract =
/* istanbul ignore next */
(cov_2jlasvax8a().s[26]++, validate(contractSchema));
const validatePayment =
/* istanbul ignore next */
(cov_2jlasvax8a().s[27]++, validate(paymentSchema));
const validateUser =
/* istanbul ignore next */
(cov_2jlasvax8a().s[28]++, validate(userSchema));
const validateLogin =
/* istanbul ignore next */
(cov_2jlasvax8a().s[29]++, validate(loginSchema));
const validateChangePassword =
/* istanbul ignore next */
(cov_2jlasvax8a().s[30]++, validate(changePasswordSchema));

// Schema para validação de atualização (campos opcionais)
/* istanbul ignore next */
cov_2jlasvax8a().s[31]++;
const createUpdateSchema = baseSchema => {
  /* istanbul ignore next */
  cov_2jlasvax8a().f[9]++;
  const updateSchema =
  /* istanbul ignore next */
  (cov_2jlasvax8a().s[32]++, {});
  /* istanbul ignore next */
  cov_2jlasvax8a().s[33]++;
  Object.keys(baseSchema.describe().keys).forEach(key => {
    /* istanbul ignore next */
    cov_2jlasvax8a().f[10]++;
    const field =
    /* istanbul ignore next */
    (cov_2jlasvax8a().s[34]++, baseSchema.extract(key));
    /* istanbul ignore next */
    cov_2jlasvax8a().s[35]++;
    updateSchema[key] = field.optional();
  });
  /* istanbul ignore next */
  cov_2jlasvax8a().s[36]++;
  return baseSchema.fork(Object.keys(updateSchema), schema => {
    /* istanbul ignore next */
    cov_2jlasvax8a().f[11]++;
    cov_2jlasvax8a().s[37]++;
    return schema.optional();
  });
};

// Middlewares para validação de atualização
const validateClientUpdate =
/* istanbul ignore next */
(cov_2jlasvax8a().s[38]++, validate(createUpdateSchema(clientSchema)));
const validateContractUpdate =
/* istanbul ignore next */
(cov_2jlasvax8a().s[39]++, validate(createUpdateSchema(contractSchema)));
const validatePaymentUpdate =
/* istanbul ignore next */
(cov_2jlasvax8a().s[40]++, validate(createUpdateSchema(paymentSchema)));
const validateUserUpdate =
/* istanbul ignore next */
(cov_2jlasvax8a().s[41]++, validate(createUpdateSchema(userSchema)));
/* istanbul ignore next */
cov_2jlasvax8a().s[42]++;
module.exports = {
  validate,
  validateQuery,
  validateParams,
  validateClient,
  validateContract,
  validatePayment,
  validateUser,
  validateLogin,
  validateChangePassword,
  validateClientUpdate,
  validateContractUpdate,
  validatePaymentUpdate,
  validateUserUpdate
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,