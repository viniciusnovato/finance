23464535f29de973cdb22fc9f3744bb2
/* istanbul ignore next */
function cov_1s8xf7hnk6() {
  var path = "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/scripts/create_simple_tables.js";
  var hash = "7f1eb34810befc3db72ea39851cbe2144d49c9bc";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/scripts/create_simple_tables.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 27
        }
      },
      "1": {
        start: {
          line: 2,
          column: 25
        },
        end: {
          line: 2,
          column: 57
        }
      },
      "2": {
        start: {
          line: 4,
          column: 17
        },
        end: {
          line: 7,
          column: 1
        }
      },
      "3": {
        start: {
          line: 10,
          column: 2
        },
        end: {
          line: 10,
          column: 55
        }
      },
      "4": {
        start: {
          line: 12,
          column: 18
        },
        end: {
          line: 45,
          column: 3
        }
      },
      "5": {
        start: {
          line: 47,
          column: 2
        },
        end: {
          line: 58,
          column: 3
        }
      },
      "6": {
        start: {
          line: 47,
          column: 15
        },
        end: {
          line: 47,
          column: 16
        }
      },
      "7": {
        start: {
          line: 48,
          column: 4
        },
        end: {
          line: 57,
          column: 5
        }
      },
      "8": {
        start: {
          line: 49,
          column: 24
        },
        end: {
          line: 49,
          column: 75
        }
      },
      "9": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 54,
          column: 7
        }
      },
      "10": {
        start: {
          line: 51,
          column: 8
        },
        end: {
          line: 51,
          column: 68
        }
      },
      "11": {
        start: {
          line: 53,
          column: 8
        },
        end: {
          line: 53,
          column: 64
        }
      },
      "12": {
        start: {
          line: 56,
          column: 6
        },
        end: {
          line: 56,
          column: 64
        }
      },
      "13": {
        start: {
          line: 60,
          column: 2
        },
        end: {
          line: 60,
          column: 37
        }
      },
      "14": {
        start: {
          line: 63,
          column: 0
        },
        end: {
          line: 63,
          column: 21
        }
      }
    },
    fnMap: {
      "0": {
        name: "createSimpleTables",
        decl: {
          start: {
            line: 9,
            column: 15
          },
          end: {
            line: 9,
            column: 33
          }
        },
        loc: {
          start: {
            line: 9,
            column: 36
          },
          end: {
            line: 61,
            column: 1
          }
        },
        line: 9
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 54,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 50,
            column: 6
          },
          end: {
            line: 54,
            column: 7
          }
        }, {
          start: {
            line: 52,
            column: 13
          },
          end: {
            line: 54,
            column: 7
          }
        }],
        line: 50
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    f: {
      "0": 0
    },
    b: {
      "0": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "7f1eb34810befc3db72ea39851cbe2144d49c9bc"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1s8xf7hnk6 = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1s8xf7hnk6();
cov_1s8xf7hnk6().s[0]++;
require('dotenv').config();
const {
  createClient
} =
/* istanbul ignore next */
(cov_1s8xf7hnk6().s[1]++, require('@supabase/supabase-js'));
const supabase =
/* istanbul ignore next */
(cov_1s8xf7hnk6().s[2]++, createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY));
async function createSimpleTables() {
  /* istanbul ignore next */
  cov_1s8xf7hnk6().f[0]++;
  cov_1s8xf7hnk6().s[3]++;
  console.log('üèóÔ∏è  Criando tabelas simplificadas...');
  const queries =
  /* istanbul ignore next */
  (cov_1s8xf7hnk6().s[4]++, [
  // Criar tabela de empresas simples
  `CREATE TABLE IF NOT EXISTS companies (
      id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      name VARCHAR(255) NOT NULL,
      document VARCHAR(20) NOT NULL UNIQUE,
      document_type VARCHAR(10) NOT NULL DEFAULT 'CNPJ',
      email VARCHAR(255),
      phone VARCHAR(20),
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
    );`,
  // Criar tabela de filiais simples
  `CREATE TABLE IF NOT EXISTS branches (
      id UUID PRIMARY KEY DEFAULT uuid_generate_v4(),
      company_id UUID NOT NULL REFERENCES companies(id) ON DELETE CASCADE,
      name VARCHAR(255) NOT NULL,
      address TEXT,
      city VARCHAR(100),
      state VARCHAR(2),
      zip_code VARCHAR(10),
      created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
    );`,
  // Inserir empresa padr√£o
  `INSERT INTO companies (id, name, document, email, phone) 
     VALUES ('00000000-0000-0000-0000-000000000001', 'Empresa Padr√£o', '00000000000100', 'contato@empresa.com', '(11) 99999-9999')
     ON CONFLICT (id) DO NOTHING;`,
  // Inserir filial padr√£o
  `INSERT INTO branches (id, company_id, name, address, city, state, zip_code) 
     VALUES ('00000000-0000-0000-0000-000000000001', '00000000-0000-0000-0000-000000000001', 'Filial Principal', 'Endere√ßo Principal', 'S√£o Paulo', 'SP', '01000-000')
     ON CONFLICT (id) DO NOTHING;`]);
  /* istanbul ignore next */
  cov_1s8xf7hnk6().s[5]++;
  for (let i =
  /* istanbul ignore next */
  (cov_1s8xf7hnk6().s[6]++, 0); i < queries.length; i++) {
    /* istanbul ignore next */
    cov_1s8xf7hnk6().s[7]++;
    try {
      const {
        error
      } =
      /* istanbul ignore next */
      (cov_1s8xf7hnk6().s[8]++, await supabase.rpc('exec_sql', {
        sql: queries[i]
      }));
      /* istanbul ignore next */
      cov_1s8xf7hnk6().s[9]++;
      if (error) {
        /* istanbul ignore next */
        cov_1s8xf7hnk6().b[0][0]++;
        cov_1s8xf7hnk6().s[10]++;
        console.error(`‚ùå Erro no comando ${i + 1}:`, error.message);
      } else {
        /* istanbul ignore next */
        cov_1s8xf7hnk6().b[0][1]++;
        cov_1s8xf7hnk6().s[11]++;
        console.log(`‚úÖ Comando ${i + 1} executado com sucesso`);
      }
    } catch (err) {
      /* istanbul ignore next */
      cov_1s8xf7hnk6().s[12]++;
      console.error(`‚ùå Erro no comando ${i + 1}:`, err.message);
    }
  }
  /* istanbul ignore next */
  cov_1s8xf7hnk6().s[13]++;
  console.log('üéâ Tabelas criadas!');
}
/* istanbul ignore next */
cov_1s8xf7hnk6().s[14]++;
createSimpleTables();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJjb3ZfMXM4eGY3aG5rNiIsImFjdHVhbENvdmVyYWdlIiwicyIsInJlcXVpcmUiLCJjb25maWciLCJjcmVhdGVDbGllbnQiLCJzdXBhYmFzZSIsInByb2Nlc3MiLCJlbnYiLCJTVVBBQkFTRV9VUkwiLCJTVVBBQkFTRV9TRVJWSUNFX1JPTEVfS0VZIiwiY3JlYXRlU2ltcGxlVGFibGVzIiwiZiIsImNvbnNvbGUiLCJsb2ciLCJxdWVyaWVzIiwiaSIsImxlbmd0aCIsImVycm9yIiwicnBjIiwic3FsIiwiYiIsIm1lc3NhZ2UiLCJlcnIiXSwic291cmNlcyI6WyJjcmVhdGVfc2ltcGxlX3RhYmxlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCdkb3RlbnYnKS5jb25maWcoKTtcbmNvbnN0IHsgY3JlYXRlQ2xpZW50IH0gPSByZXF1aXJlKCdAc3VwYWJhc2Uvc3VwYWJhc2UtanMnKTtcblxuY29uc3Qgc3VwYWJhc2UgPSBjcmVhdGVDbGllbnQoXG4gIHByb2Nlc3MuZW52LlNVUEFCQVNFX1VSTCxcbiAgcHJvY2Vzcy5lbnYuU1VQQUJBU0VfU0VSVklDRV9ST0xFX0tFWVxuKTtcblxuYXN5bmMgZnVuY3Rpb24gY3JlYXRlU2ltcGxlVGFibGVzKCkge1xuICBjb25zb2xlLmxvZygn8J+Pl++4jyAgQ3JpYW5kbyB0YWJlbGFzIHNpbXBsaWZpY2FkYXMuLi4nKTtcbiAgXG4gIGNvbnN0IHF1ZXJpZXMgPSBbXG4gICAgLy8gQ3JpYXIgdGFiZWxhIGRlIGVtcHJlc2FzIHNpbXBsZXNcbiAgICBgQ1JFQVRFIFRBQkxFIElGIE5PVCBFWElTVFMgY29tcGFuaWVzIChcbiAgICAgIGlkIFVVSUQgUFJJTUFSWSBLRVkgREVGQVVMVCB1dWlkX2dlbmVyYXRlX3Y0KCksXG4gICAgICBuYW1lIFZBUkNIQVIoMjU1KSBOT1QgTlVMTCxcbiAgICAgIGRvY3VtZW50IFZBUkNIQVIoMjApIE5PVCBOVUxMIFVOSVFVRSxcbiAgICAgIGRvY3VtZW50X3R5cGUgVkFSQ0hBUigxMCkgTk9UIE5VTEwgREVGQVVMVCAnQ05QSicsXG4gICAgICBlbWFpbCBWQVJDSEFSKDI1NSksXG4gICAgICBwaG9uZSBWQVJDSEFSKDIwKSxcbiAgICAgIGNyZWF0ZWRfYXQgVElNRVNUQU1QIFdJVEggVElNRSBaT05FIERFRkFVTFQgTk9XKClcbiAgICApO2AsXG4gICAgXG4gICAgLy8gQ3JpYXIgdGFiZWxhIGRlIGZpbGlhaXMgc2ltcGxlc1xuICAgIGBDUkVBVEUgVEFCTEUgSUYgTk9UIEVYSVNUUyBicmFuY2hlcyAoXG4gICAgICBpZCBVVUlEIFBSSU1BUlkgS0VZIERFRkFVTFQgdXVpZF9nZW5lcmF0ZV92NCgpLFxuICAgICAgY29tcGFueV9pZCBVVUlEIE5PVCBOVUxMIFJFRkVSRU5DRVMgY29tcGFuaWVzKGlkKSBPTiBERUxFVEUgQ0FTQ0FERSxcbiAgICAgIG5hbWUgVkFSQ0hBUigyNTUpIE5PVCBOVUxMLFxuICAgICAgYWRkcmVzcyBURVhULFxuICAgICAgY2l0eSBWQVJDSEFSKDEwMCksXG4gICAgICBzdGF0ZSBWQVJDSEFSKDIpLFxuICAgICAgemlwX2NvZGUgVkFSQ0hBUigxMCksXG4gICAgICBjcmVhdGVkX2F0IFRJTUVTVEFNUCBXSVRIIFRJTUUgWk9ORSBERUZBVUxUIE5PVygpXG4gICAgKTtgLFxuICAgIFxuICAgIC8vIEluc2VyaXIgZW1wcmVzYSBwYWRyw6NvXG4gICAgYElOU0VSVCBJTlRPIGNvbXBhbmllcyAoaWQsIG5hbWUsIGRvY3VtZW50LCBlbWFpbCwgcGhvbmUpIFxuICAgICBWQUxVRVMgKCcwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDEnLCAnRW1wcmVzYSBQYWRyw6NvJywgJzAwMDAwMDAwMDAwMTAwJywgJ2NvbnRhdG9AZW1wcmVzYS5jb20nLCAnKDExKSA5OTk5OS05OTk5JylcbiAgICAgT04gQ09ORkxJQ1QgKGlkKSBETyBOT1RISU5HO2AsXG4gICAgXG4gICAgLy8gSW5zZXJpciBmaWxpYWwgcGFkcsOjb1xuICAgIGBJTlNFUlQgSU5UTyBicmFuY2hlcyAoaWQsIGNvbXBhbnlfaWQsIG5hbWUsIGFkZHJlc3MsIGNpdHksIHN0YXRlLCB6aXBfY29kZSkgXG4gICAgIFZBTFVFUyAoJzAwMDAwMDAwLTAwMDAtMDAwMC0wMDAwLTAwMDAwMDAwMDAwMScsICcwMDAwMDAwMC0wMDAwLTAwMDAtMDAwMC0wMDAwMDAwMDAwMDEnLCAnRmlsaWFsIFByaW5jaXBhbCcsICdFbmRlcmXDp28gUHJpbmNpcGFsJywgJ1PDo28gUGF1bG8nLCAnU1AnLCAnMDEwMDAtMDAwJylcbiAgICAgT04gQ09ORkxJQ1QgKGlkKSBETyBOT1RISU5HO2BcbiAgXTtcbiAgXG4gIGZvciAobGV0IGkgPSAwOyBpIDwgcXVlcmllcy5sZW5ndGg7IGkrKykge1xuICAgIHRyeSB7XG4gICAgICBjb25zdCB7IGVycm9yIH0gPSBhd2FpdCBzdXBhYmFzZS5ycGMoJ2V4ZWNfc3FsJywgeyBzcWw6IHF1ZXJpZXNbaV0gfSk7XG4gICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihg4p2MIEVycm8gbm8gY29tYW5kbyAke2kgKyAxfTpgLCBlcnJvci5tZXNzYWdlKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGDinIUgQ29tYW5kbyAke2kgKyAxfSBleGVjdXRhZG8gY29tIHN1Y2Vzc29gKTtcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIGNvbnNvbGUuZXJyb3IoYOKdjCBFcnJvIG5vIGNvbWFuZG8gJHtpICsgMX06YCwgZXJyLm1lc3NhZ2UpO1xuICAgIH1cbiAgfVxuICBcbiAgY29uc29sZS5sb2coJ/CfjokgVGFiZWxhcyBjcmlhZGFzIScpO1xufVxuXG5jcmVhdGVTaW1wbGVUYWJsZXMoKTsiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7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