29751c4e53751ea397aa13c328dd1c16
/* istanbul ignore next */
function cov_1mpt27bv9w() {
  var path = "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/controllers/AuthController.js";
  var hash = "930119ce2869fdb915715df2363519d364dc3fa4";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/controllers/AuthController.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 20
        },
        end: {
          line: 1,
          column: 54
        }
      },
      "1": {
        start: {
          line: 2,
          column: 21
        },
        end: {
          line: 2,
          column: 53
        }
      },
      "2": {
        start: {
          line: 8,
          column: 17
        },
        end: {
          line: 19,
          column: 4
        }
      },
      "3": {
        start: {
          line: 9,
          column: 32
        },
        end: {
          line: 9,
          column: 40
        }
      },
      "4": {
        start: {
          line: 11,
          column: 19
        },
        end: {
          line: 11,
          column: 59
        }
      },
      "5": {
        start: {
          line: 13,
          column: 4
        },
        end: {
          line: 18,
          column: 7
        }
      },
      "6": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 32,
          column: 4
        }
      },
      "7": {
        start: {
          line: 25,
          column: 18
        },
        end: {
          line: 25,
          column: 67
        }
      },
      "8": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 27,
          column: 36
        }
      },
      "9": {
        start: {
          line: 29,
          column: 4
        },
        end: {
          line: 31,
          column: 7
        }
      },
      "10": {
        start: {
          line: 37,
          column: 20
        },
        end: {
          line: 47,
          column: 4
        }
      },
      "11": {
        start: {
          line: 38,
          column: 21
        },
        end: {
          line: 38,
          column: 29
        }
      },
      "12": {
        start: {
          line: 39,
          column: 22
        },
        end: {
          line: 39,
          column: 30
        }
      },
      "13": {
        start: {
          line: 41,
          column: 19
        },
        end: {
          line: 41,
          column: 66
        }
      },
      "14": {
        start: {
          line: 43,
          column: 4
        },
        end: {
          line: 46,
          column: 7
        }
      },
      "15": {
        start: {
          line: 52,
          column: 22
        },
        end: {
          line: 60,
          column: 4
        }
      },
      "16": {
        start: {
          line: 53,
          column: 19
        },
        end: {
          line: 53,
          column: 30
        }
      },
      "17": {
        start: {
          line: 55,
          column: 20
        },
        end: {
          line: 55,
          column: 56
        }
      },
      "18": {
        start: {
          line: 57,
          column: 4
        },
        end: {
          line: 59,
          column: 7
        }
      },
      "19": {
        start: {
          line: 65,
          column: 25
        },
        end: {
          line: 75,
          column: 4
        }
      },
      "20": {
        start: {
          line: 66,
          column: 19
        },
        end: {
          line: 66,
          column: 30
        }
      },
      "21": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 31
        }
      },
      "22": {
        start: {
          line: 69,
          column: 27
        },
        end: {
          line: 69,
          column: 78
        }
      },
      "23": {
        start: {
          line: 71,
          column: 4
        },
        end: {
          line: 74,
          column: 7
        }
      },
      "24": {
        start: {
          line: 80,
          column: 26
        },
        end: {
          line: 89,
          column: 4
        }
      },
      "25": {
        start: {
          line: 81,
          column: 19
        },
        end: {
          line: 81,
          column: 30
        }
      },
      "26": {
        start: {
          line: 82,
          column: 45
        },
        end: {
          line: 82,
          column: 53
        }
      },
      "27": {
        start: {
          line: 84,
          column: 4
        },
        end: {
          line: 84,
          column: 75
        }
      },
      "28": {
        start: {
          line: 86,
          column: 4
        },
        end: {
          line: 88,
          column: 7
        }
      },
      "29": {
        start: {
          line: 94,
          column: 26
        },
        end: {
          line: 102,
          column: 4
        }
      },
      "30": {
        start: {
          line: 95,
          column: 22
        },
        end: {
          line: 95,
          column: 30
        }
      },
      "31": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 44
        }
      },
      "32": {
        start: {
          line: 99,
          column: 4
        },
        end: {
          line: 101,
          column: 7
        }
      },
      "33": {
        start: {
          line: 107,
          column: 25
        },
        end: {
          line: 115,
          column: 4
        }
      },
      "34": {
        start: {
          line: 108,
          column: 35
        },
        end: {
          line: 108,
          column: 43
        }
      },
      "35": {
        start: {
          line: 110,
          column: 4
        },
        end: {
          line: 110,
          column: 56
        }
      },
      "36": {
        start: {
          line: 112,
          column: 4
        },
        end: {
          line: 114,
          column: 7
        }
      },
      "37": {
        start: {
          line: 120,
          column: 23
        },
        end: {
          line: 133,
          column: 4
        }
      },
      "38": {
        start: {
          line: 121,
          column: 17
        },
        end: {
          line: 121,
          column: 25
        }
      },
      "39": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 132,
          column: 7
        }
      },
      "40": {
        start: {
          line: 138,
          column: 20
        },
        end: {
          line: 151,
          column: 4
        }
      },
      "41": {
        start: {
          line: 139,
          column: 62
        },
        end: {
          line: 139,
          column: 71
        }
      },
      "42": {
        start: {
          line: 140,
          column: 22
        },
        end: {
          line: 140,
          column: 30
        }
      },
      "43": {
        start: {
          line: 142,
          column: 19
        },
        end: {
          line: 148,
          column: 17
        }
      },
      "44": {
        start: {
          line: 150,
          column: 4
        },
        end: {
          line: 150,
          column: 21
        }
      },
      "45": {
        start: {
          line: 156,
          column: 19
        },
        end: {
          line: 165,
          column: 4
        }
      },
      "46": {
        start: {
          line: 157,
          column: 19
        },
        end: {
          line: 157,
          column: 29
        }
      },
      "47": {
        start: {
          line: 158,
          column: 22
        },
        end: {
          line: 158,
          column: 30
        }
      },
      "48": {
        start: {
          line: 160,
          column: 17
        },
        end: {
          line: 160,
          column: 61
        }
      },
      "49": {
        start: {
          line: 162,
          column: 4
        },
        end: {
          line: 164,
          column: 7
        }
      },
      "50": {
        start: {
          line: 170,
          column: 22
        },
        end: {
          line: 181,
          column: 4
        }
      },
      "51": {
        start: {
          line: 171,
          column: 19
        },
        end: {
          line: 171,
          column: 29
        }
      },
      "52": {
        start: {
          line: 172,
          column: 23
        },
        end: {
          line: 172,
          column: 31
        }
      },
      "53": {
        start: {
          line: 173,
          column: 22
        },
        end: {
          line: 173,
          column: 30
        }
      },
      "54": {
        start: {
          line: 175,
          column: 24
        },
        end: {
          line: 175,
          column: 79
        }
      },
      "55": {
        start: {
          line: 177,
          column: 4
        },
        end: {
          line: 180,
          column: 7
        }
      },
      "56": {
        start: {
          line: 186,
          column: 28
        },
        end: {
          line: 197,
          column: 4
        }
      },
      "57": {
        start: {
          line: 187,
          column: 19
        },
        end: {
          line: 187,
          column: 29
        }
      },
      "58": {
        start: {
          line: 188,
          column: 26
        },
        end: {
          line: 188,
          column: 34
        }
      },
      "59": {
        start: {
          line: 189,
          column: 22
        },
        end: {
          line: 189,
          column: 30
        }
      },
      "60": {
        start: {
          line: 191,
          column: 24
        },
        end: {
          line: 191,
          column: 84
        }
      },
      "61": {
        start: {
          line: 193,
          column: 4
        },
        end: {
          line: 196,
          column: 7
        }
      },
      "62": {
        start: {
          line: 202,
          column: 22
        },
        end: {
          line: 211,
          column: 4
        }
      },
      "63": {
        start: {
          line: 203,
          column: 19
        },
        end: {
          line: 203,
          column: 29
        }
      },
      "64": {
        start: {
          line: 204,
          column: 22
        },
        end: {
          line: 204,
          column: 30
        }
      },
      "65": {
        start: {
          line: 206,
          column: 4
        },
        end: {
          line: 206,
          column: 48
        }
      },
      "66": {
        start: {
          line: 208,
          column: 4
        },
        end: {
          line: 210,
          column: 7
        }
      },
      "67": {
        start: {
          line: 216,
          column: 24
        },
        end: {
          line: 226,
          column: 4
        }
      },
      "68": {
        start: {
          line: 217,
          column: 30
        },
        end: {
          line: 217,
          column: 38
        }
      },
      "69": {
        start: {
          line: 219,
          column: 19
        },
        end: {
          line: 219,
          column: 64
        }
      },
      "70": {
        start: {
          line: 221,
          column: 4
        },
        end: {
          line: 225,
          column: 7
        }
      },
      "71": {
        start: {
          line: 229,
          column: 0
        },
        end: {
          line: 229,
          column: 32
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 8,
            column: 30
          },
          end: {
            line: 8,
            column: 31
          }
        },
        loc: {
          start: {
            line: 8,
            column: 50
          },
          end: {
            line: 19,
            column: 3
          }
        },
        line: 8
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 24,
            column: 31
          },
          end: {
            line: 24,
            column: 32
          }
        },
        loc: {
          start: {
            line: 24,
            column: 51
          },
          end: {
            line: 32,
            column: 3
          }
        },
        line: 24
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 37,
            column: 33
          },
          end: {
            line: 37,
            column: 34
          }
        },
        loc: {
          start: {
            line: 37,
            column: 53
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 37
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 52,
            column: 35
          },
          end: {
            line: 52,
            column: 36
          }
        },
        loc: {
          start: {
            line: 52,
            column: 55
          },
          end: {
            line: 60,
            column: 3
          }
        },
        line: 52
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 65,
            column: 38
          },
          end: {
            line: 65,
            column: 39
          }
        },
        loc: {
          start: {
            line: 65,
            column: 58
          },
          end: {
            line: 75,
            column: 3
          }
        },
        line: 65
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 80,
            column: 39
          },
          end: {
            line: 80,
            column: 40
          }
        },
        loc: {
          start: {
            line: 80,
            column: 59
          },
          end: {
            line: 89,
            column: 3
          }
        },
        line: 80
      },
      "6": {
        name: "(anonymous_6)",
        decl: {
          start: {
            line: 94,
            column: 39
          },
          end: {
            line: 94,
            column: 40
          }
        },
        loc: {
          start: {
            line: 94,
            column: 59
          },
          end: {
            line: 102,
            column: 3
          }
        },
        line: 94
      },
      "7": {
        name: "(anonymous_7)",
        decl: {
          start: {
            line: 107,
            column: 38
          },
          end: {
            line: 107,
            column: 39
          }
        },
        loc: {
          start: {
            line: 107,
            column: 58
          },
          end: {
            line: 115,
            column: 3
          }
        },
        line: 107
      },
      "8": {
        name: "(anonymous_8)",
        decl: {
          start: {
            line: 120,
            column: 36
          },
          end: {
            line: 120,
            column: 37
          }
        },
        loc: {
          start: {
            line: 120,
            column: 56
          },
          end: {
            line: 133,
            column: 3
          }
        },
        line: 120
      },
      "9": {
        name: "(anonymous_9)",
        decl: {
          start: {
            line: 138,
            column: 33
          },
          end: {
            line: 138,
            column: 34
          }
        },
        loc: {
          start: {
            line: 138,
            column: 53
          },
          end: {
            line: 151,
            column: 3
          }
        },
        line: 138
      },
      "10": {
        name: "(anonymous_10)",
        decl: {
          start: {
            line: 156,
            column: 32
          },
          end: {
            line: 156,
            column: 33
          }
        },
        loc: {
          start: {
            line: 156,
            column: 52
          },
          end: {
            line: 165,
            column: 3
          }
        },
        line: 156
      },
      "11": {
        name: "(anonymous_11)",
        decl: {
          start: {
            line: 170,
            column: 35
          },
          end: {
            line: 170,
            column: 36
          }
        },
        loc: {
          start: {
            line: 170,
            column: 55
          },
          end: {
            line: 181,
            column: 3
          }
        },
        line: 170
      },
      "12": {
        name: "(anonymous_12)",
        decl: {
          start: {
            line: 186,
            column: 41
          },
          end: {
            line: 186,
            column: 42
          }
        },
        loc: {
          start: {
            line: 186,
            column: 61
          },
          end: {
            line: 197,
            column: 3
          }
        },
        line: 186
      },
      "13": {
        name: "(anonymous_13)",
        decl: {
          start: {
            line: 202,
            column: 35
          },
          end: {
            line: 202,
            column: 36
          }
        },
        loc: {
          start: {
            line: 202,
            column: 55
          },
          end: {
            line: 211,
            column: 3
          }
        },
        line: 202
      },
      "14": {
        name: "(anonymous_14)",
        decl: {
          start: {
            line: 216,
            column: 37
          },
          end: {
            line: 216,
            column: 38
          }
        },
        loc: {
          start: {
            line: 216,
            column: 57
          },
          end: {
            line: 226,
            column: 3
          }
        },
        line: 216
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 139,
            column: 12
          },
          end: {
            line: 139,
            column: 20
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 139,
            column: 19
          },
          end: {
            line: 139,
            column: 20
          }
        }],
        line: 139
      },
      "1": {
        loc: {
          start: {
            line: 139,
            column: 22
          },
          end: {
            line: 139,
            column: 32
          }
        },
        type: "default-arg",
        locations: [{
          start: {
            line: 139,
            column: 30
          },
          end: {
            line: 139,
            column: 32
          }
        }],
        line: 139
      },
      "2": {
        loc: {
          start: {
            line: 147,
            column: 17
          },
          end: {
            line: 147,
            column: 75
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 147,
            column: 43
          },
          end: {
            line: 147,
            column: 63
          }
        }, {
          start: {
            line: 147,
            column: 66
          },
          end: {
            line: 147,
            column: 75
          }
        }],
        line: 147
      },
      "3": {
        loc: {
          start: {
            line: 194,
            column: 26
          },
          end: {
            line: 194,
            column: 62
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 194,
            column: 38
          },
          end: {
            line: 194,
            column: 47
          }
        }, {
          start: {
            line: 194,
            column: 50
          },
          end: {
            line: 194,
            column: 62
          }
        }],
        line: 194
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0,
      "61": 0,
      "62": 0,
      "63": 0,
      "64": 0,
      "65": 0,
      "66": 0,
      "67": 0,
      "68": 0,
      "69": 0,
      "70": 0,
      "71": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0
    },
    b: {
      "0": [0],
      "1": [0],
      "2": [0, 0],
      "3": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "930119ce2869fdb915715df2363519d364dc3fa4"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1mpt27bv9w = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1mpt27bv9w();
const AuthService =
/* istanbul ignore next */
(cov_1mpt27bv9w().s[0]++, require('../services/AuthService'));
const asyncHandler =
/* istanbul ignore next */
(cov_1mpt27bv9w().s[1]++, require('express-async-handler'));
class AuthController {
  // @desc    Login de usuário
  // @route   POST /api/auth/login
  // @access  Public
  static login =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[2]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[0]++;
    const {
      email,
      password
    } =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[3]++, req.body);
    const result =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[4]++, await AuthService.login(email, password));
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[5]++;
    res.json({
      message: 'Login realizado com sucesso',
      user: result.user,
      token: result.token,
      expires_in: result.expires_in
    });
  }));

  // @desc    Logout de usuário
  // @route   POST /api/auth/logout
  // @access  Private
  static logout =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[6]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[1]++;
    const token =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[7]++, req.headers.authorization?.replace('Bearer ', ''));
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[8]++;
    await AuthService.logout(token);
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[9]++;
    res.json({
      message: 'Logout realizado com sucesso'
    });
  }));

  // @desc    Registrar novo usuário
  // @route   POST /api/auth/register
  // @access  Private (Admin only)
  static register =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[10]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[2]++;
    const userData =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[11]++, req.body);
    const adminUser =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[12]++, req.user);
    const result =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[13]++, await AuthService.register(userData, adminUser));
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[14]++;
    res.status(201).json({
      message: 'Usuário criado com sucesso',
      user: result.user
    });
  }));

  // @desc    Obter perfil do usuário atual
  // @route   GET /api/auth/profile
  // @access  Private
  static getProfile =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[15]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[3]++;
    const userId =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[16]++, req.user.id);
    const profile =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[17]++, await AuthService.getProfile(userId));
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[18]++;
    res.json({
      user: profile
    });
  }));

  // @desc    Atualizar perfil do usuário
  // @route   PUT /api/auth/profile
  // @access  Private
  static updateProfile =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[19]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[4]++;
    const userId =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[20]++, req.user.id);
    const updateData =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[21]++, req.body);
    const updatedProfile =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[22]++, await AuthService.updateProfile(userId, updateData));
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[23]++;
    res.json({
      message: 'Perfil atualizado com sucesso',
      user: updatedProfile
    });
  }));

  // @desc    Alterar senha
  // @route   PUT /api/auth/change-password
  // @access  Private
  static changePassword =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[24]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[5]++;
    const userId =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[25]++, req.user.id);
    const {
      currentPassword,
      newPassword
    } =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[26]++, req.body);
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[27]++;
    await AuthService.changePassword(userId, currentPassword, newPassword);
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[28]++;
    res.json({
      message: 'Senha alterada com sucesso'
    });
  }));

  // @desc    Solicitar reset de senha
  // @route   POST /api/auth/forgot-password
  // @access  Public
  static forgotPassword =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[29]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[6]++;
    const {
      email
    } =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[30]++, req.body);
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[31]++;
    await AuthService.forgotPassword(email);
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[32]++;
    res.json({
      message: 'Se o email existir, você receberá instruções para redefinir sua senha'
    });
  }));

  // @desc    Reset de senha
  // @route   POST /api/auth/reset-password
  // @access  Public
  static resetPassword =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[33]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[7]++;
    const {
      token,
      newPassword
    } =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[34]++, req.body);
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[35]++;
    await AuthService.resetPassword(token, newPassword);
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[36]++;
    res.json({
      message: 'Senha redefinida com sucesso'
    });
  }));

  // @desc    Verificar token
  // @route   GET /api/auth/verify
  // @access  Private
  static verifyToken =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[37]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[8]++;
    const user =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[38]++, req.user);
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[39]++;
    res.json({
      valid: true,
      user: {
        id: user.id,
        email: user.email,
        name: user.name,
        role: user.role,
        branch_id: user.branch_id
      }
    });
  }));

  // @desc    Listar usuários
  // @route   GET /api/auth/users
  // @access  Private (Admin only)
  static getUsers =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[40]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[9]++;
    const {
      page =
      /* istanbul ignore next */
      (cov_1mpt27bv9w().b[0][0]++, 1),
      limit =
      /* istanbul ignore next */
      (cov_1mpt27bv9w().b[1][0]++, 10),
      search,
      role,
      is_active
    } =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[41]++, req.query);
    const adminUser =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[42]++, req.user);
    const result =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[43]++, await AuthService.getUsers({
      page: parseInt(page),
      limit: parseInt(limit),
      search,
      role,
      is_active: is_active !== undefined ?
      /* istanbul ignore next */
      (cov_1mpt27bv9w().b[2][0]++, is_active === 'true') :
      /* istanbul ignore next */
      (cov_1mpt27bv9w().b[2][1]++, undefined)
    }, adminUser));
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[44]++;
    res.json(result);
  }));

  // @desc    Obter usuário por ID
  // @route   GET /api/auth/users/:id
  // @access  Private (Admin only)
  static getUser =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[45]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[10]++;
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[46]++, req.params);
    const adminUser =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[47]++, req.user);
    const user =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[48]++, await AuthService.getUserById(id, adminUser));
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[49]++;
    res.json({
      user
    });
  }));

  // @desc    Atualizar usuário
  // @route   PUT /api/auth/users/:id
  // @access  Private (Admin only)
  static updateUser =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[50]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[11]++;
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[51]++, req.params);
    const updateData =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[52]++, req.body);
    const adminUser =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[53]++, req.user);
    const updatedUser =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[54]++, await AuthService.updateUser(id, updateData, adminUser));
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[55]++;
    res.json({
      message: 'Usuário atualizado com sucesso',
      user: updatedUser
    });
  }));

  // @desc    Ativar/Desativar usuário
  // @route   PATCH /api/auth/users/:id/status
  // @access  Private (Admin only)
  static updateUserStatus =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[56]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[12]++;
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[57]++, req.params);
    const {
      is_active
    } =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[58]++, req.body);
    const adminUser =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[59]++, req.user);
    const updatedUser =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[60]++, await AuthService.updateUserStatus(id, is_active, adminUser));
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[61]++;
    res.json({
      message: `Usuário ${is_active ?
      /* istanbul ignore next */
      (cov_1mpt27bv9w().b[3][0]++, 'ativado') :
      /* istanbul ignore next */
      (cov_1mpt27bv9w().b[3][1]++, 'desativado')} com sucesso`,
      user: updatedUser
    });
  }));

  // @desc    Deletar usuário
  // @route   DELETE /api/auth/users/:id
  // @access  Private (Admin only)
  static deleteUser =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[62]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[13]++;
    const {
      id
    } =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[63]++, req.params);
    const adminUser =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[64]++, req.user);
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[65]++;
    await AuthService.deleteUser(id, adminUser);
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[66]++;
    res.json({
      message: 'Usuário deletado com sucesso'
    });
  }));

  // @desc    Refresh token
  // @route   POST /api/auth/refresh
  // @access  Public
  static refreshToken =
  /* istanbul ignore next */
  (cov_1mpt27bv9w().s[67]++, asyncHandler(async (req, res) => {
    /* istanbul ignore next */
    cov_1mpt27bv9w().f[14]++;
    const {
      refresh_token
    } =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[68]++, req.body);
    const result =
    /* istanbul ignore next */
    (cov_1mpt27bv9w().s[69]++, await AuthService.refreshToken(refresh_token));
    /* istanbul ignore next */
    cov_1mpt27bv9w().s[70]++;
    res.json({
      message: 'Token renovado com sucesso',
      token: result.token,
      expires_in: result.expires_in
    });
  }));
}
/* istanbul ignore next */
cov_1mpt27bv9w().s[71]++;
module.exports = AuthController;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,