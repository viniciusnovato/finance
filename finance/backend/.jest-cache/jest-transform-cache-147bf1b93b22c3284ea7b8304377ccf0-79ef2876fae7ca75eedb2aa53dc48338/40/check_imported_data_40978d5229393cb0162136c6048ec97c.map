{"version":3,"names":["cov_2j4y0a8dto","actualCoverage","s","require","config","createClient","supabase","process","env","SUPABASE_URL","SUPABASE_ANON_KEY","checkData","f","data","error","from","select","order","ascending","limit","b","console","log","forEach","client","i","first_name","last_name","email","tax_id","country","status","notes","substring","length","message"],"sources":["check_imported_data.js"],"sourcesContent":["require('dotenv').config();\nconst { createClient } = require('@supabase/supabase-js');\n\nconst supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_ANON_KEY);\n\nasync function checkData() {\n  try {\n    const { data, error } = await supabase\n      .from('clients')\n      .select('*')\n      .order('created_at', { ascending: false })\n      .limit(10);\n    \n    if (error) {\n      console.error('‚ùå Erro:', error);\n      return;\n    }\n    \n    console.log('\\nüìä √öltimos registros importados:');\n    console.log('==================================================');\n    \n    data.forEach((client, i) => {\n      console.log(`${i+1}. ${client.first_name} ${client.last_name}`);\n      console.log(`   Email: ${client.email}`);\n      console.log(`   Tax ID: ${client.tax_id}`);\n      console.log(`   Country: ${client.country}`);\n      console.log(`   Status: ${client.status}`);\n      if (client.notes) {\n        console.log(`   Notes: ${client.notes.substring(0, 100)}...`);\n      }\n      console.log('');\n    });\n    \n    console.log(`\\nüìà Total de registros encontrados: ${data.length}`);\n    \n  } catch (error) {\n    console.error('‚ùå Erro ao verificar dados:', error.message);\n  }\n}\n\ncheckData();"],"mappings":"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","ignoreList":[]}