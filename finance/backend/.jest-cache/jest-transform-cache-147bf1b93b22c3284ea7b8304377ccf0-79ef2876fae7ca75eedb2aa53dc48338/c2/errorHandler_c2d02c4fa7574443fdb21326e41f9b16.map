{"version":3,"names":["cov_1ewz50uyj3","actualCoverage","HttpStatusCodes","ErrorCodes","s","require","ResponseHelper","ErrorHandler","handleValidationError","res","errors","message","b","f","console","error","errorDetails","Array","isArray","sendValidationError","handleDatabaseError","operation","name","sendConflict","validationErrors","map","err","sendInternalError","handleAuthenticationError","sendUnauthorized","handleAuthorizationError","sendForbidden","handleNotFoundError","resource","sendNotFound","handleConflictError","handleRateLimitError","tooManyRequests","handleFileError","code","validationError","internalServerError","handleNetworkError","service","serviceUnavailable","requestTimeout","badGateway","handleGenericError","context","expressErrorHandler","req","next","stack","url","method","body","params","query","headersSent","createError","statusCode","INTERNAL_SERVER_ERROR","INTERNAL_ERROR","Error","isOperationalError","operationalErrors","includes","logError","errorLog","timestamp","Date","toISOString","operational","JSON","stringify","module","exports"],"sources":["errorHandler.js"],"sourcesContent":["const { HttpStatusCodes, ErrorCodes } = require('./constants');\nconst { ResponseHelper } = require('./responseHelper');\n\n/**\n * Classe para tratamento centralizado de erros\n * Padroniza respostas de erro e logging\n */\nclass ErrorHandler {\n  /**\n   * Trata erros de validação\n   * @param {Response} res - Objeto de resposta Express\n   * @param {string|Array} errors - Erros de validação\n   * @param {string} message - Mensagem personalizada\n   */\n  static handleValidationError(res, errors, message = 'Dados inválidos') {\n    console.error('Validation Error:', errors);\n    \n    const errorDetails = Array.isArray(errors) ? errors : [errors];\n    \n    return ResponseHelper.sendValidationError(res, errorDetails);\n  }\n\n  /**\n   * Trata erros de banco de dados\n   * @param {Response} res - Objeto de resposta Express\n   * @param {Error} error - Erro do banco de dados\n   * @param {string} operation - Operação que causou o erro\n   */\n  static handleDatabaseError(res, error, operation = 'operação de banco') {\n    console.error(`Database Error during ${operation}:`, error);\n    \n    // Erros específicos do Sequelize/Prisma\n    if (error.name === 'SequelizeUniqueConstraintError') {\n      return ResponseHelper.sendConflict(res, 'Registro já existe');\n    }\n    \n    if (error.name === 'SequelizeForeignKeyConstraintError') {\n      return ResponseHelper.sendValidationError(res, ['Referência inválida']);\n    }\n    \n    if (error.name === 'SequelizeValidationError') {\n      const validationErrors = error.errors.map(err => err.message);\n      return ErrorHandler.handleValidationError(res, validationErrors);\n    }\n    \n    // Erro genérico de banco\n    return ResponseHelper.sendInternalError(res, 'Erro interno do servidor');\n  }\n\n  /**\n   * Trata erros de autenticação\n   * @param {Response} res - Objeto de resposta Express\n   * @param {string} message - Mensagem de erro\n   */\n  static handleAuthenticationError(res, message = 'Credenciais inválidas') {\n    console.error('Authentication Error:', message);\n    return ResponseHelper.sendUnauthorized(res, message);\n  }\n\n  /**\n   * Trata erros de autorização\n   * @param {Response} res - Objeto de resposta Express\n   * @param {string} message - Mensagem de erro\n   */\n  static handleAuthorizationError(res, message = 'Acesso negado') {\n    console.error('Authorization Error:', message);\n    return ResponseHelper.sendForbidden(res, message);\n  }\n\n  /**\n   * Trata erros de recurso não encontrado\n   * @param {Response} res - Objeto de resposta Express\n   * @param {string} resource - Nome do recurso\n   */\n  static handleNotFoundError(res, resource = 'Recurso') {\n    console.error(`Not Found Error: ${resource}`);\n    return ResponseHelper.sendNotFound(res, resource);\n  }\n\n  /**\n   * Trata erros de conflito\n   * @param {Response} res - Objeto de resposta Express\n   * @param {string} message - Mensagem de erro\n   */\n  static handleConflictError(res, message = 'Conflito de dados') {\n    console.error('Conflict Error:', message);\n    return ResponseHelper.sendConflict(res, message);\n  }\n\n  /**\n   * Trata erros de rate limiting\n   * @param {Response} res - Objeto de resposta Express\n   * @param {string} message - Mensagem de erro\n   */\n  static handleRateLimitError(res, message = 'Muitas tentativas. Tente novamente mais tarde') {\n    console.error('Rate Limit Error:', message);\n    return ResponseHelper.tooManyRequests(res, message);\n  }\n\n  /**\n   * Trata erros de arquivo/upload\n   * @param {Response} res - Objeto de resposta Express\n   * @param {Error} error - Erro de arquivo\n   */\n  static handleFileError(res, error) {\n    console.error('File Error:', error);\n    \n    if (error.code === 'LIMIT_FILE_SIZE') {\n      return ResponseHelper.validationError(res, 'Arquivo muito grande');\n    }\n    \n    if (error.code === 'LIMIT_FILE_COUNT') {\n      return ResponseHelper.validationError(res, 'Muitos arquivos');\n    }\n    \n    if (error.code === 'LIMIT_UNEXPECTED_FILE') {\n      return ResponseHelper.validationError(res, 'Tipo de arquivo não permitido');\n    }\n    \n    return ResponseHelper.internalServerError(res, 'Erro no processamento do arquivo');\n  }\n\n  /**\n   * Trata erros de rede/API externa\n   * @param {Response} res - Objeto de resposta Express\n   * @param {Error} error - Erro de rede\n   * @param {string} service - Nome do serviço externo\n   */\n  static handleNetworkError(res, error, service = 'serviço externo') {\n    console.error(`Network Error with ${service}:`, error);\n    \n    if (error.code === 'ECONNREFUSED' || error.code === 'ENOTFOUND') {\n      return ResponseHelper.serviceUnavailable(res, `${service} indisponível`);\n    }\n    \n    if (error.code === 'ETIMEDOUT') {\n      return ResponseHelper.requestTimeout(res, `Timeout ao conectar com ${service}`);\n    }\n    \n    return ResponseHelper.badGateway(res, `Erro de comunicação com ${service}`);\n  }\n\n  /**\n   * Trata erros genéricos\n   * @param {Response} res - Objeto de resposta Express\n   * @param {Error} error - Erro genérico\n   * @param {string} context - Contexto do erro\n   */\n  static handleGenericError(res, error, context = 'operação') {\n    console.error(`Generic Error during ${context}:`, error);\n    \n    // Se for um erro conhecido, trata especificamente\n    if (error.name === 'ValidationError') {\n      return ErrorHandler.handleValidationError(res, [error.message]);\n    }\n    \n    if (error.name === 'CastError') {\n      return ResponseHelper.sendValidationError(res, ['Formato de dados inválido']);\n    }\n    \n    if (error.name === 'JsonWebTokenError') {\n      return ErrorHandler.handleAuthenticationError(res, 'Token inválido');\n    }\n    \n    if (error.name === 'TokenExpiredError') {\n      return ErrorHandler.handleAuthenticationError(res, 'Token expirado');\n    }\n    \n    // Erro genérico\n    return ResponseHelper.sendInternalError(res, 'Erro interno do servidor');\n  }\n\n  /**\n   * Middleware de tratamento de erros para Express\n   * @param {Error} error - Erro capturado\n   * @param {Request} req - Objeto de requisição Express\n   * @param {Response} res - Objeto de resposta Express\n   * @param {Function} next - Próximo middleware\n   */\n  static expressErrorHandler(error, req, res, next) {\n    // Log do erro completo para debugging\n    console.error('Express Error Handler:', {\n      error: error.message,\n      stack: error.stack,\n      url: req.url,\n      method: req.method,\n      body: req.body,\n      params: req.params,\n      query: req.query\n    });\n\n    // Se a resposta já foi enviada, passa para o próximo handler\n    if (res.headersSent) {\n      return next(error);\n    }\n\n    // Trata o erro baseado no tipo\n    return ErrorHandler.handleGenericError(res, error, `${req.method} ${req.url}`);\n  }\n\n  /**\n   * Cria um erro customizado\n   * @param {string} message - Mensagem do erro\n   * @param {number} statusCode - Código de status HTTP\n   * @param {string} code - Código interno do erro\n   * @returns {Error} Erro customizado\n   */\n  static createError(message, statusCode = HttpStatusCodes.INTERNAL_SERVER_ERROR, code = ErrorCodes.INTERNAL_ERROR) {\n    const error = new Error(message);\n    error.statusCode = statusCode;\n    error.code = code;\n    return error;\n  }\n\n  /**\n   * Valida se um erro é operacional (esperado)\n   * @param {Error} error - Erro a ser validado\n   * @returns {boolean} True se for erro operacional\n   */\n  static isOperationalError(error) {\n    if (error.statusCode) {\n      return error.statusCode >= 400 && error.statusCode < 500;\n    }\n    \n    const operationalErrors = [\n      'ValidationError',\n      'CastError',\n      'JsonWebTokenError',\n      'TokenExpiredError',\n      'SequelizeValidationError',\n      'SequelizeUniqueConstraintError'\n    ];\n    \n    return operationalErrors.includes(error.name);\n  }\n\n  /**\n   * Log estruturado de erro\n   * @param {Error} error - Erro a ser logado\n   * @param {Object} context - Contexto adicional\n   */\n  static logError(error, context = {}) {\n    const errorLog = {\n      timestamp: new Date().toISOString(),\n      message: error.message,\n      stack: error.stack,\n      name: error.name,\n      statusCode: error.statusCode,\n      code: error.code,\n      operational: ErrorHandler.isOperationalError(error),\n      context\n    };\n    \n    console.error('Structured Error Log:', JSON.stringify(errorLog, null, 2));\n  }\n}\n\nmodule.exports = { ErrorHandler };"],"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","ignoreList":[]}