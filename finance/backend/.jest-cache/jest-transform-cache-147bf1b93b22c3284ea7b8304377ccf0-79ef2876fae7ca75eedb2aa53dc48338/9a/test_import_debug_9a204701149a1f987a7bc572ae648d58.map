{"version":3,"names":["cov_2oxgd0ic4w","actualCoverage","s","require","config","createClient","fs","csv","path","supabase","process","env","SUPABASE_URL","SUPABASE_SERVICE_ROLE_KEY","auth","autoRefreshToken","persistSession","CSV_DIR","testImportClients","f","console","log","count","success","errors","clientsFile","join","Promise","resolve","createReadStream","pipe","on","row","b","JSON","stringify","email","uniqueEmail","substring","id","split","clientData","first_name","last_name","phone","mobile","tax_id","birth_date","address","city","postal_code","country","notes","data","error","from","insert","select","catch"],"sources":["test_import_debug.js"],"sourcesContent":["require('dotenv').config();\nconst { createClient } = require('@supabase/supabase-js');\nconst fs = require('fs');\nconst csv = require('csv-parser');\nconst path = require('path');\n\n// Usar service_role key para ter permiss√µes administrativas\nconst supabase = createClient(\n  process.env.SUPABASE_URL, \n  process.env.SUPABASE_SERVICE_ROLE_KEY,\n  {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false\n    }\n  }\n);\n\nconst CSV_DIR = '/Users/insitutoareluna/Documents/finance/importBD';\n\nasync function testImportClients() {\n  console.log('üîç TESTE DE IMPORTA√á√ÉO DE CLIENTES');\n  console.log('==================================================');\n  \n  let count = 0;\n  let success = 0;\n  let errors = 0;\n  \n  const clientsFile = path.join(CSV_DIR, 'clients.csv');\n  \n  return new Promise((resolve) => {\n    fs.createReadStream(clientsFile)\n      .pipe(csv())\n      .on('data', async (row) => {\n        count++;\n        \n        // Processar apenas os primeiros 20 registros para debug\n        if (count > 20) return;\n        \n        console.log(`\\nüìã Processando cliente ${count}:`);\n        console.log('Raw data:', JSON.stringify(row, null, 2));\n        \n        try {\n          // Preparar dados √∫nicos\n          const email = row.email || `cliente${count}@example.com`;\n          const uniqueEmail = `${email.substring(0, 40)}_${row.id?.substring(0, 8) || count}@${email.split('@')[1] || 'example.com'}`.substring(0, 100);\n          \n          const clientData = {\n            first_name: row.first_name?.substring(0, 255) || 'Nome',\n            last_name: row.last_name?.substring(0, 255) || 'Sobrenome',\n            email: uniqueEmail,\n            phone: row.phone?.substring(0, 50) || null,\n            mobile: row.mobile?.substring(0, 50) || null,\n            tax_id: row.tax_id?.substring(0, 50) || null,\n            birth_date: row.birth_date || null,\n            address: row.address || null,\n            city: row.city?.substring(0, 100) || null,\n            postal_code: row.postal_code?.substring(0, 20) || null,\n            country: row.country?.substring(0, 100) || 'Portugal',\n            notes: row.notes || null\n          };\n          \n          console.log('Prepared data:', JSON.stringify(clientData, null, 2));\n          \n          const { data, error } = await supabase\n            .from('clients')\n            .insert([clientData])\n            .select();\n          \n          if (error) {\n            console.error(`‚ùå Erro ao inserir cliente ${count}:`, error);\n            errors++;\n          } else {\n            console.log(`‚úÖ Cliente ${count} inserido com sucesso:`, data);\n            success++;\n          }\n        } catch (error) {\n          console.error(`‚ùå Erro ao processar cliente ${count}:`, error);\n          errors++;\n        }\n      })\n      .on('end', () => {\n        console.log('\\nüìä RESUMO:');\n        console.log(`Total processados: ${count}`);\n        console.log(`Sucessos: ${success}`);\n        console.log(`Erros: ${errors}`);\n        resolve({ count, success, errors });\n      })\n      .on('error', (error) => {\n        console.error('‚ùå Erro ao ler CSV:', error);\n        resolve({ count, success, errors });\n      });\n  });\n}\n\ntestImportClients().catch(console.error);"],"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","ignoreList":[]}