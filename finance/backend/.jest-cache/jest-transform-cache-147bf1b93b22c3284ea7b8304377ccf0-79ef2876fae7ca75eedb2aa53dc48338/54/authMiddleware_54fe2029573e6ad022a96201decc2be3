ea55a443e3c3cd222fad4aa9570be36a
/* istanbul ignore next */
function cov_1b6vpqw0b() {
  var path = "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/middleware/authMiddleware.js";
  var hash = "f04034c1966d10c7258eed464ea455016a6b87a0";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/middleware/authMiddleware.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 12
        },
        end: {
          line: 1,
          column: 35
        }
      },
      "1": {
        start: {
          line: 2,
          column: 36
        },
        end: {
          line: 2,
          column: 65
        }
      },
      "2": {
        start: {
          line: 5,
          column: 26
        },
        end: {
          line: 74,
          column: 1
        }
      },
      "3": {
        start: {
          line: 6,
          column: 2
        },
        end: {
          line: 73,
          column: 3
        }
      },
      "4": {
        start: {
          line: 8,
          column: 4
        },
        end: {
          line: 15,
          column: 5
        }
      },
      "5": {
        start: {
          line: 9,
          column: 6
        },
        end: {
          line: 13,
          column: 8
        }
      },
      "6": {
        start: {
          line: 14,
          column: 6
        },
        end: {
          line: 14,
          column: 20
        }
      },
      "7": {
        start: {
          line: 17,
          column: 23
        },
        end: {
          line: 17,
          column: 51
        }
      },
      "8": {
        start: {
          line: 18,
          column: 18
        },
        end: {
          line: 18,
          column: 56
        }
      },
      "9": {
        start: {
          line: 20,
          column: 4
        },
        end: {
          line: 25,
          column: 5
        }
      },
      "10": {
        start: {
          line: 21,
          column: 6
        },
        end: {
          line: 24,
          column: 9
        }
      },
      "11": {
        start: {
          line: 28,
          column: 38
        },
        end: {
          line: 28,
          column: 72
        }
      },
      "12": {
        start: {
          line: 30,
          column: 4
        },
        end: {
          line: 36,
          column: 5
        }
      },
      "13": {
        start: {
          line: 31,
          column: 6
        },
        end: {
          line: 31,
          column: 58
        }
      },
      "14": {
        start: {
          line: 32,
          column: 6
        },
        end: {
          line: 35,
          column: 9
        }
      },
      "15": {
        start: {
          line: 38,
          column: 4
        },
        end: {
          line: 38,
          column: 58
        }
      },
      "16": {
        start: {
          line: 41,
          column: 49
        },
        end: {
          line: 45,
          column: 15
        }
      },
      "17": {
        start: {
          line: 47,
          column: 4
        },
        end: {
          line: 47,
          column: 78
        }
      },
      "18": {
        start: {
          line: 49,
          column: 4
        },
        end: {
          line: 54,
          column: 5
        }
      },
      "19": {
        start: {
          line: 50,
          column: 6
        },
        end: {
          line: 53,
          column: 9
        }
      },
      "20": {
        start: {
          line: 64,
          column: 4
        },
        end: {
          line: 64,
          column: 24
        }
      },
      "21": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 28
        }
      },
      "22": {
        start: {
          line: 66,
          column: 4
        },
        end: {
          line: 66,
          column: 11
        }
      },
      "23": {
        start: {
          line: 68,
          column: 4
        },
        end: {
          line: 68,
          column: 50
        }
      },
      "24": {
        start: {
          line: 69,
          column: 4
        },
        end: {
          line: 72,
          column: 7
        }
      },
      "25": {
        start: {
          line: 77,
          column: 20
        },
        end: {
          line: 99,
          column: 1
        }
      },
      "26": {
        start: {
          line: 78,
          column: 2
        },
        end: {
          line: 98,
          column: 4
        }
      },
      "27": {
        start: {
          line: 79,
          column: 4
        },
        end: {
          line: 84,
          column: 5
        }
      },
      "28": {
        start: {
          line: 80,
          column: 6
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "29": {
        start: {
          line: 86,
          column: 22
        },
        end: {
          line: 86,
          column: 60
        }
      },
      "30": {
        start: {
          line: 88,
          column: 4
        },
        end: {
          line: 95,
          column: 5
        }
      },
      "31": {
        start: {
          line: 89,
          column: 6
        },
        end: {
          line: 94,
          column: 9
        }
      },
      "32": {
        start: {
          line: 97,
          column: 4
        },
        end: {
          line: 97,
          column: 11
        }
      },
      "33": {
        start: {
          line: 105,
          column: 28
        },
        end: {
          line: 137,
          column: 1
        }
      },
      "34": {
        start: {
          line: 106,
          column: 2
        },
        end: {
          line: 136,
          column: 3
        }
      },
      "35": {
        start: {
          line: 107,
          column: 21
        },
        end: {
          line: 107,
          column: 62
        }
      },
      "36": {
        start: {
          line: 109,
          column: 4
        },
        end: {
          line: 111,
          column: 5
        }
      },
      "37": {
        start: {
          line: 110,
          column: 6
        },
        end: {
          line: 110,
          column: 20
        }
      },
      "38": {
        start: {
          line: 114,
          column: 4
        },
        end: {
          line: 116,
          column: 5
        }
      },
      "39": {
        start: {
          line: 115,
          column: 6
        },
        end: {
          line: 115,
          column: 20
        }
      },
      "40": {
        start: {
          line: 119,
          column: 4
        },
        end: {
          line: 124,
          column: 5
        }
      },
      "41": {
        start: {
          line: 120,
          column: 6
        },
        end: {
          line: 123,
          column: 9
        }
      },
      "42": {
        start: {
          line: 129,
          column: 4
        },
        end: {
          line: 129,
          column: 11
        }
      },
      "43": {
        start: {
          line: 131,
          column: 4
        },
        end: {
          line: 131,
          column: 70
        }
      },
      "44": {
        start: {
          line: 132,
          column: 4
        },
        end: {
          line: 135,
          column: 7
        }
      },
      "45": {
        start: {
          line: 139,
          column: 0
        },
        end: {
          line: 144,
          column: 2
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 5,
            column: 26
          },
          end: {
            line: 5,
            column: 27
          }
        },
        loc: {
          start: {
            line: 5,
            column: 52
          },
          end: {
            line: 74,
            column: 1
          }
        },
        line: 5
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 77,
            column: 20
          },
          end: {
            line: 77,
            column: 21
          }
        },
        loc: {
          start: {
            line: 77,
            column: 31
          },
          end: {
            line: 99,
            column: 1
          }
        },
        line: 77
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 78,
            column: 9
          },
          end: {
            line: 78,
            column: 10
          }
        },
        loc: {
          start: {
            line: 78,
            column: 29
          },
          end: {
            line: 98,
            column: 3
          }
        },
        line: 78
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 105,
            column: 28
          },
          end: {
            line: 105,
            column: 29
          }
        },
        loc: {
          start: {
            line: 105,
            column: 54
          },
          end: {
            line: 137,
            column: 1
          }
        },
        line: 105
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 8,
            column: 4
          },
          end: {
            line: 15,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 8
      },
      "1": {
        loc: {
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 56
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 18
          },
          end: {
            line: 18,
            column: 28
          }
        }, {
          start: {
            line: 18,
            column: 32
          },
          end: {
            line: 18,
            column: 56
          }
        }],
        line: 18
      },
      "2": {
        loc: {
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 20,
            column: 4
          },
          end: {
            line: 25,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 20
      },
      "3": {
        loc: {
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 4
          },
          end: {
            line: 36,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 30
      },
      "4": {
        loc: {
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 22
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 30,
            column: 8
          },
          end: {
            line: 30,
            column: 13
          }
        }, {
          start: {
            line: 30,
            column: 17
          },
          end: {
            line: 30,
            column: 22
          }
        }],
        line: 30
      },
      "5": {
        loc: {
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 49,
            column: 4
          },
          end: {
            line: 54,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 49
      },
      "6": {
        loc: {
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 30
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 49,
            column: 8
          },
          end: {
            line: 49,
            column: 17
          }
        }, {
          start: {
            line: 49,
            column: 21
          },
          end: {
            line: 49,
            column: 30
          }
        }],
        line: 49
      },
      "7": {
        loc: {
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 4
          },
          end: {
            line: 84,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "8": {
        loc: {
          start: {
            line: 86,
            column: 22
          },
          end: {
            line: 86,
            column: 60
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 86,
            column: 45
          },
          end: {
            line: 86,
            column: 50
          }
        }, {
          start: {
            line: 86,
            column: 53
          },
          end: {
            line: 86,
            column: 60
          }
        }],
        line: 86
      },
      "9": {
        loc: {
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 88,
            column: 4
          },
          end: {
            line: 95,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 88
      },
      "10": {
        loc: {
          start: {
            line: 107,
            column: 21
          },
          end: {
            line: 107,
            column: 62
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 107,
            column: 21
          },
          end: {
            line: 107,
            column: 40
          }
        }, {
          start: {
            line: 107,
            column: 44
          },
          end: {
            line: 107,
            column: 62
          }
        }],
        line: 107
      },
      "11": {
        loc: {
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 109,
            column: 4
          },
          end: {
            line: 111,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 109
      },
      "12": {
        loc: {
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 114,
            column: 4
          },
          end: {
            line: 116,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 114
      },
      "13": {
        loc: {
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 119,
            column: 4
          },
          end: {
            line: 124,
            column: 5
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 119
      },
      "14": {
        loc: {
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 119,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 119,
            column: 8
          },
          end: {
            line: 119,
            column: 34
          }
        }, {
          start: {
            line: 119,
            column: 38
          },
          end: {
            line: 119,
            column: 69
          }
        }],
        line: 119
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0],
      "14": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "f04034c1966d10c7258eed464ea455016a6b87a0"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1b6vpqw0b = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1b6vpqw0b();
const jwt =
/* istanbul ignore next */
(cov_1b6vpqw0b().s[0]++, require('jsonwebtoken'));
const {
  supabase,
  supabaseAdmin
} =
/* istanbul ignore next */
(cov_1b6vpqw0b().s[1]++, require('../config/supabase'));

// Middleware para verificar token JWT
/* istanbul ignore next */
cov_1b6vpqw0b().s[2]++;
const authenticateToken = async (req, res, next) => {
  /* istanbul ignore next */
  cov_1b6vpqw0b().f[0]++;
  cov_1b6vpqw0b().s[3]++;
  try {
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[4]++;
    // Em desenvolvimento, bypass da autenticação
    if (process.env.NODE_ENV === 'development') {
      /* istanbul ignore next */
      cov_1b6vpqw0b().b[0][0]++;
      cov_1b6vpqw0b().s[5]++;
      req.user = {
        id: 'dev-user-id',
        email: 'dev@example.com',
        role: 'admin'
      };
      /* istanbul ignore next */
      cov_1b6vpqw0b().s[6]++;
      return next();
    } else
    /* istanbul ignore next */
    {
      cov_1b6vpqw0b().b[0][1]++;
    }
    const authHeader =
    /* istanbul ignore next */
    (cov_1b6vpqw0b().s[7]++, req.headers['authorization']);
    const token =
    /* istanbul ignore next */
    (cov_1b6vpqw0b().s[8]++,
    /* istanbul ignore next */
    (cov_1b6vpqw0b().b[1][0]++, authHeader) &&
    /* istanbul ignore next */
    (cov_1b6vpqw0b().b[1][1]++, authHeader.split(' ')[1])); // Bearer TOKEN
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[9]++;
    if (!token) {
      /* istanbul ignore next */
      cov_1b6vpqw0b().b[2][0]++;
      cov_1b6vpqw0b().s[10]++;
      return res.status(401).json({
        error: 'Token de acesso requerido',
        code: 'MISSING_TOKEN'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b6vpqw0b().b[2][1]++;
    }

    // Verificar token com Supabase
    const {
      data: {
        user
      },
      error
    } =
    /* istanbul ignore next */
    (cov_1b6vpqw0b().s[11]++, await supabase.auth.getUser(token));
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[12]++;
    if (
    /* istanbul ignore next */
    (cov_1b6vpqw0b().b[4][0]++, error) ||
    /* istanbul ignore next */
    (cov_1b6vpqw0b().b[4][1]++, !user)) {
      /* istanbul ignore next */
      cov_1b6vpqw0b().b[3][0]++;
      cov_1b6vpqw0b().s[13]++;
      console.log('Erro na verificação do token:', error);
      /* istanbul ignore next */
      cov_1b6vpqw0b().s[14]++;
      return res.status(401).json({
        error: 'Token inválido ou expirado',
        code: 'INVALID_TOKEN'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b6vpqw0b().b[3][1]++;
    }
    cov_1b6vpqw0b().s[15]++;
    console.log('Usuário do token:', user.id, user.email);

    // Buscar dados completos do usuário usando user_id
    const {
      data: userData,
      error: userError
    } =
    /* istanbul ignore next */
    (cov_1b6vpqw0b().s[16]++, await supabaseAdmin.from('user_profiles').select('*').eq('user_id', user.id).single());
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[17]++;
    console.log('Resultado da busca user_profiles:', {
      userData,
      userError
    });
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[18]++;
    if (
    /* istanbul ignore next */
    (cov_1b6vpqw0b().b[6][0]++, userError) ||
    /* istanbul ignore next */
    (cov_1b6vpqw0b().b[6][1]++, !userData)) {
      /* istanbul ignore next */
      cov_1b6vpqw0b().b[5][0]++;
      cov_1b6vpqw0b().s[19]++;
      return res.status(401).json({
        error: 'Usuário não encontrado no sistema',
        code: 'USER_NOT_FOUND'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b6vpqw0b().b[5][1]++;
    }

    // Comentado: campo is_active não existe na tabela user_profiles
    // if (!userData.is_active) {
    //   return res.status(401).json({ 
    //     error: 'Usuário inativo',
    //     code: 'USER_INACTIVE'
    //   });
    // }
    cov_1b6vpqw0b().s[20]++;
    req.user = userData;
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[21]++;
    req.supabaseUser = user;
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[22]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[23]++;
    console.error('Erro na autenticação:', error);
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[24]++;
    res.status(500).json({
      error: 'Erro interno do servidor',
      code: 'INTERNAL_ERROR'
    });
  }
};

// Middleware para verificar roles específicos
/* istanbul ignore next */
cov_1b6vpqw0b().s[25]++;
const requireRole = roles => {
  /* istanbul ignore next */
  cov_1b6vpqw0b().f[1]++;
  cov_1b6vpqw0b().s[26]++;
  return (req, res, next) => {
    /* istanbul ignore next */
    cov_1b6vpqw0b().f[2]++;
    cov_1b6vpqw0b().s[27]++;
    if (!req.user) {
      /* istanbul ignore next */
      cov_1b6vpqw0b().b[7][0]++;
      cov_1b6vpqw0b().s[28]++;
      return res.status(401).json({
        error: 'Usuário não autenticado',
        code: 'NOT_AUTHENTICATED'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b6vpqw0b().b[7][1]++;
    }
    const userRoles =
    /* istanbul ignore next */
    (cov_1b6vpqw0b().s[29]++, Array.isArray(roles) ?
    /* istanbul ignore next */
    (cov_1b6vpqw0b().b[8][0]++, roles) :
    /* istanbul ignore next */
    (cov_1b6vpqw0b().b[8][1]++, [roles]));
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[30]++;
    if (!userRoles.includes(req.user.role)) {
      /* istanbul ignore next */
      cov_1b6vpqw0b().b[9][0]++;
      cov_1b6vpqw0b().s[31]++;
      return res.status(403).json({
        error: 'Acesso negado. Permissões insuficientes.',
        code: 'INSUFFICIENT_PERMISSIONS',
        required: userRoles,
        current: req.user.role
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b6vpqw0b().b[9][1]++;
    }
    cov_1b6vpqw0b().s[32]++;
    next();
  };
};

// Middleware removido - tabela branches não existe mais
// const requireBranchAccess = ...

// Middleware para verificar se o usuário pode acessar dados de um cliente específico
/* istanbul ignore next */
cov_1b6vpqw0b().s[33]++;
const requireClientAccess = async (req, res, next) => {
  /* istanbul ignore next */
  cov_1b6vpqw0b().f[3]++;
  cov_1b6vpqw0b().s[34]++;
  try {
    const clientId =
    /* istanbul ignore next */
    (cov_1b6vpqw0b().s[35]++,
    /* istanbul ignore next */
    (cov_1b6vpqw0b().b[10][0]++, req.params.clientId) ||
    /* istanbul ignore next */
    (cov_1b6vpqw0b().b[10][1]++, req.body.client_id));
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[36]++;
    if (!clientId) {
      /* istanbul ignore next */
      cov_1b6vpqw0b().b[11][0]++;
      cov_1b6vpqw0b().s[37]++;
      return next(); // Se não há clientId, prosseguir
    } else
    /* istanbul ignore next */
    {
      cov_1b6vpqw0b().b[11][1]++;
    }

    // Admins e analistas podem acessar qualquer cliente
    cov_1b6vpqw0b().s[38]++;
    if (['admin', 'analyst'].includes(req.user.role)) {
      /* istanbul ignore next */
      cov_1b6vpqw0b().b[12][0]++;
      cov_1b6vpqw0b().s[39]++;
      return next();
    } else
    /* istanbul ignore next */
    {
      cov_1b6vpqw0b().b[12][1]++;
    }

    // Clientes só podem acessar seus próprios dados
    cov_1b6vpqw0b().s[40]++;
    if (
    /* istanbul ignore next */
    (cov_1b6vpqw0b().b[14][0]++, req.user.role === 'client') &&
    /* istanbul ignore next */
    (cov_1b6vpqw0b().b[14][1]++, req.user.client_id !== clientId)) {
      /* istanbul ignore next */
      cov_1b6vpqw0b().b[13][0]++;
      cov_1b6vpqw0b().s[41]++;
      return res.status(403).json({
        error: 'Acesso negado. Você só pode acessar seus próprios dados.',
        code: 'CLIENT_ACCESS_DENIED'
      });
    } else
    /* istanbul ignore next */
    {
      cov_1b6vpqw0b().b[13][1]++;
    }

    // Verificação de filial removida - tabela branches não existe mais
    // Recepção pode acessar todos os clientes
    cov_1b6vpqw0b().s[42]++;
    next();
  } catch (error) {
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[43]++;
    console.error('Erro na verificação de acesso ao cliente:', error);
    /* istanbul ignore next */
    cov_1b6vpqw0b().s[44]++;
    res.status(500).json({
      error: 'Erro interno do servidor',
      code: 'INTERNAL_ERROR'
    });
  }
};
/* istanbul ignore next */
cov_1b6vpqw0b().s[45]++;
module.exports = {
  authenticateToken,
  requireRole,
  // requireBranchAccess removido - tabela branches não existe mais
  requireClientAccess
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,