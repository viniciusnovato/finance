d409bf67325280bd85ba0ca4c1430f29
/* istanbul ignore next */
function cov_1u0f6kjzlj() {
  var path = "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/scripts/import_payments_test.js";
  var hash = "3aee1b75dc707a24a58c5366b12000f8f10f4377";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/insitutoareluna/Documents/repFinance/finance/backend/src/scripts/import_payments_test.js",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 0
        },
        end: {
          line: 1,
          column: 27
        }
      },
      "1": {
        start: {
          line: 2,
          column: 25
        },
        end: {
          line: 2,
          column: 57
        }
      },
      "2": {
        start: {
          line: 3,
          column: 11
        },
        end: {
          line: 3,
          column: 24
        }
      },
      "3": {
        start: {
          line: 4,
          column: 13
        },
        end: {
          line: 4,
          column: 28
        }
      },
      "4": {
        start: {
          line: 7,
          column: 17
        },
        end: {
          line: 16,
          column: 1
        }
      },
      "5": {
        start: {
          line: 19,
          column: 16
        },
        end: {
          line: 19,
          column: 66
        }
      },
      "6": {
        start: {
          line: 19,
          column: 54
        },
        end: {
          line: 19,
          column: 65
        }
      },
      "7": {
        start: {
          line: 20,
          column: 18
        },
        end: {
          line: 20,
          column: 37
        }
      },
      "8": {
        start: {
          line: 22,
          column: 2
        },
        end: {
          line: 47,
          column: 5
        }
      },
      "9": {
        start: {
          line: 23,
          column: 19
        },
        end: {
          line: 23,
          column: 21
        }
      },
      "10": {
        start: {
          line: 24,
          column: 18
        },
        end: {
          line: 24,
          column: 20
        }
      },
      "11": {
        start: {
          line: 25,
          column: 19
        },
        end: {
          line: 25,
          column: 24
        }
      },
      "12": {
        start: {
          line: 27,
          column: 4
        },
        end: {
          line: 38,
          column: 5
        }
      },
      "13": {
        start: {
          line: 27,
          column: 17
        },
        end: {
          line: 27,
          column: 18
        }
      },
      "14": {
        start: {
          line: 28,
          column: 19
        },
        end: {
          line: 28,
          column: 26
        }
      },
      "15": {
        start: {
          line: 30,
          column: 6
        },
        end: {
          line: 37,
          column: 7
        }
      },
      "16": {
        start: {
          line: 31,
          column: 8
        },
        end: {
          line: 31,
          column: 29
        }
      },
      "17": {
        start: {
          line: 32,
          column: 13
        },
        end: {
          line: 37,
          column: 7
        }
      },
      "18": {
        start: {
          line: 33,
          column: 8
        },
        end: {
          line: 33,
          column: 36
        }
      },
      "19": {
        start: {
          line: 34,
          column: 8
        },
        end: {
          line: 34,
          column: 21
        }
      },
      "20": {
        start: {
          line: 36,
          column: 8
        },
        end: {
          line: 36,
          column: 24
        }
      },
      "21": {
        start: {
          line: 39,
          column: 4
        },
        end: {
          line: 39,
          column: 32
        }
      },
      "22": {
        start: {
          line: 41,
          column: 16
        },
        end: {
          line: 41,
          column: 18
        }
      },
      "23": {
        start: {
          line: 42,
          column: 4
        },
        end: {
          line: 44,
          column: 7
        }
      },
      "24": {
        start: {
          line: 43,
          column: 6
        },
        end: {
          line: 43,
          column: 49
        }
      },
      "25": {
        start: {
          line: 46,
          column: 4
        },
        end: {
          line: 46,
          column: 15
        }
      },
      "26": {
        start: {
          line: 51,
          column: 2
        },
        end: {
          line: 51,
          column: 64
        }
      },
      "27": {
        start: {
          line: 52,
          column: 2
        },
        end: {
          line: 52,
          column: 68
        }
      },
      "28": {
        start: {
          line: 54,
          column: 2
        },
        end: {
          line: 134,
          column: 3
        }
      },
      "29": {
        start: {
          line: 56,
          column: 20
        },
        end: {
          line: 56,
          column: 74
        }
      },
      "30": {
        start: {
          line: 57,
          column: 23
        },
        end: {
          line: 57,
          column: 55
        }
      },
      "31": {
        start: {
          line: 60,
          column: 21
        },
        end: {
          line: 60,
          column: 41
        }
      },
      "32": {
        start: {
          line: 61,
          column: 4
        },
        end: {
          line: 61,
          column: 69
        }
      },
      "33": {
        start: {
          line: 64,
          column: 25
        },
        end: {
          line: 64,
          column: 45
        }
      },
      "34": {
        start: {
          line: 65,
          column: 4
        },
        end: {
          line: 65,
          column: 79
        }
      },
      "35": {
        start: {
          line: 67,
          column: 23
        },
        end: {
          line: 67,
          column: 24
        }
      },
      "36": {
        start: {
          line: 68,
          column: 21
        },
        end: {
          line: 68,
          column: 22
        }
      },
      "37": {
        start: {
          line: 70,
          column: 4
        },
        end: {
          line: 119,
          column: 5
        }
      },
      "38": {
        start: {
          line: 71,
          column: 6
        },
        end: {
          line: 118,
          column: 7
        }
      },
      "39": {
        start: {
          line: 73,
          column: 41
        },
        end: {
          line: 77,
          column: 19
        }
      },
      "40": {
        start: {
          line: 79,
          column: 8
        },
        end: {
          line: 83,
          column: 9
        }
      },
      "41": {
        start: {
          line: 80,
          column: 10
        },
        end: {
          line: 80,
          column: 105
        }
      },
      "42": {
        start: {
          line: 81,
          column: 10
        },
        end: {
          line: 81,
          column: 23
        }
      },
      "43": {
        start: {
          line: 82,
          column: 10
        },
        end: {
          line: 82,
          column: 19
        }
      },
      "44": {
        start: {
          line: 86,
          column: 33
        },
        end: {
          line: 86,
          column: 68
        }
      },
      "45": {
        start: {
          line: 88,
          column: 28
        },
        end: {
          line: 100,
          column: 9
        }
      },
      "46": {
        start: {
          line: 103,
          column: 26
        },
        end: {
          line: 105,
          column: 30
        }
      },
      "47": {
        start: {
          line: 107,
          column: 8
        },
        end: {
          line: 113,
          column: 9
        }
      },
      "48": {
        start: {
          line: 108,
          column: 10
        },
        end: {
          line: 108,
          column: 85
        }
      },
      "49": {
        start: {
          line: 109,
          column: 10
        },
        end: {
          line: 109,
          column: 23
        }
      },
      "50": {
        start: {
          line: 111,
          column: 10
        },
        end: {
          line: 111,
          column: 100
        }
      },
      "51": {
        start: {
          line: 112,
          column: 10
        },
        end: {
          line: 112,
          column: 25
        }
      },
      "52": {
        start: {
          line: 116,
          column: 8
        },
        end: {
          line: 116,
          column: 69
        }
      },
      "53": {
        start: {
          line: 117,
          column: 8
        },
        end: {
          line: 117,
          column: 21
        }
      },
      "54": {
        start: {
          line: 121,
          column: 4
        },
        end: {
          line: 121,
          column: 46
        }
      },
      "55": {
        start: {
          line: 122,
          column: 4
        },
        end: {
          line: 122,
          column: 47
        }
      },
      "56": {
        start: {
          line: 123,
          column: 4
        },
        end: {
          line: 123,
          column: 42
        }
      },
      "57": {
        start: {
          line: 126,
          column: 22
        },
        end: {
          line: 128,
          column: 50
        }
      },
      "58": {
        start: {
          line: 130,
          column: 4
        },
        end: {
          line: 130,
          column: 62
        }
      },
      "59": {
        start: {
          line: 133,
          column: 4
        },
        end: {
          line: 133,
          column: 50
        }
      },
      "60": {
        start: {
          line: 137,
          column: 0
        },
        end: {
          line: 137,
          column: 42
        }
      }
    },
    fnMap: {
      "0": {
        name: "parseCSV",
        decl: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 18,
            column: 17
          }
        },
        loc: {
          start: {
            line: 18,
            column: 30
          },
          end: {
            line: 48,
            column: 1
          }
        },
        line: 18
      },
      "1": {
        name: "(anonymous_1)",
        decl: {
          start: {
            line: 19,
            column: 46
          },
          end: {
            line: 19,
            column: 47
          }
        },
        loc: {
          start: {
            line: 19,
            column: 54
          },
          end: {
            line: 19,
            column: 65
          }
        },
        line: 19
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 22,
            column: 28
          },
          end: {
            line: 22,
            column: 29
          }
        },
        loc: {
          start: {
            line: 22,
            column: 36
          },
          end: {
            line: 47,
            column: 3
          }
        },
        line: 22
      },
      "3": {
        name: "(anonymous_3)",
        decl: {
          start: {
            line: 42,
            column: 20
          },
          end: {
            line: 42,
            column: 21
          }
        },
        loc: {
          start: {
            line: 42,
            column: 39
          },
          end: {
            line: 44,
            column: 5
          }
        },
        line: 42
      },
      "4": {
        name: "importPaymentsTest",
        decl: {
          start: {
            line: 50,
            column: 15
          },
          end: {
            line: 50,
            column: 33
          }
        },
        loc: {
          start: {
            line: 50,
            column: 36
          },
          end: {
            line: 135,
            column: 1
          }
        },
        line: 50
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 30,
            column: 6
          },
          end: {
            line: 37,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 30,
            column: 6
          },
          end: {
            line: 37,
            column: 7
          }
        }, {
          start: {
            line: 32,
            column: 13
          },
          end: {
            line: 37,
            column: 7
          }
        }],
        line: 30
      },
      "1": {
        loc: {
          start: {
            line: 32,
            column: 13
          },
          end: {
            line: 37,
            column: 7
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 32,
            column: 13
          },
          end: {
            line: 37,
            column: 7
          }
        }, {
          start: {
            line: 35,
            column: 13
          },
          end: {
            line: 37,
            column: 7
          }
        }],
        line: 32
      },
      "2": {
        loc: {
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 42
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 32,
            column: 17
          },
          end: {
            line: 32,
            column: 29
          }
        }, {
          start: {
            line: 32,
            column: 33
          },
          end: {
            line: 32,
            column: 42
          }
        }],
        line: 32
      },
      "3": {
        loc: {
          start: {
            line: 43,
            column: 27
          },
          end: {
            line: 43,
            column: 48
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 43,
            column: 27
          },
          end: {
            line: 43,
            column: 40
          }
        }, {
          start: {
            line: 43,
            column: 44
          },
          end: {
            line: 43,
            column: 48
          }
        }],
        line: 43
      },
      "4": {
        loc: {
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 79,
            column: 8
          },
          end: {
            line: 83,
            column: 9
          }
        }, {
          start: {
            line: undefined,
            column: undefined
          },
          end: {
            line: undefined,
            column: undefined
          }
        }],
        line: 79
      },
      "5": {
        loc: {
          start: {
            line: 91,
            column: 18
          },
          end: {
            line: 91,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 91,
            column: 35
          },
          end: {
            line: 91,
            column: 61
          }
        }, {
          start: {
            line: 91,
            column: 64
          },
          end: {
            line: 91,
            column: 68
          }
        }],
        line: 91
      },
      "6": {
        loc: {
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 92,
            column: 44
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 92,
            column: 20
          },
          end: {
            line: 92,
            column: 36
          }
        }, {
          start: {
            line: 92,
            column: 40
          },
          end: {
            line: 92,
            column: 44
          }
        }],
        line: 92
      },
      "7": {
        loc: {
          start: {
            line: 93,
            column: 21
          },
          end: {
            line: 93,
            column: 46
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 93,
            column: 21
          },
          end: {
            line: 93,
            column: 38
          }
        }, {
          start: {
            line: 93,
            column: 42
          },
          end: {
            line: 93,
            column: 46
          }
        }],
        line: 93
      },
      "8": {
        loc: {
          start: {
            line: 94,
            column: 18
          },
          end: {
            line: 94,
            column: 45
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 94,
            column: 18
          },
          end: {
            line: 94,
            column: 32
          }
        }, {
          start: {
            line: 94,
            column: 36
          },
          end: {
            line: 94,
            column: 45
          }
        }],
        line: 94
      },
      "9": {
        loc: {
          start: {
            line: 95,
            column: 27
          },
          end: {
            line: 95,
            column: 55
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 95,
            column: 27
          },
          end: {
            line: 95,
            column: 49
          }
        }, {
          start: {
            line: 95,
            column: 53
          },
          end: {
            line: 95,
            column: 55
          }
        }],
        line: 95
      },
      "10": {
        loc: {
          start: {
            line: 96,
            column: 17
          },
          end: {
            line: 96,
            column: 38
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 96,
            column: 17
          },
          end: {
            line: 96,
            column: 30
          }
        }, {
          start: {
            line: 96,
            column: 34
          },
          end: {
            line: 96,
            column: 38
          }
        }],
        line: 96
      },
      "11": {
        loc: {
          start: {
            line: 98,
            column: 22
          },
          end: {
            line: 98,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 98,
            column: 22
          },
          end: {
            line: 98,
            column: 40
          }
        }, {
          start: {
            line: 98,
            column: 44
          },
          end: {
            line: 98,
            column: 68
          }
        }],
        line: 98
      },
      "12": {
        loc: {
          start: {
            line: 99,
            column: 22
          },
          end: {
            line: 99,
            column: 68
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 99,
            column: 22
          },
          end: {
            line: 99,
            column: 40
          }
        }, {
          start: {
            line: 99,
            column: 44
          },
          end: {
            line: 99,
            column: 68
          }
        }],
        line: 99
      },
      "13": {
        loc: {
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 107,
            column: 8
          },
          end: {
            line: 113,
            column: 9
          }
        }, {
          start: {
            line: 110,
            column: 15
          },
          end: {
            line: 113,
            column: 9
          }
        }],
        line: 107
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0,
      "27": 0,
      "28": 0,
      "29": 0,
      "30": 0,
      "31": 0,
      "32": 0,
      "33": 0,
      "34": 0,
      "35": 0,
      "36": 0,
      "37": 0,
      "38": 0,
      "39": 0,
      "40": 0,
      "41": 0,
      "42": 0,
      "43": 0,
      "44": 0,
      "45": 0,
      "46": 0,
      "47": 0,
      "48": 0,
      "49": 0,
      "50": 0,
      "51": 0,
      "52": 0,
      "53": 0,
      "54": 0,
      "55": 0,
      "56": 0,
      "57": 0,
      "58": 0,
      "59": 0,
      "60": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0],
      "8": [0, 0],
      "9": [0, 0],
      "10": [0, 0],
      "11": [0, 0],
      "12": [0, 0],
      "13": [0, 0]
    },
    _coverageSchema: "1a1c01bbd47fc00a2c39e90264f33305004495a9",
    hash: "3aee1b75dc707a24a58c5366b12000f8f10f4377"
  };
  var coverage = global[gcv] || (global[gcv] = {});
  if (!coverage[path] || coverage[path].hash !== hash) {
    coverage[path] = coverageData;
  }
  var actualCoverage = coverage[path];
  {
    // @ts-ignore
    cov_1u0f6kjzlj = function () {
      return actualCoverage;
    };
  }
  return actualCoverage;
}
cov_1u0f6kjzlj();
cov_1u0f6kjzlj().s[0]++;
require('dotenv').config();
const {
  createClient
} =
/* istanbul ignore next */
(cov_1u0f6kjzlj().s[1]++, require('@supabase/supabase-js'));
const fs =
/* istanbul ignore next */
(cov_1u0f6kjzlj().s[2]++, require('fs'));
const path =
/* istanbul ignore next */
(cov_1u0f6kjzlj().s[3]++, require('path'));

// Usar service_role key para ter permissões administrativas
const supabase =
/* istanbul ignore next */
(cov_1u0f6kjzlj().s[4]++, createClient(process.env.SUPABASE_URL, process.env.SUPABASE_SERVICE_ROLE_KEY, {
  auth: {
    autoRefreshToken: false,
    persistSession: false
  }
}));
function parseCSV(csvContent) {
  /* istanbul ignore next */
  cov_1u0f6kjzlj().f[0]++;
  const lines =
  /* istanbul ignore next */
  (cov_1u0f6kjzlj().s[5]++, csvContent.split('\n').filter(line => {
    /* istanbul ignore next */
    cov_1u0f6kjzlj().f[1]++;
    cov_1u0f6kjzlj().s[6]++;
    return line.trim();
  }));
  const headers =
  /* istanbul ignore next */
  (cov_1u0f6kjzlj().s[7]++, lines[0].split(','));
  /* istanbul ignore next */
  cov_1u0f6kjzlj().s[8]++;
  return lines.slice(1).map(line => {
    /* istanbul ignore next */
    cov_1u0f6kjzlj().f[2]++;
    const values =
    /* istanbul ignore next */
    (cov_1u0f6kjzlj().s[9]++, []);
    let current =
    /* istanbul ignore next */
    (cov_1u0f6kjzlj().s[10]++, '');
    let inQuotes =
    /* istanbul ignore next */
    (cov_1u0f6kjzlj().s[11]++, false);
    /* istanbul ignore next */
    cov_1u0f6kjzlj().s[12]++;
    for (let i =
    /* istanbul ignore next */
    (cov_1u0f6kjzlj().s[13]++, 0); i < line.length; i++) {
      const char =
      /* istanbul ignore next */
      (cov_1u0f6kjzlj().s[14]++, line[i]);
      /* istanbul ignore next */
      cov_1u0f6kjzlj().s[15]++;
      if (char === '"') {
        /* istanbul ignore next */
        cov_1u0f6kjzlj().b[0][0]++;
        cov_1u0f6kjzlj().s[16]++;
        inQuotes = !inQuotes;
      } else {
        /* istanbul ignore next */
        cov_1u0f6kjzlj().b[0][1]++;
        cov_1u0f6kjzlj().s[17]++;
        if (
        /* istanbul ignore next */
        (cov_1u0f6kjzlj().b[2][0]++, char === ',') &&
        /* istanbul ignore next */
        (cov_1u0f6kjzlj().b[2][1]++, !inQuotes)) {
          /* istanbul ignore next */
          cov_1u0f6kjzlj().b[1][0]++;
          cov_1u0f6kjzlj().s[18]++;
          values.push(current.trim());
          /* istanbul ignore next */
          cov_1u0f6kjzlj().s[19]++;
          current = '';
        } else {
          /* istanbul ignore next */
          cov_1u0f6kjzlj().b[1][1]++;
          cov_1u0f6kjzlj().s[20]++;
          current += char;
        }
      }
    }
    /* istanbul ignore next */
    cov_1u0f6kjzlj().s[21]++;
    values.push(current.trim());
    const obj =
    /* istanbul ignore next */
    (cov_1u0f6kjzlj().s[22]++, {});
    /* istanbul ignore next */
    cov_1u0f6kjzlj().s[23]++;
    headers.forEach((header, index) => {
      /* istanbul ignore next */
      cov_1u0f6kjzlj().f[3]++;
      cov_1u0f6kjzlj().s[24]++;
      obj[header.trim()] =
      /* istanbul ignore next */
      (cov_1u0f6kjzlj().b[3][0]++, values[index]) ||
      /* istanbul ignore next */
      (cov_1u0f6kjzlj().b[3][1]++, null);
    });
    /* istanbul ignore next */
    cov_1u0f6kjzlj().s[25]++;
    return obj;
  });
}
async function importPaymentsTest() {
  /* istanbul ignore next */
  cov_1u0f6kjzlj().f[4]++;
  cov_1u0f6kjzlj().s[26]++;
  console.log('📥 IMPORTAÇÃO DE PAGAMENTOS (TESTE - 5 LINHAS)');
  /* istanbul ignore next */
  cov_1u0f6kjzlj().s[27]++;
  console.log('==================================================');
  /* istanbul ignore next */
  cov_1u0f6kjzlj().s[28]++;
  try {
    // Ler arquivo CSV
    const csvPath =
    /* istanbul ignore next */
    (cov_1u0f6kjzlj().s[29]++, path.join(__dirname, '../../../importBD/payments.csv'));
    const csvContent =
    /* istanbul ignore next */
    (cov_1u0f6kjzlj().s[30]++, fs.readFileSync(csvPath, 'utf8'));

    // Parse CSV
    const payments =
    /* istanbul ignore next */
    (cov_1u0f6kjzlj().s[31]++, parseCSV(csvContent));
    /* istanbul ignore next */
    cov_1u0f6kjzlj().s[32]++;
    console.log(`📊 Total de pagamentos no CSV: ${payments.length}`);

    // Processar apenas os primeiros 5 para teste
    const testPayments =
    /* istanbul ignore next */
    (cov_1u0f6kjzlj().s[33]++, payments.slice(0, 5));
    /* istanbul ignore next */
    cov_1u0f6kjzlj().s[34]++;
    console.log(`🧪 Processando ${testPayments.length} pagamentos para teste`);
    let successCount =
    /* istanbul ignore next */
    (cov_1u0f6kjzlj().s[35]++, 0);
    let errorCount =
    /* istanbul ignore next */
    (cov_1u0f6kjzlj().s[36]++, 0);
    /* istanbul ignore next */
    cov_1u0f6kjzlj().s[37]++;
    for (const payment of testPayments) {
      /* istanbul ignore next */
      cov_1u0f6kjzlj().s[38]++;
      try {
        // Verificar se o contract_id existe
        const {
          data: contractExists
        } =
        /* istanbul ignore next */
        (cov_1u0f6kjzlj().s[39]++, await supabase.from('contracts').select('id').eq('id', payment.contract_id).single());
        /* istanbul ignore next */
        cov_1u0f6kjzlj().s[40]++;
        if (!contractExists) {
          /* istanbul ignore next */
          cov_1u0f6kjzlj().b[4][0]++;
          cov_1u0f6kjzlj().s[41]++;
          console.log(`⚠️  Contrato ${payment.contract_id} não encontrado para pagamento ${payment.id}`);
          /* istanbul ignore next */
          cov_1u0f6kjzlj().s[42]++;
          errorCount++;
          /* istanbul ignore next */
          cov_1u0f6kjzlj().s[43]++;
          continue;
        } else
        /* istanbul ignore next */
        {
          cov_1u0f6kjzlj().b[4][1]++;
        }

        // Preparar dados do pagamento (criar external_id único e truncado)
        const uniqueExternalId =
        /* istanbul ignore next */
        (cov_1u0f6kjzlj().s[44]++, `PAY_${payment.id.substring(0, 8)}`);
        const paymentData =
        /* istanbul ignore next */
        (cov_1u0f6kjzlj().s[45]++, {
          id: payment.id,
          contract_id: payment.contract_id,
          amount: payment.amount ?
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[5][0]++, parseFloat(payment.amount)) :
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[5][1]++, null),
          due_date:
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[6][0]++, payment.due_date) ||
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[6][1]++, null),
          paid_date:
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[7][0]++, payment.paid_date) ||
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[7][1]++, null),
          status:
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[8][0]++, payment.status) ||
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[8][1]++, 'pending'),
          payment_method: (
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[9][0]++, payment.payment_method) ||
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[9][1]++, '')).substring(0, 20),
          notes:
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[10][0]++, payment.notes) ||
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[10][1]++, null),
          external_id: uniqueExternalId.substring(0, 50),
          created_at:
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[11][0]++, payment.created_at) ||
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[11][1]++, new Date().toISOString()),
          updated_at:
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[12][0]++, payment.updated_at) ||
          /* istanbul ignore next */
          (cov_1u0f6kjzlj().b[12][1]++, new Date().toISOString())
        });

        // Inserir no Supabase
        const {
          error
        } =
        /* istanbul ignore next */
        (cov_1u0f6kjzlj().s[46]++, await supabase.from('payments').insert(paymentData));
        /* istanbul ignore next */
        cov_1u0f6kjzlj().s[47]++;
        if (error) {
          /* istanbul ignore next */
          cov_1u0f6kjzlj().b[13][0]++;
          cov_1u0f6kjzlj().s[48]++;
          console.log(`❌ Erro ao inserir pagamento ${payment.id}: ${error.message}`);
          /* istanbul ignore next */
          cov_1u0f6kjzlj().s[49]++;
          errorCount++;
        } else {
          /* istanbul ignore next */
          cov_1u0f6kjzlj().b[13][1]++;
          cov_1u0f6kjzlj().s[50]++;
          console.log(`✅ Pagamento inserido: ${payment.amount} (Contrato: ${payment.contract_id})`);
          /* istanbul ignore next */
          cov_1u0f6kjzlj().s[51]++;
          successCount++;
        }
      } catch (err) {
        /* istanbul ignore next */
        cov_1u0f6kjzlj().s[52]++;
        console.log(`❌ Erro ao processar pagamento: ${err.message}`);
        /* istanbul ignore next */
        cov_1u0f6kjzlj().s[53]++;
        errorCount++;
      }
    }
    /* istanbul ignore next */
    cov_1u0f6kjzlj().s[54]++;
    console.log('\n📊 RESUMO DA IMPORTAÇÃO:');
    /* istanbul ignore next */
    cov_1u0f6kjzlj().s[55]++;
    console.log(`✅ Sucessos: ${successCount}`);
    /* istanbul ignore next */
    cov_1u0f6kjzlj().s[56]++;
    console.log(`❌ Erros: ${errorCount}`);

    // Verificar total na tabela
    const {
      count
    } =
    /* istanbul ignore next */
    (cov_1u0f6kjzlj().s[57]++, await supabase.from('payments').select('*', {
      count: 'exact',
      head: true
    }));
    /* istanbul ignore next */
    cov_1u0f6kjzlj().s[58]++;
    console.log(`📋 Total de pagamentos na tabela: ${count}`);
  } catch (error) {
    /* istanbul ignore next */
    cov_1u0f6kjzlj().s[59]++;
    console.error('❌ Erro geral:', error.message);
  }
}
/* istanbul ignore next */
cov_1u0f6kjzlj().s[60]++;
importPaymentsTest().catch(console.error);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,