{"version":3,"names":["cov_si86jnhjb","actualCoverage","s","require","config","createClient","fs","csv","path","supabase","process","env","SUPABASE_URL","SUPABASE_SERVICE_ROLE_KEY","auth","autoRefreshToken","persistSession","CSV_DIR","getExistingClients","f","data","error","from","select","b","console","Set","map","client","id","importContracts","log","existingClients","size","count","success","errors","clientNotFound","contractsFile","join","Promise","resolve","createReadStream","pipe","on","row","has","client_id","contractData","contract_number","substring","description","value","parseFloat","start_date","end_date","status","payment_frequency","notes","insert","message","catch"],"sources":["import_contracts_fixed.js"],"sourcesContent":["require('dotenv').config();\nconst { createClient } = require('@supabase/supabase-js');\nconst fs = require('fs');\nconst csv = require('csv-parser');\nconst path = require('path');\n\n// Usar service_role key para ter permiss√µes administrativas\nconst supabase = createClient(\n  process.env.SUPABASE_URL, \n  process.env.SUPABASE_SERVICE_ROLE_KEY,\n  {\n    auth: {\n      autoRefreshToken: false,\n      persistSession: false\n    }\n  }\n);\n\nconst CSV_DIR = '/Users/insitutoareluna/Documents/finance/importBD';\n\nasync function getExistingClients() {\n  const { data, error } = await supabase\n    .from('clients')\n    .select('id');\n  \n  if (error) {\n    console.error('Erro ao buscar clientes:', error);\n    return new Set();\n  }\n  \n  return new Set(data.map(client => client.id));\n}\n\nasync function importContracts() {\n  console.log('üìÑ IMPORTA√á√ÉO DE CONTRATOS');\n  console.log('==================================================');\n  \n  // Buscar clientes existentes\n  const existingClients = await getExistingClients();\n  console.log(`üìã Clientes existentes: ${existingClients.size}`);\n  \n  let count = 0;\n  let success = 0;\n  let errors = 0;\n  let clientNotFound = 0;\n  \n  const contractsFile = path.join(CSV_DIR, 'contracts.csv');\n  \n  return new Promise((resolve) => {\n    fs.createReadStream(contractsFile)\n      .pipe(csv())\n      .on('data', async (row) => {\n        count++;\n        \n        try {\n          // Verificar se o cliente existe\n          if (!existingClients.has(row.client_id)) {\n            console.log(`‚ö†Ô∏è  Cliente n√£o encontrado para contrato ${count}: ${row.client_id}`);\n            clientNotFound++;\n            return;\n          }\n          \n          const contractData = {\n            client_id: row.client_id,\n            contract_number: row.contract_number?.substring(0, 100) || `CONTRACT_${count}`,\n            description: row.description?.substring(0, 500) || null,\n            value: parseFloat(row.value) || 0,\n            start_date: row.start_date || null,\n            end_date: row.end_date || null,\n            status: row.status || 'active',\n            payment_frequency: row.payment_frequency || 'monthly',\n            notes: row.notes?.substring(0, 1000) || null\n          };\n          \n          const { data, error } = await supabase\n            .from('contracts')\n            .insert([contractData])\n            .select();\n          \n          if (error) {\n            console.error(`‚ùå Erro ao inserir contrato ${count}:`, error.message);\n            errors++;\n          } else {\n            if (count <= 5) {\n              console.log(`‚úÖ Contrato ${count} inserido:`, data[0].id);\n            }\n            success++;\n          }\n        } catch (error) {\n          console.error(`‚ùå Erro ao processar contrato ${count}:`, error.message);\n          errors++;\n        }\n      })\n      .on('end', () => {\n        console.log('\\nüìä RESUMO DA IMPORTA√á√ÉO DE CONTRATOS:');\n        console.log(`Total processados: ${count}`);\n        console.log(`Sucessos: ${success}`);\n        console.log(`Erros: ${errors}`);\n        console.log(`Clientes n√£o encontrados: ${clientNotFound}`);\n        resolve({ count, success, errors, clientNotFound });\n      })\n      .on('error', (error) => {\n        console.error('‚ùå Erro ao ler CSV de contratos:', error);\n        resolve({ count, success, errors, clientNotFound });\n      });\n  });\n}\n\nimportContracts().catch(console.error);"],"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","ignoreList":[]}