{"version":3,"names":["cov_1fb0lg1za","actualCoverage","s","require","config","createClient","supabase","process","env","SUPABASE_URL","SUPABASE_ANON_KEY","analyzeData","f","console","log","count","totalCount","error","totalError","from","select","b","clientsCount","clientsError","not","contractsCount","contractsError","like","data","countryData","countryError","areaCount","forEach","item","area","country","Object","entries","sort","a","valueData","valueError","limit","i","valor","parseFloat","phone","notesMatch","notes","match","valorFromNotes","toFixed","integrityData","integrityError","is","length","message"],"sources":["analyze_imported_data.js"],"sourcesContent":["require('dotenv').config();\nconst { createClient } = require('@supabase/supabase-js');\n\nconst supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_ANON_KEY);\n\nasync function analyzeData() {\n  try {\n    console.log('üîç AN√ÅLISE DOS DADOS IMPORTADOS');\n    console.log('==================================================\\n');\n    \n    // Total de registros\n    const { count: totalCount, error: totalError } = await supabase\n      .from('clients')\n      .select('id', { count: 'exact' });\n    \n    if (totalError) {\n      console.error('‚ùå Erro ao contar total:', totalError);\n      return;\n    }\n    \n    console.log(`üìä Total de registros: ${totalCount}`);\n    \n    // Contar clientes reais (n√£o come√ßam com CONTRATO_)\n    const { count: clientsCount, error: clientsError } = await supabase\n      .from('clients')\n      .select('id', { count: 'exact' })\n      .not('first_name', 'like', 'CONTRATO_%');\n    \n    if (clientsError) {\n      console.error('‚ùå Erro ao contar clientes:', clientsError);\n      return;\n    }\n    \n    // Contar contratos (come√ßam com CONTRATO_)\n    const { count: contractsCount, error: contractsError } = await supabase\n      .from('clients')\n      .select('id', { count: 'exact' })\n      .like('first_name', 'CONTRATO_%');\n    \n    if (contractsError) {\n      console.error('‚ùå Erro ao contar contratos:', contractsError);\n      return;\n    }\n    \n    console.log(`üë• Clientes reais: ${clientsCount}`);\n    console.log(`üìã Contratos: ${contractsCount}`);\n    console.log(`üßÆ Verifica√ß√£o: ${clientsCount + contractsCount} = ${totalCount} ‚úÖ\\n`);\n    \n    // An√°lise por pa√≠s/√°rea\n    const { data: countryData, error: countryError } = await supabase\n      .from('clients')\n      .select('country')\n      .like('first_name', 'CONTRATO_%');\n    \n    if (countryError) {\n      console.error('‚ùå Erro ao analisar √°reas:', countryError);\n      return;\n    }\n    \n    const areaCount = {};\n    countryData.forEach(item => {\n      const area = item.country || 'N/A';\n      areaCount[area] = (areaCount[area] || 0) + 1;\n    });\n    \n    console.log('üìà DISTRIBUI√á√ÉO POR √ÅREA:');\n    Object.entries(areaCount)\n      .sort(([,a], [,b]) => b - a)\n      .forEach(([area, count]) => {\n        console.log(`   ${area}: ${count} contratos`);\n      });\n    \n    console.log('\\n');\n    \n    // An√°lise de valores (usando campo phone que armazena o valor)\n    const { data: valueData, error: valueError } = await supabase\n      .from('clients')\n      .select('phone, notes')\n      .like('first_name', 'CONTRATO_%')\n      .limit(5);\n    \n    if (valueError) {\n      console.error('‚ùå Erro ao analisar valores:', valueError);\n      return;\n    }\n    \n    console.log('üí∞ EXEMPLOS DE VALORES DE CONTRATOS:');\n    valueData.forEach((item, i) => {\n      const valor = parseFloat(item.phone) || 0;\n      const notesMatch = item.notes?.match(/Valor: R\\$ ([\\d.,]+)/);\n      const valorFromNotes = notesMatch ? notesMatch[1] : 'N/A';\n      console.log(`   ${i+1}. Valor: R$ ${valor.toFixed(2)} (Notes: R$ ${valorFromNotes})`);\n    });\n    \n    console.log('\\n');\n    \n    // Verificar integridade dos dados\n    const { data: integrityData, error: integrityError } = await supabase\n      .from('clients')\n      .select('first_name, last_name, email, tax_id, notes')\n      .like('first_name', 'CONTRATO_%')\n      .is('notes', null);\n    \n    if (integrityError) {\n      console.error('‚ùå Erro ao verificar integridade:', integrityError);\n      return;\n    }\n    \n    console.log('üîç VERIFICA√á√ÉO DE INTEGRIDADE:');\n    console.log(`   Contratos sem notes: ${integrityData.length}`);\n    \n    if (integrityData.length > 0) {\n      console.log('   ‚ö†Ô∏è  Alguns contratos podem estar com dados incompletos');\n    } else {\n      console.log('   ‚úÖ Todos os contratos possuem informa√ß√µes completas');\n    }\n    \n    console.log('\\n==================================================');\n    console.log('‚úÖ AN√ÅLISE CONCLU√çDA!');\n    \n  } catch (error) {\n    console.error('‚ùå Erro na an√°lise:', error.message);\n  }\n}\n\nanalyzeData();"],"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","ignoreList":[]}