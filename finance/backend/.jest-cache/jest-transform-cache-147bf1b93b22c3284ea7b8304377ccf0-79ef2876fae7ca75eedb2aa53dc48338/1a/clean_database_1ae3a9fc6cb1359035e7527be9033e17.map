{"version":3,"names":["cov_2k1fcliu05","actualCoverage","s","require","config","createClient","supabase","process","env","SUPABASE_URL","SUPABASE_ANON_KEY","cleanDatabase","f","console","log","tables","table","error","from","delete","gte","b","message","err","count","select","head","catch"],"sources":["clean_database.js"],"sourcesContent":["require('dotenv').config();\nconst { createClient } = require('@supabase/supabase-js');\n\nconst supabase = createClient(process.env.SUPABASE_URL, process.env.SUPABASE_ANON_KEY);\n\nasync function cleanDatabase() {\n  console.log('üßπ LIMPANDO BANCO DE DADOS');\n  console.log('==================================================');\n  \n  const tables = ['clients', 'contracts', 'payments', 'companies', 'branches', 'users'];\n  \n  for (const table of tables) {\n    try {\n      console.log(`üóëÔ∏è  Limpando tabela '${table}'...`);\n      \n      const { error } = await supabase\n        .from(table)\n        .delete()\n        .gte('id', '00000000-0000-0000-0000-000000000000'); // Delete all records\n      \n      if (error) {\n        console.log(`‚ùå Erro ao limpar '${table}': ${error.message}`);\n      } else {\n        console.log(`‚úÖ Tabela '${table}' limpa com sucesso`);\n      }\n    } catch (err) {\n      console.log(`‚ùå Erro ao acessar tabela '${table}': ${err.message}`);\n    }\n  }\n  \n  console.log('\\nüîç Verificando limpeza...');\n  \n  // Verificar se as tabelas est√£o vazias\n  for (const table of tables) {\n    try {\n      const { count, error } = await supabase\n        .from(table)\n        .select('*', { count: 'exact', head: true });\n      \n      if (!error) {\n        console.log(`üìä Tabela '${table}': ${count} registros restantes`);\n      }\n    } catch (err) {\n      console.log(`‚ùå Erro ao verificar '${table}': ${err.message}`);\n    }\n  }\n  \n  console.log('\\n‚úÖ LIMPEZA CONCLU√çDA!');\n}\n\ncleanDatabase().catch(console.error);"],"mappings":"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","ignoreList":[]}