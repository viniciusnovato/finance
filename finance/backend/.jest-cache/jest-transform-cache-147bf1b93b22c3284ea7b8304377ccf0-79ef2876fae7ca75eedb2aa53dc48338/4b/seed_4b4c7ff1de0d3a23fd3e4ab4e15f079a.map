{"version":3,"names":["cov_29wdmebzmf","actualCoverage","createClient","s","require","config","supabaseUrl","process","env","SUPABASE_URL","supabaseServiceKey","SUPABASE_SERVICE_ROLE_KEY","b","console","error","exit","supabase","auth","autoRefreshToken","persistSession","sampleData","companies","name","document","email","phone","address","city","state","zip_code","branches","code","manager_name","clients","document_type","mobile","birth_date","neighborhood","occupation","monthly_income","marital_status","spouse_name","spouse_document","spouse_phone","predefinedNotes","category","title","content","seedDatabase","f","log","data","companyError","from","insert","select","message","companyId","id","branchesWithCompany","map","branch","company_id","branchError","length","clientsWithRefs","client","index","branch_id","clientError","contracts","client_id","contract_number","product_description","total_amount","down_payment","financed_amount","installments","installment_amount","interest_rate","start_date","first_due_date","payment_method","insertedContracts","contractError","contract","payments","startDate","Date","i","dueDate","setMonth","getMonth","isPaid","isOverdue","Math","random","push","contract_id","installment_number","due_date","toISOString","split","amount","paid_amount","payment_date","status","paymentError","notesWithCompany","note","notesError","clearSampleData","tables","table","delete","neq","warn","main","module","action","argv","exports"],"sources":["seed.js"],"sourcesContent":["const { createClient } = require('@supabase/supabase-js');\nrequire('dotenv').config();\n\n// Configuração do Supabase Admin\nconst supabaseUrl = process.env.SUPABASE_URL;\nconst supabaseServiceKey = process.env.SUPABASE_SERVICE_ROLE_KEY;\n\nif (!supabaseUrl || !supabaseServiceKey) {\n  console.error('❌ Variáveis de ambiente SUPABASE_URL e SUPABASE_SERVICE_ROLE_KEY são obrigatórias');\n  process.exit(1);\n}\n\nconst supabase = createClient(supabaseUrl, supabaseServiceKey, {\n  auth: {\n    autoRefreshToken: false,\n    persistSession: false\n  }\n});\n\n// Dados de exemplo\nconst sampleData = {\n  companies: [\n    {\n      name: 'Financeira Exemplo Ltda',\n      document: '12.345.678/0001-90',\n      email: 'contato@financeira.com',\n      phone: '(11) 3333-4444',\n      address: 'Rua das Empresas, 123',\n      city: 'São Paulo',\n      state: 'SP',\n      zip_code: '01234-567'\n    }\n  ],\n  \n  branches: [\n    {\n      name: 'Filial Centro',\n      code: 'CTR001',\n      address: 'Av. Paulista, 1000',\n      city: 'São Paulo',\n      state: 'SP',\n      zip_code: '01310-100',\n      phone: '(11) 3333-4445',\n      email: 'centro@financeira.com',\n      manager_name: 'João Silva'\n    },\n    {\n      name: 'Filial Norte',\n      code: 'NRT001',\n      address: 'Rua do Norte, 500',\n      city: 'São Paulo',\n      state: 'SP',\n      zip_code: '02345-678',\n      phone: '(11) 3333-4446',\n      email: 'norte@financeira.com',\n      manager_name: 'Maria Santos'\n    }\n  ],\n  \n  clients: [\n    {\n      name: 'Carlos Eduardo Silva',\n      document: '123.456.789-01',\n      document_type: 'CPF',\n      email: 'carlos@email.com',\n      phone: '(11) 9999-1111',\n      mobile: '(11) 9999-1111',\n      birth_date: '1985-03-15',\n      address: 'Rua das Flores, 456',\n      neighborhood: 'Centro',\n      city: 'São Paulo',\n      state: 'SP',\n      zip_code: '01234-567',\n      occupation: 'Vendedor',\n      monthly_income: 3500.00,\n      marital_status: 'casado',\n      spouse_name: 'Ana Silva',\n      spouse_document: '987.654.321-09',\n      spouse_phone: '(11) 9999-2222'\n    },\n    {\n      name: 'Fernanda Costa',\n      document: '987.654.321-09',\n      document_type: 'CPF',\n      email: 'fernanda@email.com',\n      phone: '(11) 8888-3333',\n      mobile: '(11) 8888-3333',\n      birth_date: '1990-07-22',\n      address: 'Av. das Américas, 789',\n      neighborhood: 'Vila Nova',\n      city: 'São Paulo',\n      state: 'SP',\n      zip_code: '02345-678',\n      occupation: 'Professora',\n      monthly_income: 4200.00,\n      marital_status: 'solteiro'\n    },\n    {\n      name: 'Roberto Oliveira',\n      document: '456.789.123-45',\n      document_type: 'CPF',\n      email: 'roberto@email.com',\n      phone: '(11) 7777-4444',\n      mobile: '(11) 7777-4444',\n      birth_date: '1978-12-10',\n      address: 'Rua do Comércio, 321',\n      neighborhood: 'Centro',\n      city: 'São Paulo',\n      state: 'SP',\n      zip_code: '01234-567',\n      occupation: 'Comerciante',\n      monthly_income: 5500.00,\n      marital_status: 'divorciado'\n    }\n  ],\n  \n  predefinedNotes: [\n    {\n      category: 'client',\n      title: 'Cliente Inadimplente',\n      content: 'Cliente com histórico de atraso nos pagamentos. Requer acompanhamento especial.'\n    },\n    {\n      category: 'client',\n      title: 'Bom Pagador',\n      content: 'Cliente pontual nos pagamentos. Perfil de baixo risco.'\n    },\n    {\n      category: 'contract',\n      title: 'Contrato Renegociado',\n      content: 'Contrato passou por processo de renegociação de valores e prazos.'\n    },\n    {\n      category: 'payment',\n      title: 'Pagamento em Atraso',\n      content: 'Parcela paga com atraso. Aplicada multa conforme contrato.'\n    },\n    {\n      category: 'general',\n      title: 'Contato Realizado',\n      content: 'Contato telefônico realizado com sucesso.'\n    }\n  ]\n};\n\nasync function seedDatabase() {\n  try {\n    console.log('🌱 Iniciando inserção de dados de exemplo...');\n    \n    // 1. Inserir empresa\n    console.log('📊 Inserindo empresa...');\n    const { data: companies, error: companyError } = await supabase\n      .from('companies')\n      .insert(sampleData.companies)\n      .select();\n    \n    if (companyError) {\n      console.error('❌ Erro ao inserir empresa:', companyError.message);\n      return;\n    }\n    \n    const companyId = companies[0].id;\n    console.log(`✅ Empresa criada: ${companies[0].name}`);\n    \n    // 2. Inserir filiais\n    console.log('🏢 Inserindo filiais...');\n    const branchesWithCompany = sampleData.branches.map(branch => ({\n      ...branch,\n      company_id: companyId\n    }));\n    \n    const { data: branches, error: branchError } = await supabase\n      .from('branches')\n      .insert(branchesWithCompany)\n      .select();\n    \n    if (branchError) {\n      console.error('❌ Erro ao inserir filiais:', branchError.message);\n      return;\n    }\n    \n    console.log(`✅ ${branches.length} filiais criadas`);\n    \n    // 3. Inserir clientes\n    console.log('👥 Inserindo clientes...');\n    const clientsWithRefs = sampleData.clients.map((client, index) => ({\n      ...client,\n      company_id: companyId,\n      branch_id: branches[index % branches.length].id\n    }));\n    \n    const { data: clients, error: clientError } = await supabase\n      .from('clients')\n      .insert(clientsWithRefs)\n      .select();\n    \n    if (clientError) {\n      console.error('❌ Erro ao inserir clientes:', clientError.message);\n      return;\n    }\n    \n    console.log(`✅ ${clients.length} clientes criados`);\n    \n    // 4. Inserir contratos de exemplo\n    console.log('📋 Inserindo contratos...');\n    const contracts = [\n      {\n        company_id: companyId,\n        branch_id: branches[0].id,\n        client_id: clients[0].id,\n        contract_number: 'CTR-2024-001',\n        product_description: 'Financiamento de Móveis - Sala de Estar Completa',\n        total_amount: 5000.00,\n        down_payment: 1500.00,\n        financed_amount: 3500.00,\n        installments: 12,\n        installment_amount: 291.67,\n        interest_rate: 0.0199,\n        start_date: '2024-01-15',\n        first_due_date: '2024-02-15',\n        payment_method: 'boleto'\n      },\n      {\n        company_id: companyId,\n        branch_id: branches[1].id,\n        client_id: clients[1].id,\n        contract_number: 'CTR-2024-002',\n        product_description: 'Financiamento de Eletrodomésticos',\n        total_amount: 3000.00,\n        down_payment: 900.00,\n        financed_amount: 2100.00,\n        installments: 10,\n        installment_amount: 210.00,\n        interest_rate: 0.0150,\n        start_date: '2024-02-01',\n        first_due_date: '2024-03-01',\n        payment_method: 'cartao'\n      }\n    ];\n    \n    const { data: insertedContracts, error: contractError } = await supabase\n      .from('contracts')\n      .insert(contracts)\n      .select();\n    \n    if (contractError) {\n      console.error('❌ Erro ao inserir contratos:', contractError.message);\n      return;\n    }\n    \n    console.log(`✅ ${insertedContracts.length} contratos criados`);\n    \n    // 5. Gerar parcelas para os contratos\n    console.log('💰 Gerando parcelas...');\n    \n    for (const contract of insertedContracts) {\n      const payments = [];\n      const startDate = new Date(contract.first_due_date);\n      \n      for (let i = 1; i <= contract.installments; i++) {\n        const dueDate = new Date(startDate);\n        dueDate.setMonth(startDate.getMonth() + (i - 1));\n        \n        // Simular alguns pagamentos já realizados\n        const isPaid = i <= 3; // Primeiras 3 parcelas pagas\n        const isOverdue = i === 4 && Math.random() > 0.5; // 4ª parcela pode estar em atraso\n        \n        payments.push({\n          company_id: contract.company_id,\n          branch_id: contract.branch_id,\n          contract_id: contract.id,\n          client_id: contract.client_id,\n          installment_number: i,\n          due_date: dueDate.toISOString().split('T')[0],\n          amount: contract.installment_amount,\n          paid_amount: isPaid ? contract.installment_amount : 0,\n          payment_date: isPaid ? dueDate.toISOString().split('T')[0] : null,\n          payment_method: isPaid ? contract.payment_method : null,\n          status: isPaid ? 'paid' : (isOverdue ? 'overdue' : 'pending')\n        });\n      }\n      \n      const { error: paymentError } = await supabase\n        .from('payments')\n        .insert(payments);\n      \n      if (paymentError) {\n        console.error(`❌ Erro ao inserir parcelas do contrato ${contract.contract_number}:`, paymentError.message);\n      } else {\n        console.log(`✅ ${payments.length} parcelas criadas para contrato ${contract.contract_number}`);\n      }\n    }\n    \n    // 6. Inserir notas predefinidas\n    console.log('📝 Inserindo notas predefinidas...');\n    const notesWithCompany = sampleData.predefinedNotes.map(note => ({\n      ...note,\n      company_id: companyId\n    }));\n    \n    const { error: notesError } = await supabase\n      .from('predefined_notes')\n      .insert(notesWithCompany);\n    \n    if (notesError) {\n      console.error('❌ Erro ao inserir notas:', notesError.message);\n    } else {\n      console.log(`✅ ${notesWithCompany.length} notas predefinidas criadas`);\n    }\n    \n    console.log('🎉 Dados de exemplo inseridos com sucesso!');\n    console.log('\\n📊 Resumo:');\n    console.log(`- 1 empresa: ${companies[0].name}`);\n    console.log(`- ${branches.length} filiais`);\n    console.log(`- ${clients.length} clientes`);\n    console.log(`- ${insertedContracts.length} contratos`);\n    console.log(`- ${notesWithCompany.length} notas predefinidas`);\n    \n  } catch (error) {\n    console.error('❌ Erro durante a inserção de dados:', error.message);\n    process.exit(1);\n  }\n}\n\n// Função para limpar dados de exemplo\nasync function clearSampleData() {\n  try {\n    console.log('🧹 Limpando dados de exemplo...');\n    \n    const tables = ['payments', 'contracts', 'clients', 'predefined_notes', 'branches', 'companies'];\n    \n    for (const table of tables) {\n      const { error } = await supabase\n        .from(table)\n        .delete()\n        .neq('id', '00000000-0000-0000-0000-000000000000'); // Delete all\n      \n      if (error) {\n        console.warn(`⚠️  Aviso ao limpar tabela ${table}: ${error.message}`);\n      } else {\n        console.log(`✅ Tabela ${table} limpa`);\n      }\n    }\n    \n    console.log('✅ Dados de exemplo removidos!');\n    \n  } catch (error) {\n    console.error('❌ Erro ao limpar dados:', error.message);\n  }\n}\n\n// Executar script\nif (require.main === module) {\n  const action = process.argv[2] || 'seed';\n  \n  if (action === 'clear') {\n    clearSampleData();\n  } else {\n    seedDatabase();\n  }\n}\n\nmodule.exports = { seedDatabase, clearSampleData };"],"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","ignoreList":[]}