#!/bin/bash

# Script para iniciar/reiniciar a aplica√ß√£o Finance
# Backend (Node.js) na porta 3001
# Frontend (Flutter) na porta 9100

echo "üöÄ Iniciando aplica√ß√£o Finance..."

# Fun√ß√£o para verificar se uma porta est√° em uso
check_port() {
    local port=$1
    lsof -ti:$port > /dev/null 2>&1
    return $?
}

# Fun√ß√£o para finalizar processo em uma porta
kill_port() {
    local port=$1
    local service_name=$2
    
    if check_port $port; then
        echo "‚ö†Ô∏è  $service_name j√° est√° rodando na porta $port. Finalizando..."
        lsof -ti:$port | xargs kill -9 2>/dev/null
        sleep 2
        
        if check_port $port; then
            echo "‚ùå Erro: N√£o foi poss√≠vel finalizar o processo na porta $port"
            return 1
        else
            echo "‚úÖ Processo na porta $port finalizado com sucesso"
        fi
    fi
    return 0
}

# Verificar se estamos no diret√≥rio correto
if [ ! -d "backend" ] || [ ! -d "finance_app" ]; then
    echo "‚ùå Erro: Execute este script no diret√≥rio raiz do projeto finance"
    echo "   Certifique-se de que os diret√≥rios 'backend' e 'finance_app' existem"
    exit 1
fi

# Finalizar processos existentes
echo "üîç Verificando processos ativos..."
kill_port 3001 "Backend (Node.js)"
kill_port 9100 "Frontend (Flutter)"

# Verificar depend√™ncias do backend
echo "üì¶ Verificando depend√™ncias do backend..."
if [ ! -d "backend/node_modules" ]; then
    echo "‚ö†Ô∏è  node_modules n√£o encontrado. Instalando depend√™ncias..."
    cd backend
    npm install
    cd ..
fi

# Verificar arquivo .env do backend
if [ ! -f "backend/.env" ]; then
    echo "‚ö†Ô∏è  Arquivo .env n√£o encontrado no backend"
    if [ -f "backend/.env.example" ]; then
        echo "üìã Copiando .env.example para .env..."
        cp backend/.env.example backend/.env
        echo "‚ö†Ô∏è  IMPORTANTE: Configure as vari√°veis em backend/.env antes de usar em produ√ß√£o"
    else
        echo "‚ùå Erro: Arquivo .env.example n√£o encontrado"
        exit 1
    fi
fi

# Verificar depend√™ncias do Flutter
echo "üì¶ Verificando depend√™ncias do Flutter..."
cd finance_app
if ! flutter doctor --version > /dev/null 2>&1; then
    echo "‚ùå Erro: Flutter n√£o est√° instalado ou n√£o est√° no PATH"
    exit 1
fi

flutter pub get > /dev/null 2>&1
cd ..

echo "üöÄ Iniciando servidores..."

# Iniciar backend em background
echo "üîß Iniciando backend na porta 3001..."
cd backend
npm run dev > ../backend.log 2>&1 &
BACKEND_PID=$!
cd ..

# Aguardar backend inicializar
echo "‚è≥ Aguardando backend inicializar..."
sleep 5

# Verificar se backend est√° rodando
if ! check_port 3001; then
    echo "‚ùå Erro: Backend n√£o conseguiu inicializar na porta 3001"
    echo "üìã Verifique o log: tail -f backend.log"
    kill $BACKEND_PID 2>/dev/null
    exit 1
fi

echo "‚úÖ Backend iniciado com sucesso na porta 3001"

# Iniciar frontend em background
echo "üé® Iniciando frontend na porta 9100..."
cd finance_app
flutter run -d chrome --web-port=9100 > ../frontend.log 2>&1 &
FRONTEND_PID=$!
cd ..

# Aguardar frontend inicializar
echo "‚è≥ Aguardando frontend inicializar..."
sleep 10

# Verificar se frontend est√° rodando
if ! check_port 9100; then
    echo "‚ùå Erro: Frontend n√£o conseguiu inicializar na porta 9100"
    echo "üìã Verifique o log: tail -f frontend.log"
    kill $FRONTEND_PID 2>/dev/null
    kill $BACKEND_PID 2>/dev/null
    exit 1
fi

echo "‚úÖ Frontend iniciado com sucesso na porta 9100"
echo ""
echo "üéâ Aplica√ß√£o Finance iniciada com sucesso!"
echo "üìä Backend: http://localhost:3001"
echo "üåê Frontend: http://localhost:9100"
echo "üîç Health Check: http://localhost:3001/health"
echo ""
echo "üìã Para visualizar os logs:"
echo "   Backend: tail -f backend.log"
echo "   Frontend: tail -f frontend.log"
echo ""
echo "‚ö†Ô∏è  Para parar a aplica√ß√£o, execute: ./stop_app.sh"
echo "   Ou use Ctrl+C nos terminais dos servidores"
echo ""
echo "üí° PIDs dos processos:"
echo "   Backend PID: $BACKEND_PID"
echo "   Frontend PID: $FRONTEND_PID"

# Salvar PIDs para script de parada
echo "$BACKEND_PID" > .backend_pid
echo "$FRONTEND_PID" > .frontend_pid

echo "‚úÖ Script conclu√≠do. Os servidores est√£o rodando em background."